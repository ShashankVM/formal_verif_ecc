
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38+54 (git sha1 f8d4d7128, clang 14.0.0-1ubuntu1.1 -fPIC -Os)


-- Executing script file `design_smt2.ys' --

1. Executing RTLIL frontend.
Input filename: design_prep.il

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \rvecc_encode
Used module:     \rvecc_decode
Used module:     $paramod\channel_model\DATA_WIDTH=s32'00000000000000000000000000100111

2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \rvecc_encode
Used module:     \rvecc_decode
Used module:     $paramod\channel_model\DATA_WIDTH=s32'00000000000000000000000000100111
Removed 0 unused modules.
Module top directly or indirectly contains formal properties -> setting "keep" attribute.

3. Executing FORMALFF pass.

4. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

5. Printing statistics.

=== top ===

   Number of wires:                 46
   Number of wire bits:            281
   Number of public wires:          33
   Number of public wire bits:     268
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 57
     $anyseq                        29
     $assert                         7
     $assume                         3
     $eq                             1
     $ge                             2
     $le                             2
     $logic_and                      3
     $mux                            2
     $ne                             3
     $not                            2
     $paramod\channel_model\DATA_WIDTH=s32'00000000000000000000000000100111      1
     rvecc_decode                    1
     rvecc_encode                    1

=== rvecc_encode ===

   Number of wires:                 83
   Number of wire bits:            125
   Number of public wires:           3
   Number of public wire bits:      45
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 87
     $reduce_xor                     2
     $xor                           85

=== rvecc_decode ===

   Number of wires:                105
   Number of wire bits:            337
   Number of public wires:          12
   Number of public wire bits:     206
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                143
     $and                            4
     $eq                            40
     $mux                            1
     $not                            2
     $reduce_bool                    1
     $reduce_xor                     2
     $xor                           93

=== $paramod\channel_model\DATA_WIDTH=s32'00000000000000000000000000100111 ===

   Number of wires:                 21
   Number of wire bits:            499
   Number of public wires:           5
   Number of public wire bits:      91
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 17
     $and                            2
     $logic_not                      2
     $mux                            1
     $neg                            2
     $not                            2
     $or                             2
     $shift                          4
     $shiftx                         2

=== design hierarchy ===

   top                               1
     $paramod\channel_model\DATA_WIDTH=s32'00000000000000000000000000100111      1
     rvecc_decode                    1
     rvecc_encode                    1

   Number of wires:                255
   Number of wire bits:           1242
   Number of public wires:          53
   Number of public wire bits:     610
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                301
     $and                            6
     $anyseq                        29
     $assert                         7
     $assume                         3
     $eq                            41
     $ge                             2
     $le                             2
     $logic_and                      3
     $logic_not                      2
     $mux                            4
     $ne                             3
     $neg                            2
     $not                            6
     $or                             2
     $reduce_bool                    1
     $reduce_xor                     4
     $shift                          4
     $shiftx                         2
     $xor                          178

6. Executing SMT2 backend.

6.1. Executing BMUXMAP pass.

6.2. Executing DEMUXMAP pass.
Creating SMT-LIBv2 representation of module $paramod\channel_model\DATA_WIDTH=s32'00000000000000000000000000100111.
Creating SMT-LIBv2 representation of module rvecc_decode.
Creating SMT-LIBv2 representation of module rvecc_encode.
Creating SMT-LIBv2 representation of module top.

End of script. Logfile hash: f8cfcd1465, CPU: user 0.02s system 0.00s, MEM: 15.05 MB peak
Yosys 0.38+54 (git sha1 f8d4d7128, clang 14.0.0-1ubuntu1.1 -fPIC -Os)
Time spent: 65% 2x write_smt2 (0 sec), 27% 2x read_ilang (0 sec), ...
