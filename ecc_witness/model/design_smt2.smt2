; SMT-LIBv2 description generated by Yosys 0.26 (git sha1 7e588664e, clang 10.0.0-4ubuntu1 -fPIC -Os)
; yosys-smt2-module channel_model
(declare-sort |channel_model_s| 0)
(declare-fun |channel_model_is| (|channel_model_s|) Bool)
(declare-fun |channel_model#0| (|channel_model_s|) Bool) ; \sed_ded
; yosys-smt2-input sed_ded 1
; yosys-smt2-wire sed_ded 1
; yosys-smt2-witness {"offset": 0, "path": ["\\sed_ded"], "smtname": "sed_ded", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |channel_model_n sed_ded| ((state |channel_model_s|)) Bool (|channel_model#0| state))
(declare-fun |channel_model#1| (|channel_model_s|) (_ BitVec 6)) ; \error_pos2
; yosys-smt2-input error_pos2 6
; yosys-smt2-wire error_pos2 6
; yosys-smt2-witness {"offset": 0, "path": ["\\error_pos2"], "smtname": "error_pos2", "smtoffset": 0, "type": "input", "width": 6}
(define-fun |channel_model_n error_pos2| ((state |channel_model_s|)) (_ BitVec 6) (|channel_model#1| state))
(declare-fun |channel_model#2| (|channel_model_s|) (_ BitVec 6)) ; \error_pos1
; yosys-smt2-input error_pos1 6
; yosys-smt2-wire error_pos1 6
; yosys-smt2-witness {"offset": 0, "path": ["\\error_pos1"], "smtname": "error_pos1", "smtoffset": 0, "type": "input", "width": 6}
(define-fun |channel_model_n error_pos1| ((state |channel_model_s|)) (_ BitVec 6) (|channel_model#2| state))
(declare-fun |channel_model#3| (|channel_model_s|) (_ BitVec 1)) ; \din [0]
(declare-fun |channel_model#4| (|channel_model_s|) (_ BitVec 1)) ; \din [1]
(define-fun |channel_model#5| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#4| state) (|channel_model#3| state))) ; $auto$bmuxmap.cc:84:execute$1144 [0]
(declare-fun |channel_model#6| (|channel_model_s|) (_ BitVec 1)) ; \din [2]
(declare-fun |channel_model#7| (|channel_model_s|) (_ BitVec 1)) ; \din [3]
(define-fun |channel_model#8| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#7| state) (|channel_model#6| state))) ; $auto$bmuxmap.cc:84:execute$1144 [1]
(define-fun |channel_model#9| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#8| state) (|channel_model#5| state))) ; $auto$bmuxmap.cc:84:execute$1177 [0]
(declare-fun |channel_model#10| (|channel_model_s|) (_ BitVec 1)) ; \din [4]
(declare-fun |channel_model#11| (|channel_model_s|) (_ BitVec 1)) ; \din [5]
(define-fun |channel_model#12| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#11| state) (|channel_model#10| state))) ; $auto$bmuxmap.cc:84:execute$1144 [2]
(declare-fun |channel_model#13| (|channel_model_s|) (_ BitVec 1)) ; \din [6]
(declare-fun |channel_model#14| (|channel_model_s|) (_ BitVec 1)) ; \din [7]
(define-fun |channel_model#15| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#14| state) (|channel_model#13| state))) ; $auto$bmuxmap.cc:84:execute$1144 [3]
(define-fun |channel_model#16| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#15| state) (|channel_model#12| state))) ; $auto$bmuxmap.cc:84:execute$1177 [1]
(define-fun |channel_model#17| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#2| state)) #b1) (|channel_model#16| state) (|channel_model#9| state))) ; $auto$bmuxmap.cc:84:execute$1194 [0]
(declare-fun |channel_model#18| (|channel_model_s|) (_ BitVec 1)) ; \din [8]
(declare-fun |channel_model#19| (|channel_model_s|) (_ BitVec 1)) ; \din [9]
(define-fun |channel_model#20| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#19| state) (|channel_model#18| state))) ; $auto$bmuxmap.cc:84:execute$1144 [4]
(declare-fun |channel_model#21| (|channel_model_s|) (_ BitVec 1)) ; \din [10]
(declare-fun |channel_model#22| (|channel_model_s|) (_ BitVec 1)) ; \din [11]
(define-fun |channel_model#23| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#22| state) (|channel_model#21| state))) ; $auto$bmuxmap.cc:84:execute$1144 [5]
(define-fun |channel_model#24| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#23| state) (|channel_model#20| state))) ; $auto$bmuxmap.cc:84:execute$1177 [2]
(declare-fun |channel_model#25| (|channel_model_s|) (_ BitVec 1)) ; \din [12]
(declare-fun |channel_model#26| (|channel_model_s|) (_ BitVec 1)) ; \din [13]
(define-fun |channel_model#27| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#26| state) (|channel_model#25| state))) ; $auto$bmuxmap.cc:84:execute$1144 [6]
(declare-fun |channel_model#28| (|channel_model_s|) (_ BitVec 1)) ; \din [14]
(declare-fun |channel_model#29| (|channel_model_s|) (_ BitVec 1)) ; \din [15]
(define-fun |channel_model#30| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#29| state) (|channel_model#28| state))) ; $auto$bmuxmap.cc:84:execute$1144 [7]
(define-fun |channel_model#31| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#30| state) (|channel_model#27| state))) ; $auto$bmuxmap.cc:84:execute$1177 [3]
(define-fun |channel_model#32| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#2| state)) #b1) (|channel_model#31| state) (|channel_model#24| state))) ; $auto$bmuxmap.cc:84:execute$1194 [1]
(define-fun |channel_model#33| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 3 3) (|channel_model#2| state)) #b1) (|channel_model#32| state) (|channel_model#17| state))) ; $auto$bmuxmap.cc:84:execute$1203 [0]
(declare-fun |channel_model#34| (|channel_model_s|) (_ BitVec 1)) ; \din [16]
(declare-fun |channel_model#35| (|channel_model_s|) (_ BitVec 1)) ; \din [17]
(define-fun |channel_model#36| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#35| state) (|channel_model#34| state))) ; $auto$bmuxmap.cc:84:execute$1144 [8]
(declare-fun |channel_model#37| (|channel_model_s|) (_ BitVec 1)) ; \din [18]
(declare-fun |channel_model#38| (|channel_model_s|) (_ BitVec 1)) ; \din [19]
(define-fun |channel_model#39| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#38| state) (|channel_model#37| state))) ; $auto$bmuxmap.cc:84:execute$1144 [9]
(define-fun |channel_model#40| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#39| state) (|channel_model#36| state))) ; $auto$bmuxmap.cc:84:execute$1177 [4]
(declare-fun |channel_model#41| (|channel_model_s|) (_ BitVec 1)) ; \din [20]
(declare-fun |channel_model#42| (|channel_model_s|) (_ BitVec 1)) ; \din [21]
(define-fun |channel_model#43| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#42| state) (|channel_model#41| state))) ; $auto$bmuxmap.cc:84:execute$1144 [10]
(declare-fun |channel_model#44| (|channel_model_s|) (_ BitVec 1)) ; \din [22]
(declare-fun |channel_model#45| (|channel_model_s|) (_ BitVec 1)) ; \din [23]
(define-fun |channel_model#46| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#45| state) (|channel_model#44| state))) ; $auto$bmuxmap.cc:84:execute$1144 [11]
(define-fun |channel_model#47| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#46| state) (|channel_model#43| state))) ; $auto$bmuxmap.cc:84:execute$1177 [5]
(define-fun |channel_model#48| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#2| state)) #b1) (|channel_model#47| state) (|channel_model#40| state))) ; $auto$bmuxmap.cc:84:execute$1194 [2]
(declare-fun |channel_model#49| (|channel_model_s|) (_ BitVec 1)) ; \din [24]
(declare-fun |channel_model#50| (|channel_model_s|) (_ BitVec 1)) ; \din [25]
(define-fun |channel_model#51| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#50| state) (|channel_model#49| state))) ; $auto$bmuxmap.cc:84:execute$1144 [12]
(declare-fun |channel_model#52| (|channel_model_s|) (_ BitVec 1)) ; \din [26]
(declare-fun |channel_model#53| (|channel_model_s|) (_ BitVec 1)) ; \din [27]
(define-fun |channel_model#54| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#53| state) (|channel_model#52| state))) ; $auto$bmuxmap.cc:84:execute$1144 [13]
(define-fun |channel_model#55| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#54| state) (|channel_model#51| state))) ; $auto$bmuxmap.cc:84:execute$1177 [6]
(declare-fun |channel_model#56| (|channel_model_s|) (_ BitVec 1)) ; \din [28]
(declare-fun |channel_model#57| (|channel_model_s|) (_ BitVec 1)) ; \din [29]
(define-fun |channel_model#58| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#57| state) (|channel_model#56| state))) ; $auto$bmuxmap.cc:84:execute$1144 [14]
(declare-fun |channel_model#59| (|channel_model_s|) (_ BitVec 1)) ; \din [30]
(declare-fun |channel_model#60| (|channel_model_s|) (_ BitVec 1)) ; \din [31]
(define-fun |channel_model#61| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#60| state) (|channel_model#59| state))) ; $auto$bmuxmap.cc:84:execute$1144 [15]
(define-fun |channel_model#62| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#61| state) (|channel_model#58| state))) ; $auto$bmuxmap.cc:84:execute$1177 [7]
(define-fun |channel_model#63| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#2| state)) #b1) (|channel_model#62| state) (|channel_model#55| state))) ; $auto$bmuxmap.cc:84:execute$1194 [3]
(define-fun |channel_model#64| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 3 3) (|channel_model#2| state)) #b1) (|channel_model#63| state) (|channel_model#48| state))) ; $auto$bmuxmap.cc:84:execute$1203 [1]
(define-fun |channel_model#65| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 4 4) (|channel_model#2| state)) #b1) (|channel_model#64| state) (|channel_model#33| state))) ; $auto$bmuxmap.cc:84:execute$1208 [0]
(declare-fun |channel_model#66| (|channel_model_s|) (_ BitVec 1)) ; \din [32]
(declare-fun |channel_model#67| (|channel_model_s|) (_ BitVec 1)) ; \din [33]
(define-fun |channel_model#68| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#67| state) (|channel_model#66| state))) ; $auto$bmuxmap.cc:84:execute$1144 [16]
(declare-fun |channel_model#69| (|channel_model_s|) (_ BitVec 1)) ; \din [34]
(declare-fun |channel_model#70| (|channel_model_s|) (_ BitVec 1)) ; \din [35]
(define-fun |channel_model#71| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#70| state) (|channel_model#69| state))) ; $auto$bmuxmap.cc:84:execute$1144 [17]
(define-fun |channel_model#72| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#71| state) (|channel_model#68| state))) ; $auto$bmuxmap.cc:84:execute$1177 [8]
(declare-fun |channel_model#73| (|channel_model_s|) (_ BitVec 1)) ; \din [36]
(declare-fun |channel_model#74| (|channel_model_s|) (_ BitVec 1)) ; \din [37]
(define-fun |channel_model#75| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) (|channel_model#74| state) (|channel_model#73| state))) ; $auto$bmuxmap.cc:84:execute$1144 [18]
(declare-fun |channel_model#76| (|channel_model_s|) (_ BitVec 1)) ; \din [38]
; yosys-smt2-anyseq channel_model#77 25 $auto$setundef.cc:533:execute$1005
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_1005"], "smtname": 77, "smtoffset": 0, "type": "seq", "width": 25}
(declare-fun |channel_model#77| (|channel_model_s|) (_ BitVec 25)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_1005
(define-fun |channel_model#78| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) ((_ extract 0 0) (|channel_model#77| state)) (|channel_model#76| state))) ; $auto$bmuxmap.cc:84:execute$1144 [19]
(define-fun |channel_model#79| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#78| state) (|channel_model#75| state))) ; $auto$bmuxmap.cc:84:execute$1177 [9]
(define-fun |channel_model#80| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#2| state)) #b1) (|channel_model#79| state) (|channel_model#72| state))) ; $auto$bmuxmap.cc:84:execute$1194 [4]
(define-fun |channel_model#81| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) ((_ extract 2 2) (|channel_model#77| state)) ((_ extract 1 1) (|channel_model#77| state)))) ; $auto$bmuxmap.cc:84:execute$1144 [20]
(define-fun |channel_model#82| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) ((_ extract 4 4) (|channel_model#77| state)) ((_ extract 3 3) (|channel_model#77| state)))) ; $auto$bmuxmap.cc:84:execute$1144 [21]
(define-fun |channel_model#83| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#82| state) (|channel_model#81| state))) ; $auto$bmuxmap.cc:84:execute$1177 [10]
(define-fun |channel_model#84| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) ((_ extract 6 6) (|channel_model#77| state)) ((_ extract 5 5) (|channel_model#77| state)))) ; $auto$bmuxmap.cc:84:execute$1144 [22]
(define-fun |channel_model#85| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) ((_ extract 8 8) (|channel_model#77| state)) ((_ extract 7 7) (|channel_model#77| state)))) ; $auto$bmuxmap.cc:84:execute$1144 [23]
(define-fun |channel_model#86| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#85| state) (|channel_model#84| state))) ; $auto$bmuxmap.cc:84:execute$1177 [11]
(define-fun |channel_model#87| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#2| state)) #b1) (|channel_model#86| state) (|channel_model#83| state))) ; $auto$bmuxmap.cc:84:execute$1194 [5]
(define-fun |channel_model#88| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 3 3) (|channel_model#2| state)) #b1) (|channel_model#87| state) (|channel_model#80| state))) ; $auto$bmuxmap.cc:84:execute$1203 [2]
(define-fun |channel_model#89| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) ((_ extract 10 10) (|channel_model#77| state)) ((_ extract 9 9) (|channel_model#77| state)))) ; $auto$bmuxmap.cc:84:execute$1144 [24]
(define-fun |channel_model#90| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) ((_ extract 12 12) (|channel_model#77| state)) ((_ extract 11 11) (|channel_model#77| state)))) ; $auto$bmuxmap.cc:84:execute$1144 [25]
(define-fun |channel_model#91| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#90| state) (|channel_model#89| state))) ; $auto$bmuxmap.cc:84:execute$1177 [12]
(define-fun |channel_model#92| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) ((_ extract 14 14) (|channel_model#77| state)) ((_ extract 13 13) (|channel_model#77| state)))) ; $auto$bmuxmap.cc:84:execute$1144 [26]
(define-fun |channel_model#93| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) ((_ extract 16 16) (|channel_model#77| state)) ((_ extract 15 15) (|channel_model#77| state)))) ; $auto$bmuxmap.cc:84:execute$1144 [27]
(define-fun |channel_model#94| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#93| state) (|channel_model#92| state))) ; $auto$bmuxmap.cc:84:execute$1177 [13]
(define-fun |channel_model#95| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#2| state)) #b1) (|channel_model#94| state) (|channel_model#91| state))) ; $auto$bmuxmap.cc:84:execute$1194 [6]
(define-fun |channel_model#96| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) ((_ extract 18 18) (|channel_model#77| state)) ((_ extract 17 17) (|channel_model#77| state)))) ; $auto$bmuxmap.cc:84:execute$1144 [28]
(define-fun |channel_model#97| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) ((_ extract 20 20) (|channel_model#77| state)) ((_ extract 19 19) (|channel_model#77| state)))) ; $auto$bmuxmap.cc:84:execute$1144 [29]
(define-fun |channel_model#98| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#97| state) (|channel_model#96| state))) ; $auto$bmuxmap.cc:84:execute$1177 [14]
(define-fun |channel_model#99| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) ((_ extract 22 22) (|channel_model#77| state)) ((_ extract 21 21) (|channel_model#77| state)))) ; $auto$bmuxmap.cc:84:execute$1144 [30]
(define-fun |channel_model#100| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#2| state)) #b1) ((_ extract 24 24) (|channel_model#77| state)) ((_ extract 23 23) (|channel_model#77| state)))) ; $auto$bmuxmap.cc:84:execute$1144 [31]
(define-fun |channel_model#101| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#2| state)) #b1) (|channel_model#100| state) (|channel_model#99| state))) ; $auto$bmuxmap.cc:84:execute$1177 [15]
(define-fun |channel_model#102| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#2| state)) #b1) (|channel_model#101| state) (|channel_model#98| state))) ; $auto$bmuxmap.cc:84:execute$1194 [7]
(define-fun |channel_model#103| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 3 3) (|channel_model#2| state)) #b1) (|channel_model#102| state) (|channel_model#95| state))) ; $auto$bmuxmap.cc:84:execute$1203 [3]
(define-fun |channel_model#104| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 4 4) (|channel_model#2| state)) #b1) (|channel_model#103| state) (|channel_model#88| state))) ; $auto$bmuxmap.cc:84:execute$1208 [1]
(define-fun |channel_model#105| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 5 5) (|channel_model#2| state)) #b1) (|channel_model#104| state) (|channel_model#65| state))) ; $auto$bmuxmap.cc:84:execute$1211
(define-fun |channel_model#106| ((state |channel_model_s|)) (_ BitVec 1) (bvnot (|channel_model#105| state))) ; $verific$n46$396
(define-fun |channel_model#107| ((state |channel_model_s|)) (_ BitVec 39) (bvshl #b000000000000000000000000000000000000001 (concat #b000000000000000000000000000000000 (|channel_model#2| state)))) ; $auto$wreduce.cc:455:run$938 [38:0]
(define-fun |channel_model#108| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#3| state))) ; $verific$n151$436
(define-fun |channel_model#109| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#4| state))) ; $verific$n150$435
(define-fun |channel_model#110| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#6| state))) ; $verific$n149$434
(define-fun |channel_model#111| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 3 3) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#7| state))) ; $verific$n148$433
(define-fun |channel_model#112| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 4 4) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#10| state))) ; $verific$n147$432
(define-fun |channel_model#113| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 5 5) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#11| state))) ; $verific$n146$431
(define-fun |channel_model#114| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 6 6) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#13| state))) ; $verific$n145$430
(define-fun |channel_model#115| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 7 7) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#14| state))) ; $verific$n144$429
(define-fun |channel_model#116| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 8 8) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#18| state))) ; $verific$n143$428
(define-fun |channel_model#117| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 9 9) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#19| state))) ; $verific$n142$427
(define-fun |channel_model#118| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 10 10) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#21| state))) ; $verific$n141$426
(define-fun |channel_model#119| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 11 11) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#22| state))) ; $verific$n140$425
(define-fun |channel_model#120| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 12 12) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#25| state))) ; $verific$n139$424
(define-fun |channel_model#121| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 13 13) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#26| state))) ; $verific$n138$423
(define-fun |channel_model#122| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 14 14) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#28| state))) ; $verific$n137$422
(define-fun |channel_model#123| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 15 15) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#29| state))) ; $verific$n136$421
(define-fun |channel_model#124| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 16 16) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#34| state))) ; $verific$n135$420
(define-fun |channel_model#125| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 17 17) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#35| state))) ; $verific$n134$419
(define-fun |channel_model#126| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 18 18) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#37| state))) ; $verific$n133$418
(define-fun |channel_model#127| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 19 19) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#38| state))) ; $verific$n132$417
(define-fun |channel_model#128| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 20 20) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#41| state))) ; $verific$n131$416
(define-fun |channel_model#129| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 21 21) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#42| state))) ; $verific$n130$415
(define-fun |channel_model#130| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 22 22) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#44| state))) ; $verific$n129$414
(define-fun |channel_model#131| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 23 23) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#45| state))) ; $verific$n128$413
(define-fun |channel_model#132| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 24 24) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#49| state))) ; $verific$n127$412
(define-fun |channel_model#133| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 25 25) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#50| state))) ; $verific$n126$411
(define-fun |channel_model#134| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 26 26) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#52| state))) ; $verific$n125$410
(define-fun |channel_model#135| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 27 27) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#53| state))) ; $verific$n124$409
(define-fun |channel_model#136| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 28 28) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#56| state))) ; $verific$n123$408
(define-fun |channel_model#137| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 29 29) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#57| state))) ; $verific$n122$407
(define-fun |channel_model#138| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 30 30) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#59| state))) ; $verific$n121$406
(define-fun |channel_model#139| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 31 31) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#60| state))) ; $verific$n120$405
(define-fun |channel_model#140| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 32 32) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#66| state))) ; $verific$n119$404
(define-fun |channel_model#141| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 33 33) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#67| state))) ; $verific$n118$403
(define-fun |channel_model#142| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 34 34) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#69| state))) ; $verific$n117$402
(define-fun |channel_model#143| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 35 35) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#70| state))) ; $verific$n116$401
(define-fun |channel_model#144| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 36 36) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#73| state))) ; $verific$n115$400
(define-fun |channel_model#145| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 37 37) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#74| state))) ; $verific$n114$399
(define-fun |channel_model#146| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 38 38) (|channel_model#107| state)) #b1) (|channel_model#106| state) (|channel_model#76| state))) ; $verific$n113$398
(define-fun |channel_model#147| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#4| state) (|channel_model#3| state))) ; $auto$bmuxmap.cc:84:execute$1075 [0]
(define-fun |channel_model#148| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#7| state) (|channel_model#6| state))) ; $auto$bmuxmap.cc:84:execute$1075 [1]
(define-fun |channel_model#149| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#148| state) (|channel_model#147| state))) ; $auto$bmuxmap.cc:84:execute$1108 [0]
(define-fun |channel_model#150| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#11| state) (|channel_model#10| state))) ; $auto$bmuxmap.cc:84:execute$1075 [2]
(define-fun |channel_model#151| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#14| state) (|channel_model#13| state))) ; $auto$bmuxmap.cc:84:execute$1075 [3]
(define-fun |channel_model#152| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#151| state) (|channel_model#150| state))) ; $auto$bmuxmap.cc:84:execute$1108 [1]
(define-fun |channel_model#153| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#1| state)) #b1) (|channel_model#152| state) (|channel_model#149| state))) ; $auto$bmuxmap.cc:84:execute$1125 [0]
(define-fun |channel_model#154| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#19| state) (|channel_model#18| state))) ; $auto$bmuxmap.cc:84:execute$1075 [4]
(define-fun |channel_model#155| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#22| state) (|channel_model#21| state))) ; $auto$bmuxmap.cc:84:execute$1075 [5]
(define-fun |channel_model#156| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#155| state) (|channel_model#154| state))) ; $auto$bmuxmap.cc:84:execute$1108 [2]
(define-fun |channel_model#157| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#26| state) (|channel_model#25| state))) ; $auto$bmuxmap.cc:84:execute$1075 [6]
(define-fun |channel_model#158| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#29| state) (|channel_model#28| state))) ; $auto$bmuxmap.cc:84:execute$1075 [7]
(define-fun |channel_model#159| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#158| state) (|channel_model#157| state))) ; $auto$bmuxmap.cc:84:execute$1108 [3]
(define-fun |channel_model#160| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#1| state)) #b1) (|channel_model#159| state) (|channel_model#156| state))) ; $auto$bmuxmap.cc:84:execute$1125 [1]
(define-fun |channel_model#161| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 3 3) (|channel_model#1| state)) #b1) (|channel_model#160| state) (|channel_model#153| state))) ; $auto$bmuxmap.cc:84:execute$1134 [0]
(define-fun |channel_model#162| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#35| state) (|channel_model#34| state))) ; $auto$bmuxmap.cc:84:execute$1075 [8]
(define-fun |channel_model#163| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#38| state) (|channel_model#37| state))) ; $auto$bmuxmap.cc:84:execute$1075 [9]
(define-fun |channel_model#164| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#163| state) (|channel_model#162| state))) ; $auto$bmuxmap.cc:84:execute$1108 [4]
(define-fun |channel_model#165| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#42| state) (|channel_model#41| state))) ; $auto$bmuxmap.cc:84:execute$1075 [10]
(define-fun |channel_model#166| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#45| state) (|channel_model#44| state))) ; $auto$bmuxmap.cc:84:execute$1075 [11]
(define-fun |channel_model#167| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#166| state) (|channel_model#165| state))) ; $auto$bmuxmap.cc:84:execute$1108 [5]
(define-fun |channel_model#168| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#1| state)) #b1) (|channel_model#167| state) (|channel_model#164| state))) ; $auto$bmuxmap.cc:84:execute$1125 [2]
(define-fun |channel_model#169| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#50| state) (|channel_model#49| state))) ; $auto$bmuxmap.cc:84:execute$1075 [12]
(define-fun |channel_model#170| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#53| state) (|channel_model#52| state))) ; $auto$bmuxmap.cc:84:execute$1075 [13]
(define-fun |channel_model#171| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#170| state) (|channel_model#169| state))) ; $auto$bmuxmap.cc:84:execute$1108 [6]
(define-fun |channel_model#172| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#57| state) (|channel_model#56| state))) ; $auto$bmuxmap.cc:84:execute$1075 [14]
(define-fun |channel_model#173| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#60| state) (|channel_model#59| state))) ; $auto$bmuxmap.cc:84:execute$1075 [15]
(define-fun |channel_model#174| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#173| state) (|channel_model#172| state))) ; $auto$bmuxmap.cc:84:execute$1108 [7]
(define-fun |channel_model#175| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#1| state)) #b1) (|channel_model#174| state) (|channel_model#171| state))) ; $auto$bmuxmap.cc:84:execute$1125 [3]
(define-fun |channel_model#176| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 3 3) (|channel_model#1| state)) #b1) (|channel_model#175| state) (|channel_model#168| state))) ; $auto$bmuxmap.cc:84:execute$1134 [1]
(define-fun |channel_model#177| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 4 4) (|channel_model#1| state)) #b1) (|channel_model#176| state) (|channel_model#161| state))) ; $auto$bmuxmap.cc:84:execute$1139 [0]
(define-fun |channel_model#178| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#67| state) (|channel_model#66| state))) ; $auto$bmuxmap.cc:84:execute$1075 [16]
(define-fun |channel_model#179| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#70| state) (|channel_model#69| state))) ; $auto$bmuxmap.cc:84:execute$1075 [17]
(define-fun |channel_model#180| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#179| state) (|channel_model#178| state))) ; $auto$bmuxmap.cc:84:execute$1108 [8]
(define-fun |channel_model#181| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) (|channel_model#74| state) (|channel_model#73| state))) ; $auto$bmuxmap.cc:84:execute$1075 [18]
; yosys-smt2-anyseq channel_model#182 25 $auto$setundef.cc:533:execute$1007
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_1007"], "smtname": 182, "smtoffset": 0, "type": "seq", "width": 25}
(declare-fun |channel_model#182| (|channel_model_s|) (_ BitVec 25)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_1007
(define-fun |channel_model#183| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) ((_ extract 0 0) (|channel_model#182| state)) (|channel_model#76| state))) ; $auto$bmuxmap.cc:84:execute$1075 [19]
(define-fun |channel_model#184| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#183| state) (|channel_model#181| state))) ; $auto$bmuxmap.cc:84:execute$1108 [9]
(define-fun |channel_model#185| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#1| state)) #b1) (|channel_model#184| state) (|channel_model#180| state))) ; $auto$bmuxmap.cc:84:execute$1125 [4]
(define-fun |channel_model#186| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) ((_ extract 2 2) (|channel_model#182| state)) ((_ extract 1 1) (|channel_model#182| state)))) ; $auto$bmuxmap.cc:84:execute$1075 [20]
(define-fun |channel_model#187| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) ((_ extract 4 4) (|channel_model#182| state)) ((_ extract 3 3) (|channel_model#182| state)))) ; $auto$bmuxmap.cc:84:execute$1075 [21]
(define-fun |channel_model#188| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#187| state) (|channel_model#186| state))) ; $auto$bmuxmap.cc:84:execute$1108 [10]
(define-fun |channel_model#189| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) ((_ extract 6 6) (|channel_model#182| state)) ((_ extract 5 5) (|channel_model#182| state)))) ; $auto$bmuxmap.cc:84:execute$1075 [22]
(define-fun |channel_model#190| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) ((_ extract 8 8) (|channel_model#182| state)) ((_ extract 7 7) (|channel_model#182| state)))) ; $auto$bmuxmap.cc:84:execute$1075 [23]
(define-fun |channel_model#191| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#190| state) (|channel_model#189| state))) ; $auto$bmuxmap.cc:84:execute$1108 [11]
(define-fun |channel_model#192| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#1| state)) #b1) (|channel_model#191| state) (|channel_model#188| state))) ; $auto$bmuxmap.cc:84:execute$1125 [5]
(define-fun |channel_model#193| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 3 3) (|channel_model#1| state)) #b1) (|channel_model#192| state) (|channel_model#185| state))) ; $auto$bmuxmap.cc:84:execute$1134 [2]
(define-fun |channel_model#194| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) ((_ extract 10 10) (|channel_model#182| state)) ((_ extract 9 9) (|channel_model#182| state)))) ; $auto$bmuxmap.cc:84:execute$1075 [24]
(define-fun |channel_model#195| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) ((_ extract 12 12) (|channel_model#182| state)) ((_ extract 11 11) (|channel_model#182| state)))) ; $auto$bmuxmap.cc:84:execute$1075 [25]
(define-fun |channel_model#196| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#195| state) (|channel_model#194| state))) ; $auto$bmuxmap.cc:84:execute$1108 [12]
(define-fun |channel_model#197| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) ((_ extract 14 14) (|channel_model#182| state)) ((_ extract 13 13) (|channel_model#182| state)))) ; $auto$bmuxmap.cc:84:execute$1075 [26]
(define-fun |channel_model#198| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) ((_ extract 16 16) (|channel_model#182| state)) ((_ extract 15 15) (|channel_model#182| state)))) ; $auto$bmuxmap.cc:84:execute$1075 [27]
(define-fun |channel_model#199| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#198| state) (|channel_model#197| state))) ; $auto$bmuxmap.cc:84:execute$1108 [13]
(define-fun |channel_model#200| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#1| state)) #b1) (|channel_model#199| state) (|channel_model#196| state))) ; $auto$bmuxmap.cc:84:execute$1125 [6]
(define-fun |channel_model#201| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) ((_ extract 18 18) (|channel_model#182| state)) ((_ extract 17 17) (|channel_model#182| state)))) ; $auto$bmuxmap.cc:84:execute$1075 [28]
(define-fun |channel_model#202| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) ((_ extract 20 20) (|channel_model#182| state)) ((_ extract 19 19) (|channel_model#182| state)))) ; $auto$bmuxmap.cc:84:execute$1075 [29]
(define-fun |channel_model#203| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#202| state) (|channel_model#201| state))) ; $auto$bmuxmap.cc:84:execute$1108 [14]
(define-fun |channel_model#204| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) ((_ extract 22 22) (|channel_model#182| state)) ((_ extract 21 21) (|channel_model#182| state)))) ; $auto$bmuxmap.cc:84:execute$1075 [30]
(define-fun |channel_model#205| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#1| state)) #b1) ((_ extract 24 24) (|channel_model#182| state)) ((_ extract 23 23) (|channel_model#182| state)))) ; $auto$bmuxmap.cc:84:execute$1075 [31]
(define-fun |channel_model#206| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#1| state)) #b1) (|channel_model#205| state) (|channel_model#204| state))) ; $auto$bmuxmap.cc:84:execute$1108 [15]
(define-fun |channel_model#207| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#1| state)) #b1) (|channel_model#206| state) (|channel_model#203| state))) ; $auto$bmuxmap.cc:84:execute$1125 [7]
(define-fun |channel_model#208| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 3 3) (|channel_model#1| state)) #b1) (|channel_model#207| state) (|channel_model#200| state))) ; $auto$bmuxmap.cc:84:execute$1134 [3]
(define-fun |channel_model#209| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 4 4) (|channel_model#1| state)) #b1) (|channel_model#208| state) (|channel_model#193| state))) ; $auto$bmuxmap.cc:84:execute$1139 [1]
(define-fun |channel_model#210| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 5 5) (|channel_model#1| state)) #b1) (|channel_model#209| state) (|channel_model#177| state))) ; $auto$bmuxmap.cc:84:execute$1142
(define-fun |channel_model#211| ((state |channel_model_s|)) (_ BitVec 1) (bvnot (|channel_model#210| state))) ; $verific$n260$438
(define-fun |channel_model#212| ((state |channel_model_s|)) (_ BitVec 39) (bvshl #b000000000000000000000000000000000000001 (concat #b000000000000000000000000000000000 (|channel_model#1| state)))) ; $auto$wreduce.cc:455:run$937 [38:0]
(define-fun |channel_model#213| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#108| state))) ; $verific$n365$478
(define-fun |channel_model#214| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 1 1) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#109| state))) ; $verific$n364$477
(define-fun |channel_model#215| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 2 2) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#110| state))) ; $verific$n363$476
(define-fun |channel_model#216| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 3 3) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#111| state))) ; $verific$n362$475
(define-fun |channel_model#217| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 4 4) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#112| state))) ; $verific$n361$474
(define-fun |channel_model#218| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 5 5) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#113| state))) ; $verific$n360$473
(define-fun |channel_model#219| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 6 6) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#114| state))) ; $verific$n359$472
(define-fun |channel_model#220| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 7 7) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#115| state))) ; $verific$n358$471
(define-fun |channel_model#221| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 8 8) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#116| state))) ; $verific$n357$470
(define-fun |channel_model#222| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 9 9) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#117| state))) ; $verific$n356$469
(define-fun |channel_model#223| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 10 10) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#118| state))) ; $verific$n355$468
(define-fun |channel_model#224| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 11 11) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#119| state))) ; $verific$n354$467
(define-fun |channel_model#225| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 12 12) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#120| state))) ; $verific$n353$466
(define-fun |channel_model#226| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 13 13) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#121| state))) ; $verific$n352$465
(define-fun |channel_model#227| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 14 14) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#122| state))) ; $verific$n351$464
(define-fun |channel_model#228| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 15 15) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#123| state))) ; $verific$n350$463
(define-fun |channel_model#229| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 16 16) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#124| state))) ; $verific$n349$462
(define-fun |channel_model#230| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 17 17) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#125| state))) ; $verific$n348$461
(define-fun |channel_model#231| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 18 18) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#126| state))) ; $verific$n347$460
(define-fun |channel_model#232| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 19 19) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#127| state))) ; $verific$n346$459
(define-fun |channel_model#233| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 20 20) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#128| state))) ; $verific$n345$458
(define-fun |channel_model#234| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 21 21) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#129| state))) ; $verific$n344$457
(define-fun |channel_model#235| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 22 22) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#130| state))) ; $verific$n343$456
(define-fun |channel_model#236| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 23 23) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#131| state))) ; $verific$n342$455
(define-fun |channel_model#237| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 24 24) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#132| state))) ; $verific$n341$454
(define-fun |channel_model#238| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 25 25) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#133| state))) ; $verific$n340$453
(define-fun |channel_model#239| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 26 26) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#134| state))) ; $verific$n339$452
(define-fun |channel_model#240| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 27 27) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#135| state))) ; $verific$n338$451
(define-fun |channel_model#241| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 28 28) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#136| state))) ; $verific$n337$450
(define-fun |channel_model#242| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 29 29) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#137| state))) ; $verific$n336$449
(define-fun |channel_model#243| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 30 30) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#138| state))) ; $verific$n335$448
(define-fun |channel_model#244| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 31 31) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#139| state))) ; $verific$n334$447
(define-fun |channel_model#245| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 32 32) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#140| state))) ; $verific$n333$446
(define-fun |channel_model#246| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 33 33) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#141| state))) ; $verific$n332$445
(define-fun |channel_model#247| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 34 34) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#142| state))) ; $verific$n331$444
(define-fun |channel_model#248| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 35 35) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#143| state))) ; $verific$n330$443
(define-fun |channel_model#249| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 36 36) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#144| state))) ; $verific$n329$442
(define-fun |channel_model#250| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 37 37) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#145| state))) ; $verific$n328$441
(define-fun |channel_model#251| ((state |channel_model_s|)) (_ BitVec 1) (ite (= ((_ extract 38 38) (|channel_model#212| state)) #b1) (|channel_model#211| state) (|channel_model#146| state))) ; $verific$n327$440
(define-fun |channel_model#252| ((state |channel_model_s|)) (_ BitVec 39) (ite (|channel_model#0| state) (concat (|channel_model#251| state) (concat (|channel_model#250| state) (concat (|channel_model#249| state) (concat (|channel_model#248| state) (concat (|channel_model#247| state) (concat (|channel_model#246| state) (concat (|channel_model#245| state) (concat (|channel_model#244| state) (concat (|channel_model#243| state) (concat (|channel_model#242| state) (concat (|channel_model#241| state) (concat (|channel_model#240| state) (concat (|channel_model#239| state) (concat (|channel_model#238| state) (concat (|channel_model#237| state) (concat (|channel_model#236| state) (concat (|channel_model#235| state) (concat (|channel_model#234| state) (concat (|channel_model#233| state) (concat (|channel_model#232| state) (concat (|channel_model#231| state) (concat (|channel_model#230| state) (concat (|channel_model#229| state) (concat (|channel_model#228| state) (concat (|channel_model#227| state) (concat (|channel_model#226| state) (concat (|channel_model#225| state) (concat (|channel_model#224| state) (concat (|channel_model#223| state) (concat (|channel_model#222| state) (concat (|channel_model#221| state) (concat (|channel_model#220| state) (concat (|channel_model#219| state) (concat (|channel_model#218| state) (concat (|channel_model#217| state) (concat (|channel_model#216| state) (concat (|channel_model#215| state) (concat (|channel_model#214| state) (|channel_model#213| state))))))))))))))))))))))))))))))))))))))) (concat (|channel_model#146| state) (concat (|channel_model#145| state) (concat (|channel_model#144| state) (concat (|channel_model#143| state) (concat (|channel_model#142| state) (concat (|channel_model#141| state) (concat (|channel_model#140| state) (concat (|channel_model#139| state) (concat (|channel_model#138| state) (concat (|channel_model#137| state) (concat (|channel_model#136| state) (concat (|channel_model#135| state) (concat (|channel_model#134| state) (concat (|channel_model#133| state) (concat (|channel_model#132| state) (concat (|channel_model#131| state) (concat (|channel_model#130| state) (concat (|channel_model#129| state) (concat (|channel_model#128| state) (concat (|channel_model#127| state) (concat (|channel_model#126| state) (concat (|channel_model#125| state) (concat (|channel_model#124| state) (concat (|channel_model#123| state) (concat (|channel_model#122| state) (concat (|channel_model#121| state) (concat (|channel_model#120| state) (concat (|channel_model#119| state) (concat (|channel_model#118| state) (concat (|channel_model#117| state) (concat (|channel_model#116| state) (concat (|channel_model#115| state) (concat (|channel_model#114| state) (concat (|channel_model#113| state) (concat (|channel_model#112| state) (concat (|channel_model#111| state) (concat (|channel_model#110| state) (concat (|channel_model#109| state) (|channel_model#108| state))))))))))))))))))))))))))))))))))))))))) ; \dout
; yosys-smt2-output dout 39
; yosys-smt2-wire dout 39
(define-fun |channel_model_n dout| ((state |channel_model_s|)) (_ BitVec 39) (|channel_model#252| state))
; yosys-smt2-input din 39
; yosys-smt2-wire din 39
; yosys-smt2-witness {"offset": 0, "path": ["\\din"], "smtname": "din", "smtoffset": 0, "type": "input", "width": 39}
(define-fun |channel_model_n din| ((state |channel_model_s|)) (_ BitVec 39) (concat (|channel_model#76| state) (concat (|channel_model#74| state) (concat (|channel_model#73| state) (concat (|channel_model#70| state) (concat (|channel_model#69| state) (concat (|channel_model#67| state) (concat (|channel_model#66| state) (concat (|channel_model#60| state) (concat (|channel_model#59| state) (concat (|channel_model#57| state) (concat (|channel_model#56| state) (concat (|channel_model#53| state) (concat (|channel_model#52| state) (concat (|channel_model#50| state) (concat (|channel_model#49| state) (concat (|channel_model#45| state) (concat (|channel_model#44| state) (concat (|channel_model#42| state) (concat (|channel_model#41| state) (concat (|channel_model#38| state) (concat (|channel_model#37| state) (concat (|channel_model#35| state) (concat (|channel_model#34| state) (concat (|channel_model#29| state) (concat (|channel_model#28| state) (concat (|channel_model#26| state) (concat (|channel_model#25| state) (concat (|channel_model#22| state) (concat (|channel_model#21| state) (concat (|channel_model#19| state) (concat (|channel_model#18| state) (concat (|channel_model#14| state) (concat (|channel_model#13| state) (concat (|channel_model#11| state) (concat (|channel_model#10| state) (concat (|channel_model#7| state) (concat (|channel_model#6| state) (concat (|channel_model#4| state) (|channel_model#3| state))))))))))))))))))))))))))))))))))))))))
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_1007 25
(define-fun |channel_model_n _witness_.anyseq_auto_setundef_cc_533_execute_1007| ((state |channel_model_s|)) (_ BitVec 25) (|channel_model#182| state))
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_1005 25
(define-fun |channel_model_n _witness_.anyseq_auto_setundef_cc_533_execute_1005| ((state |channel_model_s|)) (_ BitVec 25) (|channel_model#77| state))
(define-fun |channel_model_a| ((state |channel_model_s|)) Bool true)
(define-fun |channel_model_u| ((state |channel_model_s|)) Bool true)
(define-fun |channel_model_i| ((state |channel_model_s|)) Bool true)
(define-fun |channel_model_h| ((state |channel_model_s|)) Bool true)
(define-fun |channel_model_t| ((state |channel_model_s|) (next_state |channel_model_s|)) Bool true) ; end of module channel_model
; yosys-smt2-module rvecc_decode
(declare-sort |rvecc_decode_s| 0)
(declare-fun |rvecc_decode_is| (|rvecc_decode_s|) Bool)
(declare-fun |rvecc_decode#0| (|rvecc_decode_s|) (_ BitVec 1)) ; \en
(declare-fun |rvecc_decode#1| (|rvecc_decode_s|) (_ BitVec 1)) ; \ecc_in [0]
(declare-fun |rvecc_decode#2| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [0]
(define-fun |rvecc_decode#3| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#1| state) (|rvecc_decode#2| state))) ; $verific$n4$575
(declare-fun |rvecc_decode#4| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [1]
(define-fun |rvecc_decode#5| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#3| state) (|rvecc_decode#4| state))) ; $verific$n5$576
(declare-fun |rvecc_decode#6| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [3]
(define-fun |rvecc_decode#7| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#5| state) (|rvecc_decode#6| state))) ; $verific$n6$577
(declare-fun |rvecc_decode#8| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [4]
(define-fun |rvecc_decode#9| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#7| state) (|rvecc_decode#8| state))) ; $verific$n7$578
(declare-fun |rvecc_decode#10| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [6]
(define-fun |rvecc_decode#11| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#9| state) (|rvecc_decode#10| state))) ; $verific$n8$579
(declare-fun |rvecc_decode#12| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [8]
(define-fun |rvecc_decode#13| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#11| state) (|rvecc_decode#12| state))) ; $verific$n9$580
(declare-fun |rvecc_decode#14| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [10]
(define-fun |rvecc_decode#15| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#13| state) (|rvecc_decode#14| state))) ; $verific$n10$581
(declare-fun |rvecc_decode#16| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [11]
(define-fun |rvecc_decode#17| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#15| state) (|rvecc_decode#16| state))) ; $verific$n11$582
(declare-fun |rvecc_decode#18| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [13]
(define-fun |rvecc_decode#19| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#17| state) (|rvecc_decode#18| state))) ; $verific$n12$583
(declare-fun |rvecc_decode#20| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [15]
(define-fun |rvecc_decode#21| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#19| state) (|rvecc_decode#20| state))) ; $verific$n13$584
(declare-fun |rvecc_decode#22| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [17]
(define-fun |rvecc_decode#23| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#21| state) (|rvecc_decode#22| state))) ; $verific$n14$585
(declare-fun |rvecc_decode#24| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [19]
(define-fun |rvecc_decode#25| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#23| state) (|rvecc_decode#24| state))) ; $verific$n15$586
(declare-fun |rvecc_decode#26| (|rvecc_decode_s|) (_ BitVec 1)) ; \ecc_in [1]
(define-fun |rvecc_decode#27| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#26| state) (|rvecc_decode#2| state))) ; $verific$n23$587
(declare-fun |rvecc_decode#28| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [2]
(define-fun |rvecc_decode#29| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#27| state) (|rvecc_decode#28| state))) ; $verific$n24$588
(define-fun |rvecc_decode#30| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#29| state) (|rvecc_decode#6| state))) ; $verific$n25$589
(declare-fun |rvecc_decode#31| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [5]
(define-fun |rvecc_decode#32| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#30| state) (|rvecc_decode#31| state))) ; $verific$n26$590
(define-fun |rvecc_decode#33| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#32| state) (|rvecc_decode#10| state))) ; $verific$n27$591
(declare-fun |rvecc_decode#34| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [9]
(define-fun |rvecc_decode#35| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#33| state) (|rvecc_decode#34| state))) ; $verific$n28$592
(define-fun |rvecc_decode#36| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#35| state) (|rvecc_decode#14| state))) ; $verific$n29$593
(declare-fun |rvecc_decode#37| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [12]
(define-fun |rvecc_decode#38| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#36| state) (|rvecc_decode#37| state))) ; $verific$n30$594
(define-fun |rvecc_decode#39| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#38| state) (|rvecc_decode#18| state))) ; $verific$n31$595
(declare-fun |rvecc_decode#40| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [16]
(define-fun |rvecc_decode#41| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#39| state) (|rvecc_decode#40| state))) ; $verific$n32$596
(define-fun |rvecc_decode#42| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#41| state) (|rvecc_decode#22| state))) ; $verific$n33$597
(declare-fun |rvecc_decode#43| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [20]
(define-fun |rvecc_decode#44| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#42| state) (|rvecc_decode#43| state))) ; $verific$n34$598
(declare-fun |rvecc_decode#45| (|rvecc_decode_s|) (_ BitVec 1)) ; \ecc_in [2]
(define-fun |rvecc_decode#46| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#45| state) (|rvecc_decode#4| state))) ; $verific$n42$599
(define-fun |rvecc_decode#47| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#46| state) (|rvecc_decode#28| state))) ; $verific$n43$600
(define-fun |rvecc_decode#48| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#47| state) (|rvecc_decode#6| state))) ; $verific$n44$601
(declare-fun |rvecc_decode#49| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [7]
(define-fun |rvecc_decode#50| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#48| state) (|rvecc_decode#49| state))) ; $verific$n45$602
(define-fun |rvecc_decode#51| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#50| state) (|rvecc_decode#12| state))) ; $verific$n46$603
(define-fun |rvecc_decode#52| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#51| state) (|rvecc_decode#34| state))) ; $verific$n47$604
(define-fun |rvecc_decode#53| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#52| state) (|rvecc_decode#14| state))) ; $verific$n48$605
(declare-fun |rvecc_decode#54| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [14]
(define-fun |rvecc_decode#55| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#53| state) (|rvecc_decode#54| state))) ; $verific$n49$606
(define-fun |rvecc_decode#56| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#55| state) (|rvecc_decode#20| state))) ; $verific$n50$607
(define-fun |rvecc_decode#57| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#56| state) (|rvecc_decode#40| state))) ; $verific$n51$608
(define-fun |rvecc_decode#58| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#57| state) (|rvecc_decode#22| state))) ; $verific$n52$609
(declare-fun |rvecc_decode#59| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [22]
(define-fun |rvecc_decode#60| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#58| state) (|rvecc_decode#59| state))) ; $verific$n53$610
(declare-fun |rvecc_decode#61| (|rvecc_decode_s|) (_ BitVec 1)) ; \ecc_in [3]
(define-fun |rvecc_decode#62| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#61| state) (|rvecc_decode#8| state))) ; $verific$n61$611
(define-fun |rvecc_decode#63| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#62| state) (|rvecc_decode#31| state))) ; $verific$n62$612
(define-fun |rvecc_decode#64| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#63| state) (|rvecc_decode#10| state))) ; $verific$n63$613
(define-fun |rvecc_decode#65| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#64| state) (|rvecc_decode#49| state))) ; $verific$n64$614
(define-fun |rvecc_decode#66| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#65| state) (|rvecc_decode#12| state))) ; $verific$n65$615
(define-fun |rvecc_decode#67| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#66| state) (|rvecc_decode#34| state))) ; $verific$n66$616
(define-fun |rvecc_decode#68| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#67| state) (|rvecc_decode#14| state))) ; $verific$n67$617
(declare-fun |rvecc_decode#69| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [18]
(define-fun |rvecc_decode#70| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#68| state) (|rvecc_decode#69| state))) ; $verific$n68$618
(define-fun |rvecc_decode#71| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#70| state) (|rvecc_decode#24| state))) ; $verific$n69$619
(declare-fun |rvecc_decode#72| (|rvecc_decode_s|) (_ BitVec 1)) ; \ecc_in [4]
(define-fun |rvecc_decode#73| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#72| state) (|rvecc_decode#16| state))) ; $verific$n77$620
(define-fun |rvecc_decode#74| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#73| state) (|rvecc_decode#37| state))) ; $verific$n78$621
(define-fun |rvecc_decode#75| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#74| state) (|rvecc_decode#18| state))) ; $verific$n79$622
(define-fun |rvecc_decode#76| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#75| state) (|rvecc_decode#54| state))) ; $verific$n80$623
(define-fun |rvecc_decode#77| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#76| state) (|rvecc_decode#20| state))) ; $verific$n81$624
(define-fun |rvecc_decode#78| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#77| state) (|rvecc_decode#40| state))) ; $verific$n82$625
(define-fun |rvecc_decode#79| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#78| state) (|rvecc_decode#22| state))) ; $verific$n83$626
(define-fun |rvecc_decode#80| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#79| state) (|rvecc_decode#69| state))) ; $verific$n84$627
(define-fun |rvecc_decode#81| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#80| state) (|rvecc_decode#24| state))) ; $verific$n85$628
(declare-fun |rvecc_decode#82| (|rvecc_decode_s|) (_ BitVec 1)) ; \ecc_in [5]
(declare-fun |rvecc_decode#83| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [21]
(declare-fun |rvecc_decode#84| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [23]
(declare-fun |rvecc_decode#85| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [26]
(define-fun |rvecc_decode#86| ((state |rvecc_decode_s|)) (_ BitVec 6) (bvxor (concat (|rvecc_decode#82| state) (concat (|rvecc_decode#81| state) (concat (|rvecc_decode#71| state) (concat (|rvecc_decode#60| state) (concat (|rvecc_decode#44| state) (|rvecc_decode#25| state)))))) (concat (|rvecc_decode#85| state) (concat (|rvecc_decode#43| state) (concat (|rvecc_decode#43| state) (concat (|rvecc_decode#84| state) (concat (|rvecc_decode#83| state) (|rvecc_decode#83| state)))))))) ; $verific$n402$687
(declare-fun |rvecc_decode#87| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [24]
(declare-fun |rvecc_decode#88| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [27]
(define-fun |rvecc_decode#89| ((state |rvecc_decode_s|)) (_ BitVec 6) (bvxor (|rvecc_decode#86| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#83| state) (concat (|rvecc_decode#83| state) (concat (|rvecc_decode#87| state) (concat (|rvecc_decode#87| state) (|rvecc_decode#84| state)))))))) ; $verific$n401$686
(declare-fun |rvecc_decode#90| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [25]
(declare-fun |rvecc_decode#91| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [28]
(define-fun |rvecc_decode#92| ((state |rvecc_decode_s|)) (_ BitVec 6) (bvxor (|rvecc_decode#89| state) (concat (|rvecc_decode#91| state) (concat (|rvecc_decode#59| state) (concat (|rvecc_decode#59| state) (concat (|rvecc_decode#90| state) (concat (|rvecc_decode#90| state) (|rvecc_decode#90| state)))))))) ; $verific$n400$685
(declare-fun |rvecc_decode#93| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [29]
(define-fun |rvecc_decode#94| ((state |rvecc_decode_s|)) (_ BitVec 6) (bvxor (|rvecc_decode#92| state) (concat (|rvecc_decode#93| state) (concat (|rvecc_decode#84| state) (concat (|rvecc_decode#84| state) (concat (|rvecc_decode#93| state) (concat (|rvecc_decode#88| state) (|rvecc_decode#85| state)))))))) ; $verific$n399$684
(declare-fun |rvecc_decode#95| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [30]
(define-fun |rvecc_decode#96| ((state |rvecc_decode_s|)) (_ BitVec 6) (bvxor (|rvecc_decode#94| state) (concat (|rvecc_decode#95| state) (concat (|rvecc_decode#87| state) (concat (|rvecc_decode#87| state) (concat (|rvecc_decode#95| state) (concat (|rvecc_decode#91| state) (|rvecc_decode#91| state)))))))) ; $verific$n398$683
(declare-fun |rvecc_decode#97| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [31]
(define-fun |rvecc_decode#98| ((state |rvecc_decode_s|)) (_ BitVec 6) (bvxor (|rvecc_decode#96| state) (concat (|rvecc_decode#97| state) (concat (|rvecc_decode#90| state) (concat (|rvecc_decode#90| state) (concat (|rvecc_decode#97| state) (concat (|rvecc_decode#97| state) (|rvecc_decode#95| state)))))))) ; \ecc_check [5:0]
(define-fun |rvecc_decode#99| ((state |rvecc_decode_s|)) Bool (xor  (= ((_ extract 0 0) (|rvecc_decode#2| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#4| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#28| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#6| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#8| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#31| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#10| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#49| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#12| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#34| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#14| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#16| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#37| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#18| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#54| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#20| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#40| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#22| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#69| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#24| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#43| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#83| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#59| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#84| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#87| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#90| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#85| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#88| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#91| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#93| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#95| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#97| state)) #b1))) ; $verific$n100$629
(declare-fun |rvecc_decode#100| (|rvecc_decode_s|) Bool) ; \ecc_in [6]
(define-fun |rvecc_decode#101| ((state |rvecc_decode_s|)) Bool (xor  (= ((_ extract 0 0) (|rvecc_decode#1| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#26| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#45| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#61| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#72| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#82| state)) #b1) (|rvecc_decode#100| state))) ; $verific$n101$630
(define-fun |rvecc_decode#102| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (ite (|rvecc_decode#99| state) #b1 #b0) (ite (|rvecc_decode#101| state) #b1 #b0))) ; $verific$n102$631
(declare-fun |rvecc_decode#103| (|rvecc_decode_s|) (_ BitVec 1)) ; \sed_ded
(define-fun |rvecc_decode#104| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvnot (|rvecc_decode#103| state))) ; $verific$n103$632
(define-fun |rvecc_decode#105| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvand (|rvecc_decode#102| state) (|rvecc_decode#104| state))) ; \ecc_check [6]
(define-fun |rvecc_decode#106| ((state |rvecc_decode_s|)) Bool (distinct (concat (|rvecc_decode#105| state) (|rvecc_decode#98| state)) #b0000000)) ; $verific$n106$634
(define-fun |rvecc_decode#107| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvand (|rvecc_decode#0| state) (ite (|rvecc_decode#106| state) #b1 #b0))) ; $verific$n107$635
(define-fun |rvecc_decode#108| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvand (|rvecc_decode#107| state) (|rvecc_decode#105| state))) ; \single_ecc_error
; yosys-smt2-output single_ecc_error 1
; yosys-smt2-wire single_ecc_error 1
(define-fun |rvecc_decode_n single_ecc_error| ((state |rvecc_decode_s|)) Bool (= ((_ extract 0 0) (|rvecc_decode#108| state)) #b1))
; yosys-smt2-input sed_ded 1
; yosys-smt2-wire sed_ded 1
; yosys-smt2-witness {"offset": 0, "path": ["\\sed_ded"], "smtname": "sed_ded", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |rvecc_decode_n sed_ded| ((state |rvecc_decode_s|)) Bool (= ((_ extract 0 0) (|rvecc_decode#103| state)) #b1))
(define-fun |rvecc_decode#109| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b000001)) ; \error_mask [0]
(define-fun |rvecc_decode#110| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b000010)) ; \error_mask [1]
(define-fun |rvecc_decode#111| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b000011)) ; \error_mask [2]
(define-fun |rvecc_decode#112| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b000100)) ; \error_mask [3]
(define-fun |rvecc_decode#113| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b000101)) ; \error_mask [4]
(define-fun |rvecc_decode#114| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b000110)) ; \error_mask [5]
(define-fun |rvecc_decode#115| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b000111)) ; \error_mask [6]
(define-fun |rvecc_decode#116| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b001000)) ; \error_mask [7]
(define-fun |rvecc_decode#117| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b001001)) ; \error_mask [8]
(define-fun |rvecc_decode#118| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b001010)) ; \error_mask [9]
(define-fun |rvecc_decode#119| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b001011)) ; \error_mask [10]
(define-fun |rvecc_decode#120| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b001100)) ; \error_mask [11]
(define-fun |rvecc_decode#121| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b001101)) ; \error_mask [12]
(define-fun |rvecc_decode#122| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b001110)) ; \error_mask [13]
(define-fun |rvecc_decode#123| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b001111)) ; \error_mask [14]
(define-fun |rvecc_decode#124| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b010000)) ; \error_mask [15]
(define-fun |rvecc_decode#125| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b010001)) ; \error_mask [16]
(define-fun |rvecc_decode#126| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b010010)) ; \error_mask [17]
(define-fun |rvecc_decode#127| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b010011)) ; \error_mask [18]
(define-fun |rvecc_decode#128| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b010100)) ; \error_mask [19]
(define-fun |rvecc_decode#129| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b010101)) ; \error_mask [20]
(define-fun |rvecc_decode#130| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b010110)) ; \error_mask [21]
(define-fun |rvecc_decode#131| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b010111)) ; \error_mask [22]
(define-fun |rvecc_decode#132| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b011000)) ; \error_mask [23]
(define-fun |rvecc_decode#133| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b011001)) ; \error_mask [24]
(define-fun |rvecc_decode#134| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b011010)) ; \error_mask [25]
(define-fun |rvecc_decode#135| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b011011)) ; \error_mask [26]
(define-fun |rvecc_decode#136| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b011100)) ; \error_mask [27]
(define-fun |rvecc_decode#137| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b011101)) ; \error_mask [28]
(define-fun |rvecc_decode#138| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b011110)) ; \error_mask [29]
(define-fun |rvecc_decode#139| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b011111)) ; \error_mask [30]
(define-fun |rvecc_decode#140| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b100000)) ; \error_mask [31]
(define-fun |rvecc_decode#141| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b100001)) ; \error_mask [32]
(define-fun |rvecc_decode#142| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b100010)) ; \error_mask [33]
(define-fun |rvecc_decode#143| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b100011)) ; \error_mask [34]
(define-fun |rvecc_decode#144| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b100100)) ; \error_mask [35]
(define-fun |rvecc_decode#145| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b100101)) ; \error_mask [36]
(define-fun |rvecc_decode#146| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b100110)) ; \error_mask [37]
(define-fun |rvecc_decode#147| ((state |rvecc_decode_s|)) Bool (= (|rvecc_decode#98| state) #b100111)) ; \error_mask [38]
; yosys-smt2-wire error_mask 39
(define-fun |rvecc_decode_n error_mask| ((state |rvecc_decode_s|)) (_ BitVec 39) (concat (ite (|rvecc_decode#147| state) #b1 #b0) (concat (ite (|rvecc_decode#146| state) #b1 #b0) (concat (ite (|rvecc_decode#145| state) #b1 #b0) (concat (ite (|rvecc_decode#144| state) #b1 #b0) (concat (ite (|rvecc_decode#143| state) #b1 #b0) (concat (ite (|rvecc_decode#142| state) #b1 #b0) (concat (ite (|rvecc_decode#141| state) #b1 #b0) (concat (ite (|rvecc_decode#140| state) #b1 #b0) (concat (ite (|rvecc_decode#139| state) #b1 #b0) (concat (ite (|rvecc_decode#138| state) #b1 #b0) (concat (ite (|rvecc_decode#137| state) #b1 #b0) (concat (ite (|rvecc_decode#136| state) #b1 #b0) (concat (ite (|rvecc_decode#135| state) #b1 #b0) (concat (ite (|rvecc_decode#134| state) #b1 #b0) (concat (ite (|rvecc_decode#133| state) #b1 #b0) (concat (ite (|rvecc_decode#132| state) #b1 #b0) (concat (ite (|rvecc_decode#131| state) #b1 #b0) (concat (ite (|rvecc_decode#130| state) #b1 #b0) (concat (ite (|rvecc_decode#129| state) #b1 #b0) (concat (ite (|rvecc_decode#128| state) #b1 #b0) (concat (ite (|rvecc_decode#127| state) #b1 #b0) (concat (ite (|rvecc_decode#126| state) #b1 #b0) (concat (ite (|rvecc_decode#125| state) #b1 #b0) (concat (ite (|rvecc_decode#124| state) #b1 #b0) (concat (ite (|rvecc_decode#123| state) #b1 #b0) (concat (ite (|rvecc_decode#122| state) #b1 #b0) (concat (ite (|rvecc_decode#121| state) #b1 #b0) (concat (ite (|rvecc_decode#120| state) #b1 #b0) (concat (ite (|rvecc_decode#119| state) #b1 #b0) (concat (ite (|rvecc_decode#118| state) #b1 #b0) (concat (ite (|rvecc_decode#117| state) #b1 #b0) (concat (ite (|rvecc_decode#116| state) #b1 #b0) (concat (ite (|rvecc_decode#115| state) #b1 #b0) (concat (ite (|rvecc_decode#114| state) #b1 #b0) (concat (ite (|rvecc_decode#113| state) #b1 #b0) (concat (ite (|rvecc_decode#112| state) #b1 #b0) (concat (ite (|rvecc_decode#111| state) #b1 #b0) (concat (ite (|rvecc_decode#110| state) #b1 #b0) (ite (|rvecc_decode#109| state) #b1 #b0))))))))))))))))))))))))))))))))))))))))
; yosys-smt2-input en 1
; yosys-smt2-wire en 1
; yosys-smt2-witness {"offset": 0, "path": ["\\en"], "smtname": "en", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |rvecc_decode_n en| ((state |rvecc_decode_s|)) Bool (= ((_ extract 0 0) (|rvecc_decode#0| state)) #b1))
(define-fun |rvecc_decode#148| ((state |rvecc_decode_s|)) (_ BitVec 39) (bvxor (concat (ite (|rvecc_decode#147| state) #b1 #b0) (concat (ite (|rvecc_decode#146| state) #b1 #b0) (concat (ite (|rvecc_decode#145| state) #b1 #b0) (concat (ite (|rvecc_decode#144| state) #b1 #b0) (concat (ite (|rvecc_decode#143| state) #b1 #b0) (concat (ite (|rvecc_decode#142| state) #b1 #b0) (concat (ite (|rvecc_decode#141| state) #b1 #b0) (concat (ite (|rvecc_decode#140| state) #b1 #b0) (concat (ite (|rvecc_decode#139| state) #b1 #b0) (concat (ite (|rvecc_decode#138| state) #b1 #b0) (concat (ite (|rvecc_decode#137| state) #b1 #b0) (concat (ite (|rvecc_decode#136| state) #b1 #b0) (concat (ite (|rvecc_decode#135| state) #b1 #b0) (concat (ite (|rvecc_decode#134| state) #b1 #b0) (concat (ite (|rvecc_decode#133| state) #b1 #b0) (concat (ite (|rvecc_decode#132| state) #b1 #b0) (concat (ite (|rvecc_decode#131| state) #b1 #b0) (concat (ite (|rvecc_decode#130| state) #b1 #b0) (concat (ite (|rvecc_decode#129| state) #b1 #b0) (concat (ite (|rvecc_decode#128| state) #b1 #b0) (concat (ite (|rvecc_decode#127| state) #b1 #b0) (concat (ite (|rvecc_decode#126| state) #b1 #b0) (concat (ite (|rvecc_decode#125| state) #b1 #b0) (concat (ite (|rvecc_decode#124| state) #b1 #b0) (concat (ite (|rvecc_decode#123| state) #b1 #b0) (concat (ite (|rvecc_decode#122| state) #b1 #b0) (concat (ite (|rvecc_decode#121| state) #b1 #b0) (concat (ite (|rvecc_decode#120| state) #b1 #b0) (concat (ite (|rvecc_decode#119| state) #b1 #b0) (concat (ite (|rvecc_decode#118| state) #b1 #b0) (concat (ite (|rvecc_decode#117| state) #b1 #b0) (concat (ite (|rvecc_decode#116| state) #b1 #b0) (concat (ite (|rvecc_decode#115| state) #b1 #b0) (concat (ite (|rvecc_decode#114| state) #b1 #b0) (concat (ite (|rvecc_decode#113| state) #b1 #b0) (concat (ite (|rvecc_decode#112| state) #b1 #b0) (concat (ite (|rvecc_decode#111| state) #b1 #b0) (concat (ite (|rvecc_decode#110| state) #b1 #b0) (ite (|rvecc_decode#109| state) #b1 #b0))))))))))))))))))))))))))))))))))))))) (concat (ite (|rvecc_decode#100| state) #b1 #b0) (concat (|rvecc_decode#97| state) (concat (|rvecc_decode#95| state) (concat (|rvecc_decode#93| state) (concat (|rvecc_decode#91| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#85| state) (concat (|rvecc_decode#82| state) (concat (|rvecc_decode#90| state) (concat (|rvecc_decode#87| state) (concat (|rvecc_decode#84| state) (concat (|rvecc_decode#59| state) (concat (|rvecc_decode#83| state) (concat (|rvecc_decode#43| state) (concat (|rvecc_decode#24| state) (concat (|rvecc_decode#69| state) (concat (|rvecc_decode#22| state) (concat (|rvecc_decode#40| state) (concat (|rvecc_decode#20| state) (concat (|rvecc_decode#54| state) (concat (|rvecc_decode#18| state) (concat (|rvecc_decode#37| state) (concat (|rvecc_decode#16| state) (concat (|rvecc_decode#72| state) (concat (|rvecc_decode#14| state) (concat (|rvecc_decode#34| state) (concat (|rvecc_decode#12| state) (concat (|rvecc_decode#49| state) (concat (|rvecc_decode#10| state) (concat (|rvecc_decode#31| state) (concat (|rvecc_decode#8| state) (concat (|rvecc_decode#61| state) (concat (|rvecc_decode#6| state) (concat (|rvecc_decode#28| state) (concat (|rvecc_decode#4| state) (concat (|rvecc_decode#45| state) (concat (|rvecc_decode#2| state) (concat (|rvecc_decode#26| state) (|rvecc_decode#1| state))))))))))))))))))))))))))))))))))))))))) ; $verific$n233$680
(define-fun |rvecc_decode#149| ((state |rvecc_decode_s|)) (_ BitVec 39) (ite (= ((_ extract 0 0) (|rvecc_decode#108| state)) #b1) (|rvecc_decode#148| state) (concat (ite (|rvecc_decode#100| state) #b1 #b0) (concat (|rvecc_decode#97| state) (concat (|rvecc_decode#95| state) (concat (|rvecc_decode#93| state) (concat (|rvecc_decode#91| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#85| state) (concat (|rvecc_decode#82| state) (concat (|rvecc_decode#90| state) (concat (|rvecc_decode#87| state) (concat (|rvecc_decode#84| state) (concat (|rvecc_decode#59| state) (concat (|rvecc_decode#83| state) (concat (|rvecc_decode#43| state) (concat (|rvecc_decode#24| state) (concat (|rvecc_decode#69| state) (concat (|rvecc_decode#22| state) (concat (|rvecc_decode#40| state) (concat (|rvecc_decode#20| state) (concat (|rvecc_decode#54| state) (concat (|rvecc_decode#18| state) (concat (|rvecc_decode#37| state) (concat (|rvecc_decode#16| state) (concat (|rvecc_decode#72| state) (concat (|rvecc_decode#14| state) (concat (|rvecc_decode#34| state) (concat (|rvecc_decode#12| state) (concat (|rvecc_decode#49| state) (concat (|rvecc_decode#10| state) (concat (|rvecc_decode#31| state) (concat (|rvecc_decode#8| state) (concat (|rvecc_decode#61| state) (concat (|rvecc_decode#6| state) (concat (|rvecc_decode#28| state) (concat (|rvecc_decode#4| state) (concat (|rvecc_decode#45| state) (concat (|rvecc_decode#2| state) (concat (|rvecc_decode#26| state) (|rvecc_decode#1| state))))))))))))))))))))))))))))))))))))))))) ; \dout_plus_parity
(define-fun |rvecc_decode#150| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#105| state) (|rvecc_decode#98| state)) #b1000000)) ; $verific$n386$678
(define-fun |rvecc_decode#151| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor ((_ extract 38 38) (|rvecc_decode#149| state)) (ite (|rvecc_decode#150| state) #b1 #b0))) ; \ecc_out [6]
; yosys-smt2-output ecc_out 7
; yosys-smt2-wire ecc_out 7
(define-fun |rvecc_decode_n ecc_out| ((state |rvecc_decode_s|)) (_ BitVec 7) (concat (|rvecc_decode#151| state) (concat ((_ extract 31 31) (|rvecc_decode#149| state)) (concat ((_ extract 15 15) (|rvecc_decode#149| state)) (concat ((_ extract 7 7) (|rvecc_decode#149| state)) (concat ((_ extract 3 3) (|rvecc_decode#149| state)) ((_ extract 1 0) (|rvecc_decode#149| state))))))))
; yosys-smt2-input ecc_in 7
; yosys-smt2-wire ecc_in 7
; yosys-smt2-witness {"offset": 0, "path": ["\\ecc_in"], "smtname": "ecc_in", "smtoffset": 0, "type": "input", "width": 7}
(define-fun |rvecc_decode_n ecc_in| ((state |rvecc_decode_s|)) (_ BitVec 7) (concat (ite (|rvecc_decode#100| state) #b1 #b0) (concat (|rvecc_decode#82| state) (concat (|rvecc_decode#72| state) (concat (|rvecc_decode#61| state) (concat (|rvecc_decode#45| state) (concat (|rvecc_decode#26| state) (|rvecc_decode#1| state))))))))
; yosys-smt2-wire ecc_check 7
(define-fun |rvecc_decode_n ecc_check| ((state |rvecc_decode_s|)) (_ BitVec 7) (concat (|rvecc_decode#105| state) (|rvecc_decode#98| state)))
; yosys-smt2-wire dout_plus_parity 39
(define-fun |rvecc_decode_n dout_plus_parity| ((state |rvecc_decode_s|)) (_ BitVec 39) (|rvecc_decode#149| state))
; yosys-smt2-output dout 32
; yosys-smt2-wire dout 32
(define-fun |rvecc_decode_n dout| ((state |rvecc_decode_s|)) (_ BitVec 32) (concat ((_ extract 37 32) (|rvecc_decode#149| state)) (concat ((_ extract 30 16) (|rvecc_decode#149| state)) (concat ((_ extract 14 8) (|rvecc_decode#149| state)) (concat ((_ extract 6 4) (|rvecc_decode#149| state)) ((_ extract 2 2) (|rvecc_decode#149| state)))))))
(define-fun |rvecc_decode#152| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvnot (|rvecc_decode#105| state))) ; $verific$n112$637
(define-fun |rvecc_decode#153| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvand (|rvecc_decode#107| state) (|rvecc_decode#152| state))) ; \double_ecc_error
; yosys-smt2-output double_ecc_error 1
; yosys-smt2-wire double_ecc_error 1
(define-fun |rvecc_decode_n double_ecc_error| ((state |rvecc_decode_s|)) Bool (= ((_ extract 0 0) (|rvecc_decode#153| state)) #b1))
; yosys-smt2-wire din_plus_parity 39
(define-fun |rvecc_decode_n din_plus_parity| ((state |rvecc_decode_s|)) (_ BitVec 39) (concat (ite (|rvecc_decode#100| state) #b1 #b0) (concat (|rvecc_decode#97| state) (concat (|rvecc_decode#95| state) (concat (|rvecc_decode#93| state) (concat (|rvecc_decode#91| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#85| state) (concat (|rvecc_decode#82| state) (concat (|rvecc_decode#90| state) (concat (|rvecc_decode#87| state) (concat (|rvecc_decode#84| state) (concat (|rvecc_decode#59| state) (concat (|rvecc_decode#83| state) (concat (|rvecc_decode#43| state) (concat (|rvecc_decode#24| state) (concat (|rvecc_decode#69| state) (concat (|rvecc_decode#22| state) (concat (|rvecc_decode#40| state) (concat (|rvecc_decode#20| state) (concat (|rvecc_decode#54| state) (concat (|rvecc_decode#18| state) (concat (|rvecc_decode#37| state) (concat (|rvecc_decode#16| state) (concat (|rvecc_decode#72| state) (concat (|rvecc_decode#14| state) (concat (|rvecc_decode#34| state) (concat (|rvecc_decode#12| state) (concat (|rvecc_decode#49| state) (concat (|rvecc_decode#10| state) (concat (|rvecc_decode#31| state) (concat (|rvecc_decode#8| state) (concat (|rvecc_decode#61| state) (concat (|rvecc_decode#6| state) (concat (|rvecc_decode#28| state) (concat (|rvecc_decode#4| state) (concat (|rvecc_decode#45| state) (concat (|rvecc_decode#2| state) (concat (|rvecc_decode#26| state) (|rvecc_decode#1| state))))))))))))))))))))))))))))))))))))))))
; yosys-smt2-input din 32
; yosys-smt2-wire din 32
; yosys-smt2-witness {"offset": 0, "path": ["\\din"], "smtname": "din", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |rvecc_decode_n din| ((state |rvecc_decode_s|)) (_ BitVec 32) (concat (|rvecc_decode#97| state) (concat (|rvecc_decode#95| state) (concat (|rvecc_decode#93| state) (concat (|rvecc_decode#91| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#85| state) (concat (|rvecc_decode#90| state) (concat (|rvecc_decode#87| state) (concat (|rvecc_decode#84| state) (concat (|rvecc_decode#59| state) (concat (|rvecc_decode#83| state) (concat (|rvecc_decode#43| state) (concat (|rvecc_decode#24| state) (concat (|rvecc_decode#69| state) (concat (|rvecc_decode#22| state) (concat (|rvecc_decode#40| state) (concat (|rvecc_decode#20| state) (concat (|rvecc_decode#54| state) (concat (|rvecc_decode#18| state) (concat (|rvecc_decode#37| state) (concat (|rvecc_decode#16| state) (concat (|rvecc_decode#14| state) (concat (|rvecc_decode#34| state) (concat (|rvecc_decode#12| state) (concat (|rvecc_decode#49| state) (concat (|rvecc_decode#10| state) (concat (|rvecc_decode#31| state) (concat (|rvecc_decode#8| state) (concat (|rvecc_decode#6| state) (concat (|rvecc_decode#28| state) (concat (|rvecc_decode#4| state) (|rvecc_decode#2| state)))))))))))))))))))))))))))))))))
(define-fun |rvecc_decode_a| ((state |rvecc_decode_s|)) Bool true)
(define-fun |rvecc_decode_u| ((state |rvecc_decode_s|)) Bool true)
(define-fun |rvecc_decode_i| ((state |rvecc_decode_s|)) Bool true)
(define-fun |rvecc_decode_h| ((state |rvecc_decode_s|)) Bool true)
(define-fun |rvecc_decode_t| ((state |rvecc_decode_s|) (next_state |rvecc_decode_s|)) Bool true) ; end of module rvecc_decode
; yosys-smt2-module rvecc_encode
(declare-sort |rvecc_encode_s| 0)
(declare-fun |rvecc_encode_is| (|rvecc_encode_s|) Bool)
(declare-fun |rvecc_encode#0| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [0]
(declare-fun |rvecc_encode#1| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [1]
(define-fun |rvecc_encode#2| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#0| state) (|rvecc_encode#1| state))) ; $verific$n4$811
(declare-fun |rvecc_encode#3| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [3]
(define-fun |rvecc_encode#4| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#2| state) (|rvecc_encode#3| state))) ; $verific$n5$812
(declare-fun |rvecc_encode#5| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [4]
(define-fun |rvecc_encode#6| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#4| state) (|rvecc_encode#5| state))) ; $verific$n6$813
(declare-fun |rvecc_encode#7| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [6]
(define-fun |rvecc_encode#8| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#6| state) (|rvecc_encode#7| state))) ; $verific$n7$814
(declare-fun |rvecc_encode#9| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [8]
(define-fun |rvecc_encode#10| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#8| state) (|rvecc_encode#9| state))) ; $verific$n8$815
(declare-fun |rvecc_encode#11| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [10]
(define-fun |rvecc_encode#12| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#10| state) (|rvecc_encode#11| state))) ; $verific$n9$816
(declare-fun |rvecc_encode#13| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [11]
(define-fun |rvecc_encode#14| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#12| state) (|rvecc_encode#13| state))) ; $verific$n10$817
(declare-fun |rvecc_encode#15| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [13]
(define-fun |rvecc_encode#16| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#14| state) (|rvecc_encode#15| state))) ; $verific$n11$818
(declare-fun |rvecc_encode#17| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [15]
(define-fun |rvecc_encode#18| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#16| state) (|rvecc_encode#17| state))) ; $verific$n12$819
(declare-fun |rvecc_encode#19| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [17]
(define-fun |rvecc_encode#20| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#18| state) (|rvecc_encode#19| state))) ; $verific$n13$820
(declare-fun |rvecc_encode#21| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [19]
(define-fun |rvecc_encode#22| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#20| state) (|rvecc_encode#21| state))) ; $verific$n14$821
(declare-fun |rvecc_encode#23| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [21]
(define-fun |rvecc_encode#24| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#22| state) (|rvecc_encode#23| state))) ; $verific$n15$822
(declare-fun |rvecc_encode#25| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [2]
(define-fun |rvecc_encode#26| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#0| state) (|rvecc_encode#25| state))) ; $verific$n22$823
(define-fun |rvecc_encode#27| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#26| state) (|rvecc_encode#3| state))) ; $verific$n23$824
(declare-fun |rvecc_encode#28| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [5]
(define-fun |rvecc_encode#29| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#27| state) (|rvecc_encode#28| state))) ; $verific$n24$825
(define-fun |rvecc_encode#30| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#29| state) (|rvecc_encode#7| state))) ; $verific$n25$826
(declare-fun |rvecc_encode#31| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [9]
(define-fun |rvecc_encode#32| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#30| state) (|rvecc_encode#31| state))) ; $verific$n26$827
(define-fun |rvecc_encode#33| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#32| state) (|rvecc_encode#11| state))) ; $verific$n27$828
(declare-fun |rvecc_encode#34| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [12]
(define-fun |rvecc_encode#35| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#33| state) (|rvecc_encode#34| state))) ; $verific$n28$829
(define-fun |rvecc_encode#36| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#35| state) (|rvecc_encode#15| state))) ; $verific$n29$830
(declare-fun |rvecc_encode#37| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [16]
(define-fun |rvecc_encode#38| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#36| state) (|rvecc_encode#37| state))) ; $verific$n30$831
(define-fun |rvecc_encode#39| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#38| state) (|rvecc_encode#19| state))) ; $verific$n31$832
(declare-fun |rvecc_encode#40| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [20]
(define-fun |rvecc_encode#41| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#39| state) (|rvecc_encode#40| state))) ; $verific$n32$833
(define-fun |rvecc_encode#42| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#41| state) (|rvecc_encode#23| state))) ; $verific$n33$834
(define-fun |rvecc_encode#43| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#1| state) (|rvecc_encode#25| state))) ; $verific$n40$835
(define-fun |rvecc_encode#44| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#43| state) (|rvecc_encode#3| state))) ; $verific$n41$836
(declare-fun |rvecc_encode#45| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [7]
(define-fun |rvecc_encode#46| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#44| state) (|rvecc_encode#45| state))) ; $verific$n42$837
(define-fun |rvecc_encode#47| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#46| state) (|rvecc_encode#9| state))) ; $verific$n43$838
(define-fun |rvecc_encode#48| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#47| state) (|rvecc_encode#31| state))) ; $verific$n44$839
(define-fun |rvecc_encode#49| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#48| state) (|rvecc_encode#11| state))) ; $verific$n45$840
(declare-fun |rvecc_encode#50| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [14]
(define-fun |rvecc_encode#51| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#49| state) (|rvecc_encode#50| state))) ; $verific$n46$841
(define-fun |rvecc_encode#52| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#51| state) (|rvecc_encode#17| state))) ; $verific$n47$842
(define-fun |rvecc_encode#53| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#52| state) (|rvecc_encode#37| state))) ; $verific$n48$843
(define-fun |rvecc_encode#54| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#53| state) (|rvecc_encode#19| state))) ; $verific$n49$844
(declare-fun |rvecc_encode#55| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [22]
(define-fun |rvecc_encode#56| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#54| state) (|rvecc_encode#55| state))) ; $verific$n50$845
(declare-fun |rvecc_encode#57| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [23]
(define-fun |rvecc_encode#58| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#56| state) (|rvecc_encode#57| state))) ; $verific$n51$846
(define-fun |rvecc_encode#59| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#5| state) (|rvecc_encode#28| state))) ; $verific$n58$847
(define-fun |rvecc_encode#60| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#59| state) (|rvecc_encode#7| state))) ; $verific$n59$848
(define-fun |rvecc_encode#61| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#60| state) (|rvecc_encode#45| state))) ; $verific$n60$849
(define-fun |rvecc_encode#62| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#61| state) (|rvecc_encode#9| state))) ; $verific$n61$850
(define-fun |rvecc_encode#63| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#62| state) (|rvecc_encode#31| state))) ; $verific$n62$851
(define-fun |rvecc_encode#64| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#63| state) (|rvecc_encode#11| state))) ; $verific$n63$852
(declare-fun |rvecc_encode#65| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [18]
(define-fun |rvecc_encode#66| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#64| state) (|rvecc_encode#65| state))) ; $verific$n64$853
(define-fun |rvecc_encode#67| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#66| state) (|rvecc_encode#21| state))) ; $verific$n65$854
(define-fun |rvecc_encode#68| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#67| state) (|rvecc_encode#40| state))) ; $verific$n66$855
(define-fun |rvecc_encode#69| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#13| state) (|rvecc_encode#34| state))) ; $verific$n73$856
(define-fun |rvecc_encode#70| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#69| state) (|rvecc_encode#15| state))) ; $verific$n74$857
(define-fun |rvecc_encode#71| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#70| state) (|rvecc_encode#50| state))) ; $verific$n75$858
(define-fun |rvecc_encode#72| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#71| state) (|rvecc_encode#17| state))) ; $verific$n76$859
(define-fun |rvecc_encode#73| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#72| state) (|rvecc_encode#37| state))) ; $verific$n77$860
(define-fun |rvecc_encode#74| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#73| state) (|rvecc_encode#19| state))) ; $verific$n78$861
(define-fun |rvecc_encode#75| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#74| state) (|rvecc_encode#65| state))) ; $verific$n79$862
(define-fun |rvecc_encode#76| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#75| state) (|rvecc_encode#21| state))) ; $verific$n80$863
(define-fun |rvecc_encode#77| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#76| state) (|rvecc_encode#40| state))) ; $verific$n81$864
(declare-fun |rvecc_encode#78| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [26]
(declare-fun |rvecc_encode#79| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [24]
(declare-fun |rvecc_encode#80| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [27]
(define-fun |rvecc_encode#81| ((state |rvecc_encode_s|)) (_ BitVec 6) (bvxor (concat (|rvecc_encode#78| state) (concat (|rvecc_encode#77| state) (concat (|rvecc_encode#68| state) (concat (|rvecc_encode#58| state) (concat (|rvecc_encode#42| state) (|rvecc_encode#24| state)))))) (concat (|rvecc_encode#80| state) (concat (|rvecc_encode#23| state) (concat (|rvecc_encode#23| state) (concat (|rvecc_encode#79| state) (concat (|rvecc_encode#79| state) (|rvecc_encode#57| state)))))))) ; $verific$n110$872
(declare-fun |rvecc_encode#82| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [25]
(declare-fun |rvecc_encode#83| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [28]
(define-fun |rvecc_encode#84| ((state |rvecc_encode_s|)) (_ BitVec 6) (bvxor (|rvecc_encode#81| state) (concat (|rvecc_encode#83| state) (concat (|rvecc_encode#55| state) (concat (|rvecc_encode#55| state) (concat (|rvecc_encode#82| state) (concat (|rvecc_encode#82| state) (|rvecc_encode#82| state)))))))) ; $verific$n109$871
(declare-fun |rvecc_encode#85| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [29]
(define-fun |rvecc_encode#86| ((state |rvecc_encode_s|)) (_ BitVec 6) (bvxor (|rvecc_encode#84| state) (concat (|rvecc_encode#85| state) (concat (|rvecc_encode#57| state) (concat (|rvecc_encode#57| state) (concat (|rvecc_encode#85| state) (concat (|rvecc_encode#80| state) (|rvecc_encode#78| state)))))))) ; $verific$n108$870
(declare-fun |rvecc_encode#87| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [30]
(define-fun |rvecc_encode#88| ((state |rvecc_encode_s|)) (_ BitVec 6) (bvxor (|rvecc_encode#86| state) (concat (|rvecc_encode#87| state) (concat (|rvecc_encode#79| state) (concat (|rvecc_encode#79| state) (concat (|rvecc_encode#87| state) (concat (|rvecc_encode#83| state) (|rvecc_encode#83| state)))))))) ; $verific$n107$869
(declare-fun |rvecc_encode#89| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [31]
(define-fun |rvecc_encode#90| ((state |rvecc_encode_s|)) (_ BitVec 6) (bvxor (|rvecc_encode#88| state) (concat (|rvecc_encode#89| state) (concat (|rvecc_encode#82| state) (concat (|rvecc_encode#82| state) (concat (|rvecc_encode#89| state) (concat (|rvecc_encode#89| state) (|rvecc_encode#87| state)))))))) ; \ecc_out_temp
; yosys-smt2-wire ecc_out_temp 6
(define-fun |rvecc_encode_n ecc_out_temp| ((state |rvecc_encode_s|)) (_ BitVec 6) (|rvecc_encode#90| state))
(define-fun |rvecc_encode#91| ((state |rvecc_encode_s|)) Bool (xor  (= ((_ extract 0 0) (|rvecc_encode#0| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#1| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#25| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#3| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#5| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#28| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#7| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#45| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#9| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#31| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#11| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#13| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#34| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#15| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#50| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#17| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#37| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#19| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#65| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#21| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#40| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#23| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#55| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#57| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#79| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#82| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#78| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#80| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#83| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#85| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#87| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#89| state)) #b1))) ; $verific$n94$865
(define-fun |rvecc_encode#92| ((state |rvecc_encode_s|)) Bool (xor  (= ((_ extract 0 0) (|rvecc_encode#90| state)) #b1) (= ((_ extract 1 1) (|rvecc_encode#90| state)) #b1) (= ((_ extract 2 2) (|rvecc_encode#90| state)) #b1) (= ((_ extract 3 3) (|rvecc_encode#90| state)) #b1) (= ((_ extract 4 4) (|rvecc_encode#90| state)) #b1) (= ((_ extract 5 5) (|rvecc_encode#90| state)) #b1))) ; $verific$n95$866
(define-fun |rvecc_encode#93| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (ite (|rvecc_encode#91| state) #b1 #b0) (ite (|rvecc_encode#92| state) #b1 #b0))) ; \ecc_out [6]
; yosys-smt2-output ecc_out 7
; yosys-smt2-wire ecc_out 7
(define-fun |rvecc_encode_n ecc_out| ((state |rvecc_encode_s|)) (_ BitVec 7) (concat (|rvecc_encode#93| state) (|rvecc_encode#90| state)))
; yosys-smt2-input din 32
; yosys-smt2-wire din 32
; yosys-smt2-witness {"offset": 0, "path": ["\\din"], "smtname": "din", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |rvecc_encode_n din| ((state |rvecc_encode_s|)) (_ BitVec 32) (concat (|rvecc_encode#89| state) (concat (|rvecc_encode#87| state) (concat (|rvecc_encode#85| state) (concat (|rvecc_encode#83| state) (concat (|rvecc_encode#80| state) (concat (|rvecc_encode#78| state) (concat (|rvecc_encode#82| state) (concat (|rvecc_encode#79| state) (concat (|rvecc_encode#57| state) (concat (|rvecc_encode#55| state) (concat (|rvecc_encode#23| state) (concat (|rvecc_encode#40| state) (concat (|rvecc_encode#21| state) (concat (|rvecc_encode#65| state) (concat (|rvecc_encode#19| state) (concat (|rvecc_encode#37| state) (concat (|rvecc_encode#17| state) (concat (|rvecc_encode#50| state) (concat (|rvecc_encode#15| state) (concat (|rvecc_encode#34| state) (concat (|rvecc_encode#13| state) (concat (|rvecc_encode#11| state) (concat (|rvecc_encode#31| state) (concat (|rvecc_encode#9| state) (concat (|rvecc_encode#45| state) (concat (|rvecc_encode#7| state) (concat (|rvecc_encode#28| state) (concat (|rvecc_encode#5| state) (concat (|rvecc_encode#3| state) (concat (|rvecc_encode#25| state) (concat (|rvecc_encode#1| state) (|rvecc_encode#0| state)))))))))))))))))))))))))))))))))
(define-fun |rvecc_encode_a| ((state |rvecc_encode_s|)) Bool true)
(define-fun |rvecc_encode_u| ((state |rvecc_encode_s|)) Bool true)
(define-fun |rvecc_encode_i| ((state |rvecc_encode_s|)) Bool true)
(define-fun |rvecc_encode_h| ((state |rvecc_encode_s|)) Bool true)
(define-fun |rvecc_encode_t| ((state |rvecc_encode_s|) (next_state |rvecc_encode_s|)) Bool true) ; end of module rvecc_encode
; yosys-smt2-module top
(declare-sort |top_s| 0)
(declare-fun |top_is| (|top_s|) Bool)
; yosys-smt2-cell rvecc_decode decoder
; yosys-smt2-witness {"path": ["\\decoder"], "smtname": "decoder", "type": "cell"}
(declare-fun |top#0| (|top_s|) Bool) ; \single_ecc_error
(declare-fun |top#1| (|top_s|) (_ BitVec 7)) ; \ecc_out_decoder
(declare-fun |top#2| (|top_s|) (_ BitVec 32)) ; \dout_decoder
(declare-fun |top#3| (|top_s|) Bool) ; \double_ecc_error
(declare-fun |top_h decoder| (|top_s|) |rvecc_decode_s|)
; yosys-smt2-wire single_ecc_error 1
(define-fun |top_n single_ecc_error| ((state |top_s|)) Bool (|top#0| state))
; yosys-smt2-anyseq top#4 1 $auto$setundef.cc:348:execute$1013
; yosys-smt2-witness {"offset": 0, "path": ["\\sed_ded"], "smtname": 4, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#4| (|top_s|) (_ BitVec 1)) ; \sed_ded
; yosys-smt2-wire sed_ded 1
(define-fun |top_n sed_ded| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#4| state)) #b1))
; yosys-smt2-cell channel_model channel
; yosys-smt2-witness {"path": ["\\channel"], "smtname": "channel", "type": "cell"}
(declare-fun |top#5| (|top_s|) (_ BitVec 39)) ; \received_data
(declare-fun |top_h channel| (|top_s|) |channel_model_s|)
; yosys-smt2-wire received_data 39
(define-fun |top_n received_data| ((state |top_s|)) (_ BitVec 39) (|top#5| state))
; yosys-smt2-anyseq top#6 1 $auto$setundef.cc:348:execute$1037
; yosys-smt2-witness {"offset": 0, "path": ["\\error_pos2"], "smtname": 6, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#6| (|top_s|) (_ BitVec 1)) ; \error_pos2 [0]
; yosys-smt2-anyseq top#7 1 $auto$setundef.cc:348:execute$1033
; yosys-smt2-witness {"offset": 1, "path": ["\\error_pos2"], "smtname": 7, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#7| (|top_s|) (_ BitVec 1)) ; \error_pos2 [1]
; yosys-smt2-anyseq top#8 1 $auto$setundef.cc:348:execute$1029
; yosys-smt2-witness {"offset": 2, "path": ["\\error_pos2"], "smtname": 8, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#8| (|top_s|) (_ BitVec 1)) ; \error_pos2 [2]
; yosys-smt2-anyseq top#9 1 $auto$setundef.cc:348:execute$1025
; yosys-smt2-witness {"offset": 3, "path": ["\\error_pos2"], "smtname": 9, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#9| (|top_s|) (_ BitVec 1)) ; \error_pos2 [3]
; yosys-smt2-anyseq top#10 1 $auto$setundef.cc:348:execute$1021
; yosys-smt2-witness {"offset": 4, "path": ["\\error_pos2"], "smtname": 10, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#10| (|top_s|) (_ BitVec 1)) ; \error_pos2 [4]
; yosys-smt2-anyseq top#11 1 $auto$setundef.cc:348:execute$1017
; yosys-smt2-witness {"offset": 5, "path": ["\\error_pos2"], "smtname": 11, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#11| (|top_s|) (_ BitVec 1)) ; \error_pos2 [5]
; yosys-smt2-wire error_pos2 6
(define-fun |top_n error_pos2| ((state |top_s|)) (_ BitVec 6) (concat (|top#11| state) (concat (|top#10| state) (concat (|top#9| state) (concat (|top#8| state) (concat (|top#7| state) (|top#6| state)))))))
; yosys-smt2-anyseq top#12 1 $auto$setundef.cc:348:execute$1059
; yosys-smt2-witness {"offset": 0, "path": ["\\error_pos1"], "smtname": 12, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#12| (|top_s|) (_ BitVec 1)) ; \error_pos1 [0]
; yosys-smt2-anyseq top#13 1 $auto$setundef.cc:348:execute$1065
; yosys-smt2-witness {"offset": 1, "path": ["\\error_pos1"], "smtname": 13, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#13| (|top_s|) (_ BitVec 1)) ; \error_pos1 [1]
; yosys-smt2-anyseq top#14 1 $auto$setundef.cc:348:execute$1045
; yosys-smt2-witness {"offset": 2, "path": ["\\error_pos1"], "smtname": 14, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#14| (|top_s|) (_ BitVec 1)) ; \error_pos1 [2]
; yosys-smt2-anyseq top#15 1 $auto$setundef.cc:348:execute$1061
; yosys-smt2-witness {"offset": 3, "path": ["\\error_pos1"], "smtname": 15, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#15| (|top_s|) (_ BitVec 1)) ; \error_pos1 [3]
; yosys-smt2-anyseq top#16 1 $auto$setundef.cc:348:execute$1043
; yosys-smt2-witness {"offset": 4, "path": ["\\error_pos1"], "smtname": 16, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#16| (|top_s|) (_ BitVec 1)) ; \error_pos1 [4]
; yosys-smt2-anyseq top#17 1 $auto$setundef.cc:348:execute$1039
; yosys-smt2-witness {"offset": 5, "path": ["\\error_pos1"], "smtname": 17, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#17| (|top_s|) (_ BitVec 1)) ; \error_pos1 [5]
; yosys-smt2-wire error_pos1 6
(define-fun |top_n error_pos1| ((state |top_s|)) (_ BitVec 6) (concat (|top#17| state) (concat (|top#16| state) (concat (|top#15| state) (concat (|top#14| state) (concat (|top#13| state) (|top#12| state)))))))
; yosys-smt2-anyseq top#18 1 $auto$setundef.cc:348:execute$1011
; yosys-smt2-witness {"offset": 0, "path": ["\\din_encoder"], "smtname": 18, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#18| (|top_s|) (_ BitVec 1)) ; \din_encoder [0]
; yosys-smt2-anyseq top#19 1 $auto$setundef.cc:348:execute$1015
; yosys-smt2-witness {"offset": 1, "path": ["\\din_encoder"], "smtname": 19, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#19| (|top_s|) (_ BitVec 1)) ; \din_encoder [1]
; yosys-smt2-anyseq top#20 1 $auto$setundef.cc:348:execute$1071
; yosys-smt2-witness {"offset": 2, "path": ["\\din_encoder"], "smtname": 20, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#20| (|top_s|) (_ BitVec 1)) ; \din_encoder [2]
; yosys-smt2-anyseq top#21 1 $auto$setundef.cc:348:execute$1019
; yosys-smt2-witness {"offset": 3, "path": ["\\din_encoder"], "smtname": 21, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#21| (|top_s|) (_ BitVec 1)) ; \din_encoder [3]
; yosys-smt2-anyseq top#22 1 $auto$setundef.cc:348:execute$1023
; yosys-smt2-witness {"offset": 4, "path": ["\\din_encoder"], "smtname": 22, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#22| (|top_s|) (_ BitVec 1)) ; \din_encoder [4]
; yosys-smt2-anyseq top#23 1 $auto$setundef.cc:348:execute$1067
; yosys-smt2-witness {"offset": 5, "path": ["\\din_encoder"], "smtname": 23, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#23| (|top_s|) (_ BitVec 1)) ; \din_encoder [5]
; yosys-smt2-anyseq top#24 1 $auto$setundef.cc:348:execute$1027
; yosys-smt2-witness {"offset": 6, "path": ["\\din_encoder"], "smtname": 24, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#24| (|top_s|) (_ BitVec 1)) ; \din_encoder [6]
; yosys-smt2-anyseq top#25 1 $auto$setundef.cc:348:execute$1063
; yosys-smt2-witness {"offset": 7, "path": ["\\din_encoder"], "smtname": 25, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#25| (|top_s|) (_ BitVec 1)) ; \din_encoder [7]
; yosys-smt2-anyseq top#26 14 $auto$setundef.cc:348:execute$1073
; yosys-smt2-witness {"offset": 8, "path": ["\\din_encoder"], "smtname": 26, "smtoffset": 0, "type": "seq", "width": 14}
(declare-fun |top#26| (|top_s|) (_ BitVec 14)) ; \din_encoder [21:8]
; yosys-smt2-anyseq top#27 1 $auto$setundef.cc:348:execute$1055
; yosys-smt2-witness {"offset": 22, "path": ["\\din_encoder"], "smtname": 27, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#27| (|top_s|) (_ BitVec 1)) ; \din_encoder [22]
; yosys-smt2-anyseq top#28 1 $auto$setundef.cc:348:execute$1053
; yosys-smt2-witness {"offset": 23, "path": ["\\din_encoder"], "smtname": 28, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#28| (|top_s|) (_ BitVec 1)) ; \din_encoder [23]
; yosys-smt2-anyseq top#29 1 $auto$setundef.cc:348:execute$1051
; yosys-smt2-witness {"offset": 24, "path": ["\\din_encoder"], "smtname": 29, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#29| (|top_s|) (_ BitVec 1)) ; \din_encoder [24]
; yosys-smt2-anyseq top#30 1 $auto$setundef.cc:348:execute$1049
; yosys-smt2-witness {"offset": 25, "path": ["\\din_encoder"], "smtname": 30, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#30| (|top_s|) (_ BitVec 1)) ; \din_encoder [25]
; yosys-smt2-anyseq top#31 1 $auto$setundef.cc:348:execute$1041
; yosys-smt2-witness {"offset": 26, "path": ["\\din_encoder"], "smtname": 31, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#31| (|top_s|) (_ BitVec 1)) ; \din_encoder [26]
; yosys-smt2-anyseq top#32 1 $auto$setundef.cc:348:execute$1047
; yosys-smt2-witness {"offset": 27, "path": ["\\din_encoder"], "smtname": 32, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#32| (|top_s|) (_ BitVec 1)) ; \din_encoder [27]
; yosys-smt2-anyseq top#33 1 $auto$setundef.cc:348:execute$1031
; yosys-smt2-witness {"offset": 28, "path": ["\\din_encoder"], "smtname": 33, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#33| (|top_s|) (_ BitVec 1)) ; \din_encoder [28]
; yosys-smt2-anyseq top#34 1 $auto$setundef.cc:348:execute$1057
; yosys-smt2-witness {"offset": 29, "path": ["\\din_encoder"], "smtname": 34, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#34| (|top_s|) (_ BitVec 1)) ; \din_encoder [29]
; yosys-smt2-anyseq top#35 1 $auto$setundef.cc:348:execute$1069
; yosys-smt2-witness {"offset": 30, "path": ["\\din_encoder"], "smtname": 35, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#35| (|top_s|) (_ BitVec 1)) ; \din_encoder [30]
; yosys-smt2-anyseq top#36 1 $auto$setundef.cc:348:execute$1035
; yosys-smt2-witness {"offset": 31, "path": ["\\din_encoder"], "smtname": 36, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#36| (|top_s|) (_ BitVec 1)) ; \din_encoder [31]
; yosys-smt2-cell rvecc_encode encoder
; yosys-smt2-witness {"path": ["\\encoder"], "smtname": "encoder", "type": "cell"}
(declare-fun |top#37| (|top_s|) (_ BitVec 7)) ; \ecc_out_encoder
(declare-fun |top_h encoder| (|top_s|) |rvecc_encode_s|)
; yosys-smt2-wire encoded_data 39
(define-fun |top_n encoded_data| ((state |top_s|)) (_ BitVec 39) (concat (|top#37| state) (concat (|top#36| state) (concat (|top#35| state) (concat (|top#34| state) (concat (|top#33| state) (concat (|top#32| state) (concat (|top#31| state) (concat (|top#30| state) (concat (|top#29| state) (concat (|top#28| state) (concat (|top#27| state) (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state)))))))))))))))))))))
; yosys-smt2-wire ecc_out_encoder 7
(define-fun |top_n ecc_out_encoder| ((state |top_s|)) (_ BitVec 7) (|top#37| state))
; yosys-smt2-wire ecc_out_decoder 7
(define-fun |top_n ecc_out_decoder| ((state |top_s|)) (_ BitVec 7) (|top#1| state))
; yosys-smt2-wire ecc_in_decoder 7
(define-fun |top_n ecc_in_decoder| ((state |top_s|)) (_ BitVec 7) ((_ extract 38 32) (|top#5| state)))
; yosys-smt2-wire dout_decoder 32
(define-fun |top_n dout_decoder| ((state |top_s|)) (_ BitVec 32) (|top#2| state))
; yosys-smt2-wire double_ecc_error 1
(define-fun |top_n double_ecc_error| ((state |top_s|)) Bool (|top#3| state))
; yosys-smt2-wire din_encoder 32
(define-fun |top_n din_encoder| ((state |top_s|)) (_ BitVec 32) (concat (|top#36| state) (concat (|top#35| state) (concat (|top#34| state) (concat (|top#33| state) (concat (|top#32| state) (concat (|top#31| state) (concat (|top#30| state) (concat (|top#29| state) (concat (|top#28| state) (concat (|top#27| state) (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state))))))))))))))))))))
; yosys-smt2-wire din_decoder 32
(define-fun |top_n din_decoder| ((state |top_s|)) (_ BitVec 32) ((_ extract 31 0) (|top#5| state)))
; yosys-smt2-anyseq top#38 1 $auto$setundef.cc:348:execute$1009
; yosys-smt2-witness {"offset": 0, "path": ["\\decoder_en"], "smtname": 38, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#38| (|top_s|) (_ BitVec 1)) ; \decoder_en
; yosys-smt2-wire decoder_en 1
(define-fun |top_n decoder_en| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#38| state)) #b1))
; yosys-smt2-wire corrected_data 39
(define-fun |top_n corrected_data| ((state |top_s|)) (_ BitVec 39) (concat (|top#1| state) (|top#2| state)))
(define-fun |top#39| ((state |top_s|)) (_ BitVec 1) (bvnot (|top#4| state))) ; $auto$rtlil.cc:2430:Or$369
; yosys-smt2-cover 0 COVER_SED_DED_ZERO
(define-fun |top_c 0| ((state |top_s|)) Bool (and true (= ((_ extract 0 0) (|top#39| state)) #b1))) ; COVER_SED_DED_ZERO
(define-fun |top#40| ((state |top_s|)) Bool (distinct (concat (|top#37| state) (concat (|top#36| state) (concat (|top#35| state) (concat (|top#34| state) (concat (|top#33| state) (concat (|top#32| state) (concat (|top#31| state) (concat (|top#30| state) (concat (|top#29| state) (concat (|top#28| state) (concat (|top#27| state) (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state)))))))))))))))))))) #b000000000000000000000000000000000000000)) ; $auto$rtlil.cc:2430:Or$389
; yosys-smt2-cover 1 COVER_NON_0
(define-fun |top_c 1| ((state |top_s|)) Bool (and true (|top#40| state))) ; COVER_NON_0
(define-fun |top#41| ((state |top_s|)) Bool (= (concat (|top#17| state) (concat (|top#16| state) (concat (|top#15| state) (concat (|top#14| state) (concat (|top#13| state) (|top#12| state)))))) #b001001)) ; $auto$rtlil.cc:2430:Or$377
; yosys-smt2-cover 2 COVER_ERROR_9_POS
(define-fun |top_c 2| ((state |top_s|)) Bool (and true (|top#41| state))) ; COVER_ERROR_9_POS
(define-fun |top#42| ((state |top_s|)) Bool (= (concat (|top#17| state) (concat (|top#16| state) (concat (|top#15| state) (concat (|top#14| state) (concat (|top#13| state) (|top#12| state)))))) #b100110)) ; $auto$rtlil.cc:2430:Or$381
; yosys-smt2-cover 3 COVER_ERROR_38_POS
(define-fun |top_c 3| ((state |top_s|)) Bool (and true (|top#42| state))) ; COVER_ERROR_38_POS
(define-fun |top#43| ((state |top_s|)) Bool (= (concat (|top#17| state) (concat (|top#16| state) (concat (|top#15| state) (concat (|top#14| state) (concat (|top#13| state) (|top#12| state)))))) #b011000)) ; $auto$rtlil.cc:2430:Or$373
; yosys-smt2-cover 4 COVER_ERROR_24_POS
(define-fun |top_c 4| ((state |top_s|)) Bool (and true (|top#43| state))) ; COVER_ERROR_24_POS
(define-fun |top#44| ((state |top_s|)) Bool (not (or  (= ((_ extract 0 0) (|top#12| state)) #b1) (= ((_ extract 0 0) (|top#13| state)) #b1) (= ((_ extract 0 0) (|top#14| state)) #b1) (= ((_ extract 0 0) (|top#15| state)) #b1) (= ((_ extract 0 0) (|top#16| state)) #b1) (= ((_ extract 0 0) (|top#17| state)) #b1)))) ; $auto$rtlil.cc:2430:Or$385
; yosys-smt2-cover 5 COVER_ERROR_0_POS
(define-fun |top_c 5| ((state |top_s|)) Bool (and true (|top#44| state))) ; COVER_ERROR_0_POS
(define-fun |top#45| ((state |top_s|)) Bool (not (or  (= ((_ extract 0 0) (|top#18| state)) #b1) (= ((_ extract 0 0) (|top#19| state)) #b1) (= ((_ extract 0 0) (|top#20| state)) #b1) (= ((_ extract 0 0) (|top#21| state)) #b1) (= ((_ extract 0 0) (|top#22| state)) #b1) (= ((_ extract 0 0) (|top#23| state)) #b1) (= ((_ extract 0 0) (|top#24| state)) #b1) (= ((_ extract 0 0) (|top#25| state)) #b1) (= ((_ extract 0 0) (|top#26| state)) #b1) (= ((_ extract 1 1) (|top#26| state)) #b1) (= ((_ extract 2 2) (|top#26| state)) #b1) (= ((_ extract 3 3) (|top#26| state)) #b1) (= ((_ extract 4 4) (|top#26| state)) #b1) (= ((_ extract 5 5) (|top#26| state)) #b1) (= ((_ extract 6 6) (|top#26| state)) #b1) (= ((_ extract 7 7) (|top#26| state)) #b1) (= ((_ extract 8 8) (|top#26| state)) #b1) (= ((_ extract 9 9) (|top#26| state)) #b1) (= ((_ extract 10 10) (|top#26| state)) #b1) (= ((_ extract 11 11) (|top#26| state)) #b1) (= ((_ extract 12 12) (|top#26| state)) #b1) (= ((_ extract 13 13) (|top#26| state)) #b1) (= ((_ extract 0 0) (|top#27| state)) #b1) (= ((_ extract 0 0) (|top#28| state)) #b1) (= ((_ extract 0 0) (|top#29| state)) #b1) (= ((_ extract 0 0) (|top#30| state)) #b1) (= ((_ extract 0 0) (|top#31| state)) #b1) (= ((_ extract 0 0) (|top#32| state)) #b1) (= ((_ extract 0 0) (|top#33| state)) #b1) (= ((_ extract 0 0) (|top#34| state)) #b1) (= ((_ extract 0 0) (|top#35| state)) #b1) (= ((_ extract 0 0) (|top#36| state)) #b1) (= ((_ extract 0 0) (|top#37| state)) #b1) (= ((_ extract 1 1) (|top#37| state)) #b1) (= ((_ extract 2 2) (|top#37| state)) #b1) (= ((_ extract 3 3) (|top#37| state)) #b1) (= ((_ extract 4 4) (|top#37| state)) #b1) (= ((_ extract 5 5) (|top#37| state)) #b1) (= ((_ extract 6 6) (|top#37| state)) #b1)))) ; $auto$rtlil.cc:2430:Or$393
; yosys-smt2-cover 6 COVER_ALL_0
(define-fun |top_c 6| ((state |top_s|)) Bool (and true (|top#45| state))) ; COVER_ALL_0
(define-fun |top#46| ((state |top_s|)) Bool (bvule (concat (|top#11| state) (concat (|top#10| state) (concat (|top#9| state) (concat (|top#8| state) (concat (|top#7| state) (|top#6| state)))))) #b100110)) ; $verific$n215$6
(define-fun |top#47| ((state |top_s|)) Bool (distinct (concat (|top#17| state) (concat (|top#16| state) (concat (|top#15| state) (concat (|top#14| state) (concat (|top#13| state) (|top#12| state)))))) (concat (|top#11| state) (concat (|top#10| state) (concat (|top#9| state) (concat (|top#8| state) (concat (|top#7| state) (|top#6| state)))))))) ; $verific$n216$7
(define-fun |top#48| ((state |top_s|)) (_ BitVec 1) (bvand (ite (|top#46| state) #b1 #b0) (ite (|top#47| state) #b1 #b0))) ; $auto$rtlil.cc:2399:Not$357
(define-fun |top#49| ((state |top_s|)) (_ BitVec 1) (bvnot (|top#48| state))) ; $auto$rtlil.cc:2399:Not$355
; yosys-smt2-assume 0 ASSUME_VALID_ERROR_POS2
(define-fun |top_u 0| ((state |top_s|)) Bool (or (= ((_ extract 0 0) (|top#48| state)) #b1) (not (= ((_ extract 0 0) (|top#49| state)) #b1)))) ; ASSUME_VALID_ERROR_POS2
(define-fun |top#50| ((state |top_s|)) Bool (bvule (concat (|top#17| state) (concat (|top#16| state) (concat (|top#15| state) (concat (|top#14| state) (concat (|top#13| state) (|top#12| state)))))) #b100110)) ; $auto$rtlil.cc:2399:Not$363
(define-fun |top#51| ((state |top_s|)) (_ BitVec 1) (bvnot (ite (|top#50| state) #b1 #b0))) ; $auto$rtlil.cc:2399:Not$361
; yosys-smt2-assume 1 ASSUME_VALID_ERROR_POS1
(define-fun |top_u 1| ((state |top_s|)) Bool (or (|top#50| state) (not (= ((_ extract 0 0) (|top#51| state)) #b1)))) ; ASSUME_VALID_ERROR_POS1
(define-fun |top#52| ((state |top_s|)) (_ BitVec 1) (bvnot (|top#38| state))) ; $auto$rtlil.cc:2399:Not$349
; yosys-smt2-assume 2 ASSUME_DECODER_ENABLE
(define-fun |top_u 2| ((state |top_s|)) Bool (or (= ((_ extract 0 0) (|top#38| state)) #b1) (not (= ((_ extract 0 0) (|top#52| state)) #b1)))) ; ASSUME_DECODER_ENABLE
(define-fun |top#53| ((state |top_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|top#4| state)) #b1) #b1 (ite (|top#0| state) #b1 #b0))) ; $auto$rtlil.cc:2399:Not$333
(define-fun |top#54| ((state |top_s|)) (_ BitVec 1) (bvnot (|top#53| state))) ; $auto$rtlil.cc:2399:Not$331
; yosys-smt2-assert 0 ASSERT_SINGLE_ECC
(define-fun |top_a 0| ((state |top_s|)) Bool (or (= ((_ extract 0 0) (|top#53| state)) #b1) (not (= ((_ extract 0 0) (|top#54| state)) #b1)))) ; ASSERT_SINGLE_ECC
(define-fun |top#55| ((state |top_s|)) (_ BitVec 1) (bvnot (ite (|top#0| state) #b1 #b0))) ; $verific$n239$21
(define-fun |top#56| ((state |top_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|top#4| state)) #b1) (|top#55| state) #b1)) ; $auto$rtlil.cc:2399:Not$315
(define-fun |top#57| ((state |top_s|)) (_ BitVec 1) (bvnot (|top#56| state))) ; $auto$rtlil.cc:2399:Not$313
; yosys-smt2-assert 1 ASSERT_NO_SINGLE_ECC
(define-fun |top_a 1| ((state |top_s|)) Bool (or (= ((_ extract 0 0) (|top#56| state)) #b1) (not (= ((_ extract 0 0) (|top#57| state)) #b1)))) ; ASSERT_NO_SINGLE_ECC
(define-fun |top#58| ((state |top_s|)) (_ BitVec 1) (bvnot (ite (|top#3| state) #b1 #b0))) ; $verific$n233$17
(define-fun |top#59| ((state |top_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|top#4| state)) #b1) #b1 (|top#58| state))) ; $auto$rtlil.cc:2399:Not$327
(define-fun |top#60| ((state |top_s|)) (_ BitVec 1) (bvnot (|top#59| state))) ; $auto$rtlil.cc:2399:Not$325
; yosys-smt2-assert 2 ASSERT_NO_DOUBLE_ED
(define-fun |top_a 2| ((state |top_s|)) Bool (or (= ((_ extract 0 0) (|top#59| state)) #b1) (not (= ((_ extract 0 0) (|top#60| state)) #b1)))) ; ASSERT_NO_DOUBLE_ED
(define-fun |top#61| ((state |top_s|)) Bool (distinct (concat (|top#37| state) (concat (|top#36| state) (concat (|top#35| state) (concat (|top#34| state) (concat (|top#33| state) (concat (|top#32| state) (concat (|top#31| state) (concat (|top#30| state) (concat (|top#29| state) (concat (|top#28| state) (concat (|top#27| state) (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state)))))))))))))))))))) (|top#5| state))) ; $auto$rtlil.cc:2399:Not$345
(define-fun |top#62| ((state |top_s|)) (_ BitVec 1) (bvnot (ite (|top#61| state) #b1 #b0))) ; $auto$rtlil.cc:2399:Not$343
; yosys-smt2-assert 3 ASSERT_ERROR_PRESENT
(define-fun |top_a 3| ((state |top_s|)) Bool (or (|top#61| state) (not (= ((_ extract 0 0) (|top#62| state)) #b1)))) ; ASSERT_ERROR_PRESENT
(define-fun |top#63| ((state |top_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|top#4| state)) #b1) (ite (|top#3| state) #b1 #b0) #b1)) ; $auto$rtlil.cc:2399:Not$309
(define-fun |top#64| ((state |top_s|)) (_ BitVec 1) (bvnot (|top#63| state))) ; $auto$rtlil.cc:2399:Not$307
; yosys-smt2-assert 4 ASSERT_DOUBLE_ED
(define-fun |top_a 4| ((state |top_s|)) Bool (or (= ((_ extract 0 0) (|top#63| state)) #b1) (not (= ((_ extract 0 0) (|top#64| state)) #b1)))) ; ASSERT_DOUBLE_ED
(define-fun |top#65| ((state |top_s|)) Bool (= (concat (|top#1| state) (|top#2| state)) (concat (|top#37| state) (concat (|top#36| state) (concat (|top#35| state) (concat (|top#34| state) (concat (|top#33| state) (concat (|top#32| state) (concat (|top#31| state) (concat (|top#30| state) (concat (|top#29| state) (concat (|top#28| state) (concat (|top#27| state) (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state)))))))))))))))))))))) ; $verific$n227$14
(define-fun |top#66| ((state |top_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|top#4| state)) #b1) #b1 (ite (|top#65| state) #b1 #b0))) ; $auto$rtlil.cc:2399:Not$339
(define-fun |top#67| ((state |top_s|)) (_ BitVec 1) (bvnot (|top#66| state))) ; $auto$rtlil.cc:2399:Not$337
; yosys-smt2-assert 5 ASSERT_DATA_RECOVERED
(define-fun |top_a 5| ((state |top_s|)) Bool (or (= ((_ extract 0 0) (|top#66| state)) #b1) (not (= ((_ extract 0 0) (|top#67| state)) #b1)))) ; ASSERT_DATA_RECOVERED
(define-fun |top#68| ((state |top_s|)) Bool (distinct (concat (|top#1| state) (|top#2| state)) (concat (|top#37| state) (concat (|top#36| state) (concat (|top#35| state) (concat (|top#34| state) (concat (|top#33| state) (concat (|top#32| state) (concat (|top#31| state) (concat (|top#30| state) (concat (|top#29| state) (concat (|top#28| state) (concat (|top#27| state) (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state)))))))))))))))))))))) ; $verific$n236$19
(define-fun |top#69| ((state |top_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|top#4| state)) #b1) (ite (|top#68| state) #b1 #b0) #b1)) ; $auto$rtlil.cc:2399:Not$321
(define-fun |top#70| ((state |top_s|)) (_ BitVec 1) (bvnot (|top#69| state))) ; $auto$rtlil.cc:2399:Not$319
; yosys-smt2-assert 6 ASSERT_DATA_NOT_RECOVERED
(define-fun |top_a 6| ((state |top_s|)) Bool (or (= ((_ extract 0 0) (|top#69| state)) #b1) (not (= ((_ extract 0 0) (|top#70| state)) #b1)))) ; ASSERT_DATA_NOT_RECOVERED
(define-fun |top_a| ((state |top_s|)) Bool (and
  (|top_a 0| state)
  (|top_a 1| state)
  (|top_a 2| state)
  (|top_a 3| state)
  (|top_a 4| state)
  (|top_a 5| state)
  (|top_a 6| state)
  (|channel_model_a| (|top_h channel| state))
  (|rvecc_decode_a| (|top_h decoder| state))
  (|rvecc_encode_a| (|top_h encoder| state))
))
(define-fun |top_u| ((state |top_s|)) Bool (and
  (|top_u 0| state)
  (|top_u 1| state)
  (|top_u 2| state)
  (|channel_model_u| (|top_h channel| state))
  (|rvecc_decode_u| (|top_h decoder| state))
  (|rvecc_encode_u| (|top_h encoder| state))
))
(define-fun |top_i| ((state |top_s|)) Bool (and
  (|channel_model_i| (|top_h channel| state))
  (|rvecc_decode_i| (|top_h decoder| state))
  (|rvecc_encode_i| (|top_h encoder| state))
))
(define-fun |top_h| ((state |top_s|)) Bool (and
  (= (|top_is| state) (|channel_model_is| (|top_h channel| state)))
  (= (= ((_ extract 0 0) (|top#4| state)) #b1) (|channel_model_n sed_ded| (|top_h channel| state))) ; channel_model.sed_ded
  (= (concat (|top#11| state) (concat (|top#10| state) (concat (|top#9| state) (concat (|top#8| state) (concat (|top#7| state) (|top#6| state)))))) (|channel_model_n error_pos2| (|top_h channel| state))) ; channel_model.error_pos2
  (= (concat (|top#17| state) (concat (|top#16| state) (concat (|top#15| state) (concat (|top#14| state) (concat (|top#13| state) (|top#12| state)))))) (|channel_model_n error_pos1| (|top_h channel| state))) ; channel_model.error_pos1
  (= (|top#5| state) (|channel_model_n dout| (|top_h channel| state))) ; channel_model.dout
  (= (concat (|top#37| state) (concat (|top#36| state) (concat (|top#35| state) (concat (|top#34| state) (concat (|top#33| state) (concat (|top#32| state) (concat (|top#31| state) (concat (|top#30| state) (concat (|top#29| state) (concat (|top#28| state) (concat (|top#27| state) (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state)))))))))))))))))))) (|channel_model_n din| (|top_h channel| state))) ; channel_model.din
  (= (|top_is| state) (|rvecc_decode_is| (|top_h decoder| state)))
  (= (|top#0| state) (|rvecc_decode_n single_ecc_error| (|top_h decoder| state))) ; rvecc_decode.single_ecc_error
  (= (= ((_ extract 0 0) (|top#4| state)) #b1) (|rvecc_decode_n sed_ded| (|top_h decoder| state))) ; rvecc_decode.sed_ded
  (= (= ((_ extract 0 0) (|top#38| state)) #b1) (|rvecc_decode_n en| (|top_h decoder| state))) ; rvecc_decode.en
  (= (|top#1| state) (|rvecc_decode_n ecc_out| (|top_h decoder| state))) ; rvecc_decode.ecc_out
  (= ((_ extract 38 32) (|top#5| state)) (|rvecc_decode_n ecc_in| (|top_h decoder| state))) ; rvecc_decode.ecc_in
  (= (|top#2| state) (|rvecc_decode_n dout| (|top_h decoder| state))) ; rvecc_decode.dout
  (= (|top#3| state) (|rvecc_decode_n double_ecc_error| (|top_h decoder| state))) ; rvecc_decode.double_ecc_error
  (= ((_ extract 31 0) (|top#5| state)) (|rvecc_decode_n din| (|top_h decoder| state))) ; rvecc_decode.din
  (= (|top_is| state) (|rvecc_encode_is| (|top_h encoder| state)))
  (= (|top#37| state) (|rvecc_encode_n ecc_out| (|top_h encoder| state))) ; rvecc_encode.ecc_out
  (= (concat (|top#36| state) (concat (|top#35| state) (concat (|top#34| state) (concat (|top#33| state) (concat (|top#32| state) (concat (|top#31| state) (concat (|top#30| state) (concat (|top#29| state) (concat (|top#28| state) (concat (|top#27| state) (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state))))))))))))))))))) (|rvecc_encode_n din| (|top_h encoder| state))) ; rvecc_encode.din
  (|channel_model_h| (|top_h channel| state))
  (|rvecc_decode_h| (|top_h decoder| state))
  (|rvecc_encode_h| (|top_h encoder| state))
))
(define-fun |top_t| ((state |top_s|) (next_state |top_s|)) Bool (and
  (|channel_model_t| (|top_h channel| state) (|top_h channel| next_state))
  (|rvecc_decode_t| (|top_h decoder| state) (|top_h decoder| next_state))
  (|rvecc_encode_t| (|top_h encoder| state) (|top_h encoder| next_state))
)) ; end of module top
; yosys-smt2-topmod top
; end of yosys output
