; SMT-LIBv2 description generated by Yosys 0.38+54 (git sha1 f8d4d7128, clang 14.0.0-1ubuntu1.1 -fPIC -Os)
; yosys-smt2-module $paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111
(declare-sort |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s| 0)
(declare-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_is| (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|) Bool)
(declare-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#0| (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|) Bool) ; \sed_ded
; yosys-smt2-input sed_ded 1
; yosys-smt2-wire sed_ded 1
; yosys-smt2-witness {"offset": 0, "path": ["\\sed_ded"], "smtname": "sed_ded", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_n sed_ded| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) Bool (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#0| state))
(declare-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#1| (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|) (_ BitVec 6)) ; \error_pos2
; yosys-smt2-input error_pos2 6
; yosys-smt2-wire error_pos2 6
; yosys-smt2-witness {"offset": 0, "path": ["\\error_pos2"], "smtname": "error_pos2", "smtoffset": 0, "type": "input", "width": 6}
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_n error_pos2| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#1| state))
(declare-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#2| (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|) (_ BitVec 6)) ; \error_pos1
; yosys-smt2-input error_pos1 6
; yosys-smt2-wire error_pos1 6
; yosys-smt2-witness {"offset": 0, "path": ["\\error_pos1"], "smtname": "error_pos1", "smtoffset": 0, "type": "input", "width": 6}
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_n error_pos1| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#2| state))
(declare-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#3| (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|) (_ BitVec 39)) ; \din
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 7) (bvneg (concat #b0 (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#2| state)))) ; $neg$channel_model.sv:0$184_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#5| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 39) (ite (bvsge (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state) #b0000000) (bvlshr #b000000000000000000000000000000000000001 (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)))))))))))))))))))))))))))))))))) (bvshl #b000000000000000000000000000000000000001 (bvneg (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state))))))))))))))))))))))))))))))))))))) ; $shift$channel_model.sv:0$185_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#6| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 39) (bvnot (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#5| state))) ; $not$channel_model.sv:0$186_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#7| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 39) (bvand (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#3| state) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#6| state))) ; $and$channel_model.sv:0$187_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#8| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 1) ((_ extract 0 0) (bvlshr (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#3| state) (concat #b000000000000000000000000000000000 (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#2| state))))) ; $shiftx$channel_model.sv:0$188_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#9| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) Bool (not (or  (= ((_ extract 0 0) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#8| state)) #b1) false))) ; $logic_not$channel_model.sv:11$189_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#10| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 39) (ite (bvsge (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state) #b0000000) (bvlshr (concat #b00000000000000000000000000000000000000 (ite (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#9| state) #b1 #b0)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)))))))))))))))))))))))))))))))))) (bvshl (concat #b00000000000000000000000000000000000000 (ite (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#9| state) #b1 #b0)) (bvneg (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state)) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#4| state))))))))))))))))))))))))))))))))))))) ; $shift$channel_model.sv:0$191_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#11| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 39) (bvor (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#7| state) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#10| state))) ; $or$channel_model.sv:0$192_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 7) (bvneg (concat #b0 (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#1| state)))) ; $neg$channel_model.sv:0$202_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#13| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 39) (ite (bvsge (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state) #b0000000) (bvlshr #b000000000000000000000000000000000000001 (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)))))))))))))))))))))))))))))))))) (bvshl #b000000000000000000000000000000000000001 (bvneg (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state))))))))))))))))))))))))))))))))))))) ; $shift$channel_model.sv:0$203_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#14| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 39) (bvnot (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#13| state))) ; $not$channel_model.sv:0$204_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#15| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 39) (bvand (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#11| state) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#14| state))) ; $and$channel_model.sv:0$205_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#16| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 1) ((_ extract 0 0) (bvlshr (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#3| state) (concat #b000000000000000000000000000000000 (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#1| state))))) ; $shiftx$channel_model.sv:0$206_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#17| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) Bool (not (or  (= ((_ extract 0 0) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#16| state)) #b1) false))) ; $logic_not$channel_model.sv:14$207_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#18| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 39) (ite (bvsge (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state) #b0000000) (bvlshr (concat #b00000000000000000000000000000000000000 (ite (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#17| state) #b1 #b0)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)))))))))))))))))))))))))))))))))) (bvshl (concat #b00000000000000000000000000000000000000 (ite (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#17| state) #b1 #b0)) (bvneg (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (concat ((_ extract 6 6) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state)) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#12| state))))))))))))))))))))))))))))))))))))) ; $shift$channel_model.sv:0$209_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#19| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 39) (bvor (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#15| state) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#18| state))) ; $or$channel_model.sv:0$210_Y
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#20| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 39) (ite (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#0| state) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#19| state) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#11| state))) ; \dout
; yosys-smt2-output dout 39
; yosys-smt2-wire dout 39
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_n dout| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 39) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#20| state))
; yosys-smt2-input din 39
; yosys-smt2-wire din 39
; yosys-smt2-witness {"offset": 0, "path": ["\\din"], "smtname": "din", "smtoffset": 0, "type": "input", "width": 39}
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_n din| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) (_ BitVec 39) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111#3| state))
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_a| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) Bool true)
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_u| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) Bool true)
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_i| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) Bool true)
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_h| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) Bool true)
(define-fun |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_t| ((state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|) (next_state |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)) Bool true) ; end of module $paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111
; yosys-smt2-module rvecc_decode
(declare-sort |rvecc_decode_s| 0)
(declare-fun |rvecc_decode_is| (|rvecc_decode_s|) Bool)
(declare-fun |rvecc_decode#0| (|rvecc_decode_s|) (_ BitVec 1)) ; \en
(declare-fun |rvecc_decode#1| (|rvecc_decode_s|) (_ BitVec 1)) ; \ecc_in [0]
(declare-fun |rvecc_decode#2| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [0]
(define-fun |rvecc_decode#3| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#1| state) (|rvecc_decode#2| state))) ; $xor$rvecc_decode.sv:34$28_Y
(declare-fun |rvecc_decode#4| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [1]
(define-fun |rvecc_decode#5| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#3| state) (|rvecc_decode#4| state))) ; $xor$rvecc_decode.sv:34$29_Y
(declare-fun |rvecc_decode#6| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [3]
(define-fun |rvecc_decode#7| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#5| state) (|rvecc_decode#6| state))) ; $xor$rvecc_decode.sv:34$30_Y
(declare-fun |rvecc_decode#8| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [4]
(define-fun |rvecc_decode#9| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#7| state) (|rvecc_decode#8| state))) ; $xor$rvecc_decode.sv:34$31_Y
(declare-fun |rvecc_decode#10| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [6]
(define-fun |rvecc_decode#11| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#9| state) (|rvecc_decode#10| state))) ; $xor$rvecc_decode.sv:34$32_Y
(declare-fun |rvecc_decode#12| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [8]
(define-fun |rvecc_decode#13| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#11| state) (|rvecc_decode#12| state))) ; $xor$rvecc_decode.sv:34$33_Y
(declare-fun |rvecc_decode#14| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [10]
(define-fun |rvecc_decode#15| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#13| state) (|rvecc_decode#14| state))) ; $xor$rvecc_decode.sv:34$34_Y
(declare-fun |rvecc_decode#16| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [11]
(define-fun |rvecc_decode#17| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#15| state) (|rvecc_decode#16| state))) ; $xor$rvecc_decode.sv:34$35_Y
(declare-fun |rvecc_decode#18| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [13]
(define-fun |rvecc_decode#19| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#17| state) (|rvecc_decode#18| state))) ; $xor$rvecc_decode.sv:34$36_Y
(declare-fun |rvecc_decode#20| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [15]
(define-fun |rvecc_decode#21| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#19| state) (|rvecc_decode#20| state))) ; $xor$rvecc_decode.sv:34$37_Y
(declare-fun |rvecc_decode#22| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [17]
(define-fun |rvecc_decode#23| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#21| state) (|rvecc_decode#22| state))) ; $xor$rvecc_decode.sv:34$38_Y
(declare-fun |rvecc_decode#24| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [19]
(define-fun |rvecc_decode#25| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#23| state) (|rvecc_decode#24| state))) ; $xor$rvecc_decode.sv:34$39_Y
(declare-fun |rvecc_decode#26| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [21]
(define-fun |rvecc_decode#27| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#25| state) (|rvecc_decode#26| state))) ; $xor$rvecc_decode.sv:34$40_Y
(declare-fun |rvecc_decode#28| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [23]
(define-fun |rvecc_decode#29| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#27| state) (|rvecc_decode#28| state))) ; $xor$rvecc_decode.sv:34$41_Y
(declare-fun |rvecc_decode#30| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [25]
(define-fun |rvecc_decode#31| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#29| state) (|rvecc_decode#30| state))) ; $xor$rvecc_decode.sv:34$42_Y
(declare-fun |rvecc_decode#32| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [26]
(define-fun |rvecc_decode#33| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#31| state) (|rvecc_decode#32| state))) ; $xor$rvecc_decode.sv:34$43_Y
(declare-fun |rvecc_decode#34| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [28]
(define-fun |rvecc_decode#35| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#33| state) (|rvecc_decode#34| state))) ; $xor$rvecc_decode.sv:34$44_Y
(declare-fun |rvecc_decode#36| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [30]
(define-fun |rvecc_decode#37| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#35| state) (|rvecc_decode#36| state))) ; \ecc_check [0]
(declare-fun |rvecc_decode#38| (|rvecc_decode_s|) (_ BitVec 1)) ; \ecc_in [1]
(define-fun |rvecc_decode#39| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#38| state) (|rvecc_decode#2| state))) ; $xor$rvecc_decode.sv:35$46_Y
(declare-fun |rvecc_decode#40| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [2]
(define-fun |rvecc_decode#41| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#39| state) (|rvecc_decode#40| state))) ; $xor$rvecc_decode.sv:35$47_Y
(define-fun |rvecc_decode#42| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#41| state) (|rvecc_decode#6| state))) ; $xor$rvecc_decode.sv:35$48_Y
(declare-fun |rvecc_decode#43| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [5]
(define-fun |rvecc_decode#44| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#42| state) (|rvecc_decode#43| state))) ; $xor$rvecc_decode.sv:35$49_Y
(define-fun |rvecc_decode#45| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#44| state) (|rvecc_decode#10| state))) ; $xor$rvecc_decode.sv:35$50_Y
(declare-fun |rvecc_decode#46| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [9]
(define-fun |rvecc_decode#47| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#45| state) (|rvecc_decode#46| state))) ; $xor$rvecc_decode.sv:35$51_Y
(define-fun |rvecc_decode#48| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#47| state) (|rvecc_decode#14| state))) ; $xor$rvecc_decode.sv:35$52_Y
(declare-fun |rvecc_decode#49| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [12]
(define-fun |rvecc_decode#50| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#48| state) (|rvecc_decode#49| state))) ; $xor$rvecc_decode.sv:35$53_Y
(define-fun |rvecc_decode#51| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#50| state) (|rvecc_decode#18| state))) ; $xor$rvecc_decode.sv:35$54_Y
(declare-fun |rvecc_decode#52| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [16]
(define-fun |rvecc_decode#53| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#51| state) (|rvecc_decode#52| state))) ; $xor$rvecc_decode.sv:35$55_Y
(define-fun |rvecc_decode#54| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#53| state) (|rvecc_decode#22| state))) ; $xor$rvecc_decode.sv:35$56_Y
(declare-fun |rvecc_decode#55| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [20]
(define-fun |rvecc_decode#56| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#54| state) (|rvecc_decode#55| state))) ; $xor$rvecc_decode.sv:35$57_Y
(define-fun |rvecc_decode#57| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#56| state) (|rvecc_decode#26| state))) ; $xor$rvecc_decode.sv:35$58_Y
(declare-fun |rvecc_decode#58| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [24]
(define-fun |rvecc_decode#59| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#57| state) (|rvecc_decode#58| state))) ; $xor$rvecc_decode.sv:35$59_Y
(define-fun |rvecc_decode#60| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#59| state) (|rvecc_decode#30| state))) ; $xor$rvecc_decode.sv:35$60_Y
(declare-fun |rvecc_decode#61| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [27]
(define-fun |rvecc_decode#62| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#60| state) (|rvecc_decode#61| state))) ; $xor$rvecc_decode.sv:35$61_Y
(define-fun |rvecc_decode#63| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#62| state) (|rvecc_decode#34| state))) ; $xor$rvecc_decode.sv:35$62_Y
(declare-fun |rvecc_decode#64| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [31]
(define-fun |rvecc_decode#65| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#63| state) (|rvecc_decode#64| state))) ; \ecc_check [1]
(declare-fun |rvecc_decode#66| (|rvecc_decode_s|) (_ BitVec 1)) ; \ecc_in [2]
(define-fun |rvecc_decode#67| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#66| state) (|rvecc_decode#4| state))) ; $xor$rvecc_decode.sv:36$64_Y
(define-fun |rvecc_decode#68| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#67| state) (|rvecc_decode#40| state))) ; $xor$rvecc_decode.sv:36$65_Y
(define-fun |rvecc_decode#69| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#68| state) (|rvecc_decode#6| state))) ; $xor$rvecc_decode.sv:36$66_Y
(declare-fun |rvecc_decode#70| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [7]
(define-fun |rvecc_decode#71| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#69| state) (|rvecc_decode#70| state))) ; $xor$rvecc_decode.sv:36$67_Y
(define-fun |rvecc_decode#72| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#71| state) (|rvecc_decode#12| state))) ; $xor$rvecc_decode.sv:36$68_Y
(define-fun |rvecc_decode#73| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#72| state) (|rvecc_decode#46| state))) ; $xor$rvecc_decode.sv:36$69_Y
(define-fun |rvecc_decode#74| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#73| state) (|rvecc_decode#14| state))) ; $xor$rvecc_decode.sv:36$70_Y
(declare-fun |rvecc_decode#75| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [14]
(define-fun |rvecc_decode#76| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#74| state) (|rvecc_decode#75| state))) ; $xor$rvecc_decode.sv:36$71_Y
(define-fun |rvecc_decode#77| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#76| state) (|rvecc_decode#20| state))) ; $xor$rvecc_decode.sv:36$72_Y
(define-fun |rvecc_decode#78| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#77| state) (|rvecc_decode#52| state))) ; $xor$rvecc_decode.sv:36$73_Y
(define-fun |rvecc_decode#79| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#78| state) (|rvecc_decode#22| state))) ; $xor$rvecc_decode.sv:36$74_Y
(declare-fun |rvecc_decode#80| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [22]
(define-fun |rvecc_decode#81| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#79| state) (|rvecc_decode#80| state))) ; $xor$rvecc_decode.sv:36$75_Y
(define-fun |rvecc_decode#82| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#81| state) (|rvecc_decode#28| state))) ; $xor$rvecc_decode.sv:36$76_Y
(define-fun |rvecc_decode#83| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#82| state) (|rvecc_decode#58| state))) ; $xor$rvecc_decode.sv:36$77_Y
(define-fun |rvecc_decode#84| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#83| state) (|rvecc_decode#30| state))) ; $xor$rvecc_decode.sv:36$78_Y
(declare-fun |rvecc_decode#85| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [29]
(define-fun |rvecc_decode#86| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#84| state) (|rvecc_decode#85| state))) ; $xor$rvecc_decode.sv:36$79_Y
(define-fun |rvecc_decode#87| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#86| state) (|rvecc_decode#36| state))) ; $xor$rvecc_decode.sv:36$80_Y
(define-fun |rvecc_decode#88| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#87| state) (|rvecc_decode#64| state))) ; \ecc_check [2]
(declare-fun |rvecc_decode#89| (|rvecc_decode_s|) (_ BitVec 1)) ; \ecc_in [3]
(define-fun |rvecc_decode#90| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#89| state) (|rvecc_decode#8| state))) ; $xor$rvecc_decode.sv:37$82_Y
(define-fun |rvecc_decode#91| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#90| state) (|rvecc_decode#43| state))) ; $xor$rvecc_decode.sv:37$83_Y
(define-fun |rvecc_decode#92| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#91| state) (|rvecc_decode#10| state))) ; $xor$rvecc_decode.sv:37$84_Y
(define-fun |rvecc_decode#93| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#92| state) (|rvecc_decode#70| state))) ; $xor$rvecc_decode.sv:37$85_Y
(define-fun |rvecc_decode#94| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#93| state) (|rvecc_decode#12| state))) ; $xor$rvecc_decode.sv:37$86_Y
(define-fun |rvecc_decode#95| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#94| state) (|rvecc_decode#46| state))) ; $xor$rvecc_decode.sv:37$87_Y
(define-fun |rvecc_decode#96| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#95| state) (|rvecc_decode#14| state))) ; $xor$rvecc_decode.sv:37$88_Y
(declare-fun |rvecc_decode#97| (|rvecc_decode_s|) (_ BitVec 1)) ; \din [18]
(define-fun |rvecc_decode#98| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#96| state) (|rvecc_decode#97| state))) ; $xor$rvecc_decode.sv:37$89_Y
(define-fun |rvecc_decode#99| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#98| state) (|rvecc_decode#24| state))) ; $xor$rvecc_decode.sv:37$90_Y
(define-fun |rvecc_decode#100| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#99| state) (|rvecc_decode#55| state))) ; $xor$rvecc_decode.sv:37$91_Y
(define-fun |rvecc_decode#101| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#100| state) (|rvecc_decode#26| state))) ; $xor$rvecc_decode.sv:37$92_Y
(define-fun |rvecc_decode#102| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#101| state) (|rvecc_decode#80| state))) ; $xor$rvecc_decode.sv:37$93_Y
(define-fun |rvecc_decode#103| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#102| state) (|rvecc_decode#28| state))) ; $xor$rvecc_decode.sv:37$94_Y
(define-fun |rvecc_decode#104| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#103| state) (|rvecc_decode#58| state))) ; $xor$rvecc_decode.sv:37$95_Y
(define-fun |rvecc_decode#105| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#104| state) (|rvecc_decode#30| state))) ; \ecc_check [3]
(declare-fun |rvecc_decode#106| (|rvecc_decode_s|) (_ BitVec 1)) ; \ecc_in [4]
(define-fun |rvecc_decode#107| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#106| state) (|rvecc_decode#16| state))) ; $xor$rvecc_decode.sv:38$97_Y
(define-fun |rvecc_decode#108| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#107| state) (|rvecc_decode#49| state))) ; $xor$rvecc_decode.sv:38$98_Y
(define-fun |rvecc_decode#109| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#108| state) (|rvecc_decode#18| state))) ; $xor$rvecc_decode.sv:38$99_Y
(define-fun |rvecc_decode#110| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#109| state) (|rvecc_decode#75| state))) ; $xor$rvecc_decode.sv:38$100_Y
(define-fun |rvecc_decode#111| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#110| state) (|rvecc_decode#20| state))) ; $xor$rvecc_decode.sv:38$101_Y
(define-fun |rvecc_decode#112| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#111| state) (|rvecc_decode#52| state))) ; $xor$rvecc_decode.sv:38$102_Y
(define-fun |rvecc_decode#113| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#112| state) (|rvecc_decode#22| state))) ; $xor$rvecc_decode.sv:38$103_Y
(define-fun |rvecc_decode#114| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#113| state) (|rvecc_decode#97| state))) ; $xor$rvecc_decode.sv:38$104_Y
(define-fun |rvecc_decode#115| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#114| state) (|rvecc_decode#24| state))) ; $xor$rvecc_decode.sv:38$105_Y
(define-fun |rvecc_decode#116| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#115| state) (|rvecc_decode#55| state))) ; $xor$rvecc_decode.sv:38$106_Y
(define-fun |rvecc_decode#117| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#116| state) (|rvecc_decode#26| state))) ; $xor$rvecc_decode.sv:38$107_Y
(define-fun |rvecc_decode#118| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#117| state) (|rvecc_decode#80| state))) ; $xor$rvecc_decode.sv:38$108_Y
(define-fun |rvecc_decode#119| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#118| state) (|rvecc_decode#28| state))) ; $xor$rvecc_decode.sv:38$109_Y
(define-fun |rvecc_decode#120| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#119| state) (|rvecc_decode#58| state))) ; $xor$rvecc_decode.sv:38$110_Y
(define-fun |rvecc_decode#121| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#120| state) (|rvecc_decode#30| state))) ; \ecc_check [4]
(declare-fun |rvecc_decode#122| (|rvecc_decode_s|) (_ BitVec 1)) ; \ecc_in [5]
(define-fun |rvecc_decode#123| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#122| state) (|rvecc_decode#32| state))) ; $xor$rvecc_decode.sv:39$112_Y
(define-fun |rvecc_decode#124| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#123| state) (|rvecc_decode#61| state))) ; $xor$rvecc_decode.sv:39$113_Y
(define-fun |rvecc_decode#125| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#124| state) (|rvecc_decode#34| state))) ; $xor$rvecc_decode.sv:39$114_Y
(define-fun |rvecc_decode#126| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#125| state) (|rvecc_decode#85| state))) ; $xor$rvecc_decode.sv:39$115_Y
(define-fun |rvecc_decode#127| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#126| state) (|rvecc_decode#36| state))) ; $xor$rvecc_decode.sv:39$116_Y
(define-fun |rvecc_decode#128| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (|rvecc_decode#127| state) (|rvecc_decode#64| state))) ; \ecc_check [5]
(define-fun |rvecc_decode#129| ((state |rvecc_decode_s|)) Bool (xor  (= ((_ extract 0 0) (|rvecc_decode#2| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#4| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#40| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#6| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#8| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#43| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#10| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#70| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#12| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#46| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#14| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#16| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#49| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#18| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#75| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#20| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#52| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#22| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#97| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#24| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#55| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#26| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#80| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#28| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#58| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#30| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#32| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#61| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#34| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#85| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#36| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#64| state)) #b1))) ; $reduce_xor$rvecc_decode.sv:42$118_Y
(declare-fun |rvecc_decode#130| (|rvecc_decode_s|) Bool) ; \ecc_in [6]
(define-fun |rvecc_decode#131| ((state |rvecc_decode_s|)) Bool (xor  (= ((_ extract 0 0) (|rvecc_decode#1| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#38| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#66| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#89| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#106| state)) #b1) (= ((_ extract 0 0) (|rvecc_decode#122| state)) #b1) (|rvecc_decode#130| state))) ; $reduce_xor$rvecc_decode.sv:42$119_Y
(define-fun |rvecc_decode#132| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor (ite (|rvecc_decode#129| state) #b1 #b0) (ite (|rvecc_decode#131| state) #b1 #b0))) ; $xor$rvecc_decode.sv:42$120_Y
(declare-fun |rvecc_decode#133| (|rvecc_decode_s|) (_ BitVec 1)) ; \sed_ded
(define-fun |rvecc_decode#134| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvnot (|rvecc_decode#133| state))) ; $not$rvecc_decode.sv:42$121_Y
(define-fun |rvecc_decode#135| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvand (|rvecc_decode#132| state) (|rvecc_decode#134| state))) ; \ecc_check [6]
(define-fun |rvecc_decode#136| ((state |rvecc_decode_s|)) Bool (distinct (concat (|rvecc_decode#135| state) (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state))))))) #b0000000)) ; $ne$rvecc_decode.sv:44$123_Y
(define-fun |rvecc_decode#137| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvand (|rvecc_decode#0| state) (ite (|rvecc_decode#136| state) #b1 #b0))) ; $and$rvecc_decode.sv:44$124_Y
(define-fun |rvecc_decode#138| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvand (|rvecc_decode#137| state) (|rvecc_decode#135| state))) ; \single_ecc_error
; yosys-smt2-output single_ecc_error 1
; yosys-smt2-wire single_ecc_error 1
(define-fun |rvecc_decode_n single_ecc_error| ((state |rvecc_decode_s|)) Bool (= ((_ extract 0 0) (|rvecc_decode#138| state)) #b1))
; yosys-smt2-input sed_ded 1
; yosys-smt2-wire sed_ded 1
; yosys-smt2-witness {"offset": 0, "path": ["\\sed_ded"], "smtname": "sed_ded", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |rvecc_decode_n sed_ded| ((state |rvecc_decode_s|)) Bool (= ((_ extract 0 0) (|rvecc_decode#133| state)) #b1))
(define-fun |rvecc_decode#139| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b000001)) ; \error_mask [0]
(define-fun |rvecc_decode#140| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b000010)) ; \error_mask [1]
(define-fun |rvecc_decode#141| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b000011)) ; \error_mask [2]
(define-fun |rvecc_decode#142| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b000100)) ; \error_mask [3]
(define-fun |rvecc_decode#143| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b000101)) ; \error_mask [4]
(define-fun |rvecc_decode#144| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b000110)) ; \error_mask [5]
(define-fun |rvecc_decode#145| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b000111)) ; \error_mask [6]
(define-fun |rvecc_decode#146| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b001000)) ; \error_mask [7]
(define-fun |rvecc_decode#147| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b001001)) ; \error_mask [8]
(define-fun |rvecc_decode#148| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b001010)) ; \error_mask [9]
(define-fun |rvecc_decode#149| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b001011)) ; \error_mask [10]
(define-fun |rvecc_decode#150| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b001100)) ; \error_mask [11]
(define-fun |rvecc_decode#151| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b001101)) ; \error_mask [12]
(define-fun |rvecc_decode#152| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b001110)) ; \error_mask [13]
(define-fun |rvecc_decode#153| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b001111)) ; \error_mask [14]
(define-fun |rvecc_decode#154| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b010000)) ; \error_mask [15]
(define-fun |rvecc_decode#155| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b010001)) ; \error_mask [16]
(define-fun |rvecc_decode#156| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b010010)) ; \error_mask [17]
(define-fun |rvecc_decode#157| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b010011)) ; \error_mask [18]
(define-fun |rvecc_decode#158| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b010100)) ; \error_mask [19]
(define-fun |rvecc_decode#159| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b010101)) ; \error_mask [20]
(define-fun |rvecc_decode#160| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b010110)) ; \error_mask [21]
(define-fun |rvecc_decode#161| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b010111)) ; \error_mask [22]
(define-fun |rvecc_decode#162| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b011000)) ; \error_mask [23]
(define-fun |rvecc_decode#163| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b011001)) ; \error_mask [24]
(define-fun |rvecc_decode#164| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b011010)) ; \error_mask [25]
(define-fun |rvecc_decode#165| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b011011)) ; \error_mask [26]
(define-fun |rvecc_decode#166| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b011100)) ; \error_mask [27]
(define-fun |rvecc_decode#167| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b011101)) ; \error_mask [28]
(define-fun |rvecc_decode#168| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b011110)) ; \error_mask [29]
(define-fun |rvecc_decode#169| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b011111)) ; \error_mask [30]
(define-fun |rvecc_decode#170| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b100000)) ; \error_mask [31]
(define-fun |rvecc_decode#171| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b100001)) ; \error_mask [32]
(define-fun |rvecc_decode#172| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b100010)) ; \error_mask [33]
(define-fun |rvecc_decode#173| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b100011)) ; \error_mask [34]
(define-fun |rvecc_decode#174| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b100100)) ; \error_mask [35]
(define-fun |rvecc_decode#175| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b100101)) ; \error_mask [36]
(define-fun |rvecc_decode#176| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b100110)) ; \error_mask [37]
(define-fun |rvecc_decode#177| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state)))))) #b100111)) ; \error_mask [38]
; yosys-smt2-wire error_mask 39
(define-fun |rvecc_decode_n error_mask| ((state |rvecc_decode_s|)) (_ BitVec 39) (concat (ite (|rvecc_decode#177| state) #b1 #b0) (concat (ite (|rvecc_decode#176| state) #b1 #b0) (concat (ite (|rvecc_decode#175| state) #b1 #b0) (concat (ite (|rvecc_decode#174| state) #b1 #b0) (concat (ite (|rvecc_decode#173| state) #b1 #b0) (concat (ite (|rvecc_decode#172| state) #b1 #b0) (concat (ite (|rvecc_decode#171| state) #b1 #b0) (concat (ite (|rvecc_decode#170| state) #b1 #b0) (concat (ite (|rvecc_decode#169| state) #b1 #b0) (concat (ite (|rvecc_decode#168| state) #b1 #b0) (concat (ite (|rvecc_decode#167| state) #b1 #b0) (concat (ite (|rvecc_decode#166| state) #b1 #b0) (concat (ite (|rvecc_decode#165| state) #b1 #b0) (concat (ite (|rvecc_decode#164| state) #b1 #b0) (concat (ite (|rvecc_decode#163| state) #b1 #b0) (concat (ite (|rvecc_decode#162| state) #b1 #b0) (concat (ite (|rvecc_decode#161| state) #b1 #b0) (concat (ite (|rvecc_decode#160| state) #b1 #b0) (concat (ite (|rvecc_decode#159| state) #b1 #b0) (concat (ite (|rvecc_decode#158| state) #b1 #b0) (concat (ite (|rvecc_decode#157| state) #b1 #b0) (concat (ite (|rvecc_decode#156| state) #b1 #b0) (concat (ite (|rvecc_decode#155| state) #b1 #b0) (concat (ite (|rvecc_decode#154| state) #b1 #b0) (concat (ite (|rvecc_decode#153| state) #b1 #b0) (concat (ite (|rvecc_decode#152| state) #b1 #b0) (concat (ite (|rvecc_decode#151| state) #b1 #b0) (concat (ite (|rvecc_decode#150| state) #b1 #b0) (concat (ite (|rvecc_decode#149| state) #b1 #b0) (concat (ite (|rvecc_decode#148| state) #b1 #b0) (concat (ite (|rvecc_decode#147| state) #b1 #b0) (concat (ite (|rvecc_decode#146| state) #b1 #b0) (concat (ite (|rvecc_decode#145| state) #b1 #b0) (concat (ite (|rvecc_decode#144| state) #b1 #b0) (concat (ite (|rvecc_decode#143| state) #b1 #b0) (concat (ite (|rvecc_decode#142| state) #b1 #b0) (concat (ite (|rvecc_decode#141| state) #b1 #b0) (concat (ite (|rvecc_decode#140| state) #b1 #b0) (ite (|rvecc_decode#139| state) #b1 #b0))))))))))))))))))))))))))))))))))))))))
; yosys-smt2-input en 1
; yosys-smt2-wire en 1
; yosys-smt2-witness {"offset": 0, "path": ["\\en"], "smtname": "en", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |rvecc_decode_n en| ((state |rvecc_decode_s|)) Bool (= ((_ extract 0 0) (|rvecc_decode#0| state)) #b1))
(define-fun |rvecc_decode#178| ((state |rvecc_decode_s|)) (_ BitVec 39) (bvxor (concat (ite (|rvecc_decode#177| state) #b1 #b0) (concat (ite (|rvecc_decode#176| state) #b1 #b0) (concat (ite (|rvecc_decode#175| state) #b1 #b0) (concat (ite (|rvecc_decode#174| state) #b1 #b0) (concat (ite (|rvecc_decode#173| state) #b1 #b0) (concat (ite (|rvecc_decode#172| state) #b1 #b0) (concat (ite (|rvecc_decode#171| state) #b1 #b0) (concat (ite (|rvecc_decode#170| state) #b1 #b0) (concat (ite (|rvecc_decode#169| state) #b1 #b0) (concat (ite (|rvecc_decode#168| state) #b1 #b0) (concat (ite (|rvecc_decode#167| state) #b1 #b0) (concat (ite (|rvecc_decode#166| state) #b1 #b0) (concat (ite (|rvecc_decode#165| state) #b1 #b0) (concat (ite (|rvecc_decode#164| state) #b1 #b0) (concat (ite (|rvecc_decode#163| state) #b1 #b0) (concat (ite (|rvecc_decode#162| state) #b1 #b0) (concat (ite (|rvecc_decode#161| state) #b1 #b0) (concat (ite (|rvecc_decode#160| state) #b1 #b0) (concat (ite (|rvecc_decode#159| state) #b1 #b0) (concat (ite (|rvecc_decode#158| state) #b1 #b0) (concat (ite (|rvecc_decode#157| state) #b1 #b0) (concat (ite (|rvecc_decode#156| state) #b1 #b0) (concat (ite (|rvecc_decode#155| state) #b1 #b0) (concat (ite (|rvecc_decode#154| state) #b1 #b0) (concat (ite (|rvecc_decode#153| state) #b1 #b0) (concat (ite (|rvecc_decode#152| state) #b1 #b0) (concat (ite (|rvecc_decode#151| state) #b1 #b0) (concat (ite (|rvecc_decode#150| state) #b1 #b0) (concat (ite (|rvecc_decode#149| state) #b1 #b0) (concat (ite (|rvecc_decode#148| state) #b1 #b0) (concat (ite (|rvecc_decode#147| state) #b1 #b0) (concat (ite (|rvecc_decode#146| state) #b1 #b0) (concat (ite (|rvecc_decode#145| state) #b1 #b0) (concat (ite (|rvecc_decode#144| state) #b1 #b0) (concat (ite (|rvecc_decode#143| state) #b1 #b0) (concat (ite (|rvecc_decode#142| state) #b1 #b0) (concat (ite (|rvecc_decode#141| state) #b1 #b0) (concat (ite (|rvecc_decode#140| state) #b1 #b0) (ite (|rvecc_decode#139| state) #b1 #b0))))))))))))))))))))))))))))))))))))))) (concat (ite (|rvecc_decode#130| state) #b1 #b0) (concat (|rvecc_decode#64| state) (concat (|rvecc_decode#36| state) (concat (|rvecc_decode#85| state) (concat (|rvecc_decode#34| state) (concat (|rvecc_decode#61| state) (concat (|rvecc_decode#32| state) (concat (|rvecc_decode#122| state) (concat (|rvecc_decode#30| state) (concat (|rvecc_decode#58| state) (concat (|rvecc_decode#28| state) (concat (|rvecc_decode#80| state) (concat (|rvecc_decode#26| state) (concat (|rvecc_decode#55| state) (concat (|rvecc_decode#24| state) (concat (|rvecc_decode#97| state) (concat (|rvecc_decode#22| state) (concat (|rvecc_decode#52| state) (concat (|rvecc_decode#20| state) (concat (|rvecc_decode#75| state) (concat (|rvecc_decode#18| state) (concat (|rvecc_decode#49| state) (concat (|rvecc_decode#16| state) (concat (|rvecc_decode#106| state) (concat (|rvecc_decode#14| state) (concat (|rvecc_decode#46| state) (concat (|rvecc_decode#12| state) (concat (|rvecc_decode#70| state) (concat (|rvecc_decode#10| state) (concat (|rvecc_decode#43| state) (concat (|rvecc_decode#8| state) (concat (|rvecc_decode#89| state) (concat (|rvecc_decode#6| state) (concat (|rvecc_decode#40| state) (concat (|rvecc_decode#4| state) (concat (|rvecc_decode#66| state) (concat (|rvecc_decode#2| state) (concat (|rvecc_decode#38| state) (|rvecc_decode#1| state))))))))))))))))))))))))))))))))))))))))) ; $xor$rvecc_decode.sv:55$130_Y
(define-fun |rvecc_decode#179| ((state |rvecc_decode_s|)) (_ BitVec 39) (ite (= ((_ extract 0 0) (|rvecc_decode#138| state)) #b1) (|rvecc_decode#178| state) (concat (ite (|rvecc_decode#130| state) #b1 #b0) (concat (|rvecc_decode#64| state) (concat (|rvecc_decode#36| state) (concat (|rvecc_decode#85| state) (concat (|rvecc_decode#34| state) (concat (|rvecc_decode#61| state) (concat (|rvecc_decode#32| state) (concat (|rvecc_decode#122| state) (concat (|rvecc_decode#30| state) (concat (|rvecc_decode#58| state) (concat (|rvecc_decode#28| state) (concat (|rvecc_decode#80| state) (concat (|rvecc_decode#26| state) (concat (|rvecc_decode#55| state) (concat (|rvecc_decode#24| state) (concat (|rvecc_decode#97| state) (concat (|rvecc_decode#22| state) (concat (|rvecc_decode#52| state) (concat (|rvecc_decode#20| state) (concat (|rvecc_decode#75| state) (concat (|rvecc_decode#18| state) (concat (|rvecc_decode#49| state) (concat (|rvecc_decode#16| state) (concat (|rvecc_decode#106| state) (concat (|rvecc_decode#14| state) (concat (|rvecc_decode#46| state) (concat (|rvecc_decode#12| state) (concat (|rvecc_decode#70| state) (concat (|rvecc_decode#10| state) (concat (|rvecc_decode#43| state) (concat (|rvecc_decode#8| state) (concat (|rvecc_decode#89| state) (concat (|rvecc_decode#6| state) (concat (|rvecc_decode#40| state) (concat (|rvecc_decode#4| state) (concat (|rvecc_decode#66| state) (concat (|rvecc_decode#2| state) (concat (|rvecc_decode#38| state) (|rvecc_decode#1| state))))))))))))))))))))))))))))))))))))))))) ; \dout_plus_parity
(define-fun |rvecc_decode#180| ((state |rvecc_decode_s|)) Bool (= (concat (|rvecc_decode#135| state) (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state))))))) #b1000000)) ; $eq$rvecc_decode.sv:57$132_Y
(define-fun |rvecc_decode#181| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvxor ((_ extract 38 38) (|rvecc_decode#179| state)) (ite (|rvecc_decode#180| state) #b1 #b0))) ; \ecc_out [6]
; yosys-smt2-output ecc_out 7
; yosys-smt2-wire ecc_out 7
(define-fun |rvecc_decode_n ecc_out| ((state |rvecc_decode_s|)) (_ BitVec 7) (concat (|rvecc_decode#181| state) (concat ((_ extract 31 31) (|rvecc_decode#179| state)) (concat ((_ extract 15 15) (|rvecc_decode#179| state)) (concat ((_ extract 7 7) (|rvecc_decode#179| state)) (concat ((_ extract 3 3) (|rvecc_decode#179| state)) ((_ extract 1 0) (|rvecc_decode#179| state))))))))
; yosys-smt2-input ecc_in 7
; yosys-smt2-wire ecc_in 7
; yosys-smt2-witness {"offset": 0, "path": ["\\ecc_in"], "smtname": "ecc_in", "smtoffset": 0, "type": "input", "width": 7}
(define-fun |rvecc_decode_n ecc_in| ((state |rvecc_decode_s|)) (_ BitVec 7) (concat (ite (|rvecc_decode#130| state) #b1 #b0) (concat (|rvecc_decode#122| state) (concat (|rvecc_decode#106| state) (concat (|rvecc_decode#89| state) (concat (|rvecc_decode#66| state) (concat (|rvecc_decode#38| state) (|rvecc_decode#1| state))))))))
; yosys-smt2-wire ecc_check 7
(define-fun |rvecc_decode_n ecc_check| ((state |rvecc_decode_s|)) (_ BitVec 7) (concat (|rvecc_decode#135| state) (concat (|rvecc_decode#128| state) (concat (|rvecc_decode#121| state) (concat (|rvecc_decode#105| state) (concat (|rvecc_decode#88| state) (concat (|rvecc_decode#65| state) (|rvecc_decode#37| state))))))))
; yosys-smt2-wire dout_plus_parity 39
(define-fun |rvecc_decode_n dout_plus_parity| ((state |rvecc_decode_s|)) (_ BitVec 39) (|rvecc_decode#179| state))
; yosys-smt2-output dout 32
; yosys-smt2-wire dout 32
(define-fun |rvecc_decode_n dout| ((state |rvecc_decode_s|)) (_ BitVec 32) (concat ((_ extract 37 32) (|rvecc_decode#179| state)) (concat ((_ extract 30 16) (|rvecc_decode#179| state)) (concat ((_ extract 14 8) (|rvecc_decode#179| state)) (concat ((_ extract 6 4) (|rvecc_decode#179| state)) ((_ extract 2 2) (|rvecc_decode#179| state)))))))
(define-fun |rvecc_decode#182| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvnot (|rvecc_decode#135| state))) ; $not$rvecc_decode.sv:45$128_Y
(define-fun |rvecc_decode#183| ((state |rvecc_decode_s|)) (_ BitVec 1) (bvand (|rvecc_decode#137| state) (|rvecc_decode#182| state))) ; \double_ecc_error
; yosys-smt2-output double_ecc_error 1
; yosys-smt2-wire double_ecc_error 1
(define-fun |rvecc_decode_n double_ecc_error| ((state |rvecc_decode_s|)) Bool (= ((_ extract 0 0) (|rvecc_decode#183| state)) #b1))
; yosys-smt2-wire din_plus_parity 39
(define-fun |rvecc_decode_n din_plus_parity| ((state |rvecc_decode_s|)) (_ BitVec 39) (concat (ite (|rvecc_decode#130| state) #b1 #b0) (concat (|rvecc_decode#64| state) (concat (|rvecc_decode#36| state) (concat (|rvecc_decode#85| state) (concat (|rvecc_decode#34| state) (concat (|rvecc_decode#61| state) (concat (|rvecc_decode#32| state) (concat (|rvecc_decode#122| state) (concat (|rvecc_decode#30| state) (concat (|rvecc_decode#58| state) (concat (|rvecc_decode#28| state) (concat (|rvecc_decode#80| state) (concat (|rvecc_decode#26| state) (concat (|rvecc_decode#55| state) (concat (|rvecc_decode#24| state) (concat (|rvecc_decode#97| state) (concat (|rvecc_decode#22| state) (concat (|rvecc_decode#52| state) (concat (|rvecc_decode#20| state) (concat (|rvecc_decode#75| state) (concat (|rvecc_decode#18| state) (concat (|rvecc_decode#49| state) (concat (|rvecc_decode#16| state) (concat (|rvecc_decode#106| state) (concat (|rvecc_decode#14| state) (concat (|rvecc_decode#46| state) (concat (|rvecc_decode#12| state) (concat (|rvecc_decode#70| state) (concat (|rvecc_decode#10| state) (concat (|rvecc_decode#43| state) (concat (|rvecc_decode#8| state) (concat (|rvecc_decode#89| state) (concat (|rvecc_decode#6| state) (concat (|rvecc_decode#40| state) (concat (|rvecc_decode#4| state) (concat (|rvecc_decode#66| state) (concat (|rvecc_decode#2| state) (concat (|rvecc_decode#38| state) (|rvecc_decode#1| state))))))))))))))))))))))))))))))))))))))))
; yosys-smt2-input din 32
; yosys-smt2-wire din 32
; yosys-smt2-witness {"offset": 0, "path": ["\\din"], "smtname": "din", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |rvecc_decode_n din| ((state |rvecc_decode_s|)) (_ BitVec 32) (concat (|rvecc_decode#64| state) (concat (|rvecc_decode#36| state) (concat (|rvecc_decode#85| state) (concat (|rvecc_decode#34| state) (concat (|rvecc_decode#61| state) (concat (|rvecc_decode#32| state) (concat (|rvecc_decode#30| state) (concat (|rvecc_decode#58| state) (concat (|rvecc_decode#28| state) (concat (|rvecc_decode#80| state) (concat (|rvecc_decode#26| state) (concat (|rvecc_decode#55| state) (concat (|rvecc_decode#24| state) (concat (|rvecc_decode#97| state) (concat (|rvecc_decode#22| state) (concat (|rvecc_decode#52| state) (concat (|rvecc_decode#20| state) (concat (|rvecc_decode#75| state) (concat (|rvecc_decode#18| state) (concat (|rvecc_decode#49| state) (concat (|rvecc_decode#16| state) (concat (|rvecc_decode#14| state) (concat (|rvecc_decode#46| state) (concat (|rvecc_decode#12| state) (concat (|rvecc_decode#70| state) (concat (|rvecc_decode#10| state) (concat (|rvecc_decode#43| state) (concat (|rvecc_decode#8| state) (concat (|rvecc_decode#6| state) (concat (|rvecc_decode#40| state) (concat (|rvecc_decode#4| state) (|rvecc_decode#2| state)))))))))))))))))))))))))))))))))
(define-fun |rvecc_decode_a| ((state |rvecc_decode_s|)) Bool true)
(define-fun |rvecc_decode_u| ((state |rvecc_decode_s|)) Bool true)
(define-fun |rvecc_decode_i| ((state |rvecc_decode_s|)) Bool true)
(define-fun |rvecc_decode_h| ((state |rvecc_decode_s|)) Bool true)
(define-fun |rvecc_decode_t| ((state |rvecc_decode_s|) (next_state |rvecc_decode_s|)) Bool true) ; end of module rvecc_decode
; yosys-smt2-module rvecc_encode
(declare-sort |rvecc_encode_s| 0)
(declare-fun |rvecc_encode_is| (|rvecc_encode_s|) Bool)
(declare-fun |rvecc_encode#0| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [0]
(declare-fun |rvecc_encode#1| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [1]
(define-fun |rvecc_encode#2| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#0| state) (|rvecc_encode#1| state))) ; $xor$rvecc_encode.sv:23$211_Y
(declare-fun |rvecc_encode#3| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [3]
(define-fun |rvecc_encode#4| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#2| state) (|rvecc_encode#3| state))) ; $xor$rvecc_encode.sv:23$212_Y
(declare-fun |rvecc_encode#5| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [4]
(define-fun |rvecc_encode#6| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#4| state) (|rvecc_encode#5| state))) ; $xor$rvecc_encode.sv:23$213_Y
(declare-fun |rvecc_encode#7| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [6]
(define-fun |rvecc_encode#8| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#6| state) (|rvecc_encode#7| state))) ; $xor$rvecc_encode.sv:23$214_Y
(declare-fun |rvecc_encode#9| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [8]
(define-fun |rvecc_encode#10| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#8| state) (|rvecc_encode#9| state))) ; $xor$rvecc_encode.sv:23$215_Y
(declare-fun |rvecc_encode#11| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [10]
(define-fun |rvecc_encode#12| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#10| state) (|rvecc_encode#11| state))) ; $xor$rvecc_encode.sv:23$216_Y
(declare-fun |rvecc_encode#13| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [11]
(define-fun |rvecc_encode#14| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#12| state) (|rvecc_encode#13| state))) ; $xor$rvecc_encode.sv:23$217_Y
(declare-fun |rvecc_encode#15| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [13]
(define-fun |rvecc_encode#16| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#14| state) (|rvecc_encode#15| state))) ; $xor$rvecc_encode.sv:23$218_Y
(declare-fun |rvecc_encode#17| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [15]
(define-fun |rvecc_encode#18| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#16| state) (|rvecc_encode#17| state))) ; $xor$rvecc_encode.sv:23$219_Y
(declare-fun |rvecc_encode#19| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [17]
(define-fun |rvecc_encode#20| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#18| state) (|rvecc_encode#19| state))) ; $xor$rvecc_encode.sv:23$220_Y
(declare-fun |rvecc_encode#21| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [19]
(define-fun |rvecc_encode#22| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#20| state) (|rvecc_encode#21| state))) ; $xor$rvecc_encode.sv:23$221_Y
(declare-fun |rvecc_encode#23| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [21]
(define-fun |rvecc_encode#24| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#22| state) (|rvecc_encode#23| state))) ; $xor$rvecc_encode.sv:23$222_Y
(declare-fun |rvecc_encode#25| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [23]
(define-fun |rvecc_encode#26| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#24| state) (|rvecc_encode#25| state))) ; $xor$rvecc_encode.sv:23$223_Y
(declare-fun |rvecc_encode#27| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [25]
(define-fun |rvecc_encode#28| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#26| state) (|rvecc_encode#27| state))) ; $xor$rvecc_encode.sv:23$224_Y
(declare-fun |rvecc_encode#29| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [26]
(define-fun |rvecc_encode#30| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#28| state) (|rvecc_encode#29| state))) ; $xor$rvecc_encode.sv:23$225_Y
(declare-fun |rvecc_encode#31| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [28]
(define-fun |rvecc_encode#32| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#30| state) (|rvecc_encode#31| state))) ; $xor$rvecc_encode.sv:23$226_Y
(declare-fun |rvecc_encode#33| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [30]
(define-fun |rvecc_encode#34| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#32| state) (|rvecc_encode#33| state))) ; \ecc_out_temp [0]
(declare-fun |rvecc_encode#35| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [2]
(define-fun |rvecc_encode#36| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#0| state) (|rvecc_encode#35| state))) ; $xor$rvecc_encode.sv:24$228_Y
(define-fun |rvecc_encode#37| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#36| state) (|rvecc_encode#3| state))) ; $xor$rvecc_encode.sv:24$229_Y
(declare-fun |rvecc_encode#38| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [5]
(define-fun |rvecc_encode#39| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#37| state) (|rvecc_encode#38| state))) ; $xor$rvecc_encode.sv:24$230_Y
(define-fun |rvecc_encode#40| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#39| state) (|rvecc_encode#7| state))) ; $xor$rvecc_encode.sv:24$231_Y
(declare-fun |rvecc_encode#41| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [9]
(define-fun |rvecc_encode#42| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#40| state) (|rvecc_encode#41| state))) ; $xor$rvecc_encode.sv:24$232_Y
(define-fun |rvecc_encode#43| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#42| state) (|rvecc_encode#11| state))) ; $xor$rvecc_encode.sv:24$233_Y
(declare-fun |rvecc_encode#44| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [12]
(define-fun |rvecc_encode#45| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#43| state) (|rvecc_encode#44| state))) ; $xor$rvecc_encode.sv:24$234_Y
(define-fun |rvecc_encode#46| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#45| state) (|rvecc_encode#15| state))) ; $xor$rvecc_encode.sv:24$235_Y
(declare-fun |rvecc_encode#47| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [16]
(define-fun |rvecc_encode#48| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#46| state) (|rvecc_encode#47| state))) ; $xor$rvecc_encode.sv:24$236_Y
(define-fun |rvecc_encode#49| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#48| state) (|rvecc_encode#19| state))) ; $xor$rvecc_encode.sv:24$237_Y
(declare-fun |rvecc_encode#50| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [20]
(define-fun |rvecc_encode#51| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#49| state) (|rvecc_encode#50| state))) ; $xor$rvecc_encode.sv:24$238_Y
(define-fun |rvecc_encode#52| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#51| state) (|rvecc_encode#23| state))) ; $xor$rvecc_encode.sv:24$239_Y
(declare-fun |rvecc_encode#53| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [24]
(define-fun |rvecc_encode#54| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#52| state) (|rvecc_encode#53| state))) ; $xor$rvecc_encode.sv:24$240_Y
(define-fun |rvecc_encode#55| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#54| state) (|rvecc_encode#27| state))) ; $xor$rvecc_encode.sv:24$241_Y
(declare-fun |rvecc_encode#56| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [27]
(define-fun |rvecc_encode#57| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#55| state) (|rvecc_encode#56| state))) ; $xor$rvecc_encode.sv:24$242_Y
(define-fun |rvecc_encode#58| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#57| state) (|rvecc_encode#31| state))) ; $xor$rvecc_encode.sv:24$243_Y
(declare-fun |rvecc_encode#59| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [31]
(define-fun |rvecc_encode#60| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#58| state) (|rvecc_encode#59| state))) ; \ecc_out_temp [1]
(define-fun |rvecc_encode#61| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#1| state) (|rvecc_encode#35| state))) ; $xor$rvecc_encode.sv:25$245_Y
(define-fun |rvecc_encode#62| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#61| state) (|rvecc_encode#3| state))) ; $xor$rvecc_encode.sv:25$246_Y
(declare-fun |rvecc_encode#63| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [7]
(define-fun |rvecc_encode#64| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#62| state) (|rvecc_encode#63| state))) ; $xor$rvecc_encode.sv:25$247_Y
(define-fun |rvecc_encode#65| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#64| state) (|rvecc_encode#9| state))) ; $xor$rvecc_encode.sv:25$248_Y
(define-fun |rvecc_encode#66| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#65| state) (|rvecc_encode#41| state))) ; $xor$rvecc_encode.sv:25$249_Y
(define-fun |rvecc_encode#67| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#66| state) (|rvecc_encode#11| state))) ; $xor$rvecc_encode.sv:25$250_Y
(declare-fun |rvecc_encode#68| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [14]
(define-fun |rvecc_encode#69| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#67| state) (|rvecc_encode#68| state))) ; $xor$rvecc_encode.sv:25$251_Y
(define-fun |rvecc_encode#70| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#69| state) (|rvecc_encode#17| state))) ; $xor$rvecc_encode.sv:25$252_Y
(define-fun |rvecc_encode#71| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#70| state) (|rvecc_encode#47| state))) ; $xor$rvecc_encode.sv:25$253_Y
(define-fun |rvecc_encode#72| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#71| state) (|rvecc_encode#19| state))) ; $xor$rvecc_encode.sv:25$254_Y
(declare-fun |rvecc_encode#73| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [22]
(define-fun |rvecc_encode#74| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#72| state) (|rvecc_encode#73| state))) ; $xor$rvecc_encode.sv:25$255_Y
(define-fun |rvecc_encode#75| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#74| state) (|rvecc_encode#25| state))) ; $xor$rvecc_encode.sv:25$256_Y
(define-fun |rvecc_encode#76| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#75| state) (|rvecc_encode#53| state))) ; $xor$rvecc_encode.sv:25$257_Y
(define-fun |rvecc_encode#77| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#76| state) (|rvecc_encode#27| state))) ; $xor$rvecc_encode.sv:25$258_Y
(declare-fun |rvecc_encode#78| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [29]
(define-fun |rvecc_encode#79| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#77| state) (|rvecc_encode#78| state))) ; $xor$rvecc_encode.sv:25$259_Y
(define-fun |rvecc_encode#80| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#79| state) (|rvecc_encode#33| state))) ; $xor$rvecc_encode.sv:25$260_Y
(define-fun |rvecc_encode#81| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#80| state) (|rvecc_encode#59| state))) ; \ecc_out_temp [2]
(define-fun |rvecc_encode#82| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#5| state) (|rvecc_encode#38| state))) ; $xor$rvecc_encode.sv:26$262_Y
(define-fun |rvecc_encode#83| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#82| state) (|rvecc_encode#7| state))) ; $xor$rvecc_encode.sv:26$263_Y
(define-fun |rvecc_encode#84| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#83| state) (|rvecc_encode#63| state))) ; $xor$rvecc_encode.sv:26$264_Y
(define-fun |rvecc_encode#85| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#84| state) (|rvecc_encode#9| state))) ; $xor$rvecc_encode.sv:26$265_Y
(define-fun |rvecc_encode#86| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#85| state) (|rvecc_encode#41| state))) ; $xor$rvecc_encode.sv:26$266_Y
(define-fun |rvecc_encode#87| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#86| state) (|rvecc_encode#11| state))) ; $xor$rvecc_encode.sv:26$267_Y
(declare-fun |rvecc_encode#88| (|rvecc_encode_s|) (_ BitVec 1)) ; \din [18]
(define-fun |rvecc_encode#89| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#87| state) (|rvecc_encode#88| state))) ; $xor$rvecc_encode.sv:26$268_Y
(define-fun |rvecc_encode#90| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#89| state) (|rvecc_encode#21| state))) ; $xor$rvecc_encode.sv:26$269_Y
(define-fun |rvecc_encode#91| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#90| state) (|rvecc_encode#50| state))) ; $xor$rvecc_encode.sv:26$270_Y
(define-fun |rvecc_encode#92| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#91| state) (|rvecc_encode#23| state))) ; $xor$rvecc_encode.sv:26$271_Y
(define-fun |rvecc_encode#93| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#92| state) (|rvecc_encode#73| state))) ; $xor$rvecc_encode.sv:26$272_Y
(define-fun |rvecc_encode#94| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#93| state) (|rvecc_encode#25| state))) ; $xor$rvecc_encode.sv:26$273_Y
(define-fun |rvecc_encode#95| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#94| state) (|rvecc_encode#53| state))) ; $xor$rvecc_encode.sv:26$274_Y
(define-fun |rvecc_encode#96| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#95| state) (|rvecc_encode#27| state))) ; \ecc_out_temp [3]
(define-fun |rvecc_encode#97| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#13| state) (|rvecc_encode#44| state))) ; $xor$rvecc_encode.sv:27$276_Y
(define-fun |rvecc_encode#98| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#97| state) (|rvecc_encode#15| state))) ; $xor$rvecc_encode.sv:27$277_Y
(define-fun |rvecc_encode#99| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#98| state) (|rvecc_encode#68| state))) ; $xor$rvecc_encode.sv:27$278_Y
(define-fun |rvecc_encode#100| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#99| state) (|rvecc_encode#17| state))) ; $xor$rvecc_encode.sv:27$279_Y
(define-fun |rvecc_encode#101| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#100| state) (|rvecc_encode#47| state))) ; $xor$rvecc_encode.sv:27$280_Y
(define-fun |rvecc_encode#102| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#101| state) (|rvecc_encode#19| state))) ; $xor$rvecc_encode.sv:27$281_Y
(define-fun |rvecc_encode#103| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#102| state) (|rvecc_encode#88| state))) ; $xor$rvecc_encode.sv:27$282_Y
(define-fun |rvecc_encode#104| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#103| state) (|rvecc_encode#21| state))) ; $xor$rvecc_encode.sv:27$283_Y
(define-fun |rvecc_encode#105| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#104| state) (|rvecc_encode#50| state))) ; $xor$rvecc_encode.sv:27$284_Y
(define-fun |rvecc_encode#106| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#105| state) (|rvecc_encode#23| state))) ; $xor$rvecc_encode.sv:27$285_Y
(define-fun |rvecc_encode#107| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#106| state) (|rvecc_encode#73| state))) ; $xor$rvecc_encode.sv:27$286_Y
(define-fun |rvecc_encode#108| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#107| state) (|rvecc_encode#25| state))) ; $xor$rvecc_encode.sv:27$287_Y
(define-fun |rvecc_encode#109| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#108| state) (|rvecc_encode#53| state))) ; $xor$rvecc_encode.sv:27$288_Y
(define-fun |rvecc_encode#110| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#109| state) (|rvecc_encode#27| state))) ; \ecc_out_temp [4]
(define-fun |rvecc_encode#111| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#29| state) (|rvecc_encode#56| state))) ; $xor$rvecc_encode.sv:28$290_Y
(define-fun |rvecc_encode#112| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#111| state) (|rvecc_encode#31| state))) ; $xor$rvecc_encode.sv:28$291_Y
(define-fun |rvecc_encode#113| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#112| state) (|rvecc_encode#78| state))) ; $xor$rvecc_encode.sv:28$292_Y
(define-fun |rvecc_encode#114| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#113| state) (|rvecc_encode#33| state))) ; $xor$rvecc_encode.sv:28$293_Y
(define-fun |rvecc_encode#115| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (|rvecc_encode#114| state) (|rvecc_encode#59| state))) ; \ecc_out_temp [5]
; yosys-smt2-wire ecc_out_temp 6
(define-fun |rvecc_encode_n ecc_out_temp| ((state |rvecc_encode_s|)) (_ BitVec 6) (concat (|rvecc_encode#115| state) (concat (|rvecc_encode#110| state) (concat (|rvecc_encode#96| state) (concat (|rvecc_encode#81| state) (concat (|rvecc_encode#60| state) (|rvecc_encode#34| state)))))))
(define-fun |rvecc_encode#116| ((state |rvecc_encode_s|)) Bool (xor  (= ((_ extract 0 0) (|rvecc_encode#0| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#1| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#35| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#3| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#5| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#38| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#7| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#63| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#9| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#41| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#11| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#13| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#44| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#15| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#68| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#17| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#47| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#19| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#88| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#21| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#50| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#23| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#73| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#25| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#53| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#27| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#29| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#56| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#31| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#78| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#33| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#59| state)) #b1))) ; $reduce_xor$rvecc_encode.sv:30$295_Y
(define-fun |rvecc_encode#117| ((state |rvecc_encode_s|)) Bool (xor  (= ((_ extract 0 0) (|rvecc_encode#34| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#60| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#81| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#96| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#110| state)) #b1) (= ((_ extract 0 0) (|rvecc_encode#115| state)) #b1))) ; $reduce_xor$rvecc_encode.sv:30$296_Y
(define-fun |rvecc_encode#118| ((state |rvecc_encode_s|)) (_ BitVec 1) (bvxor (ite (|rvecc_encode#116| state) #b1 #b0) (ite (|rvecc_encode#117| state) #b1 #b0))) ; \ecc_out [6]
; yosys-smt2-output ecc_out 7
; yosys-smt2-wire ecc_out 7
(define-fun |rvecc_encode_n ecc_out| ((state |rvecc_encode_s|)) (_ BitVec 7) (concat (|rvecc_encode#118| state) (concat (|rvecc_encode#115| state) (concat (|rvecc_encode#110| state) (concat (|rvecc_encode#96| state) (concat (|rvecc_encode#81| state) (concat (|rvecc_encode#60| state) (|rvecc_encode#34| state))))))))
; yosys-smt2-input din 32
; yosys-smt2-wire din 32
; yosys-smt2-witness {"offset": 0, "path": ["\\din"], "smtname": "din", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |rvecc_encode_n din| ((state |rvecc_encode_s|)) (_ BitVec 32) (concat (|rvecc_encode#59| state) (concat (|rvecc_encode#33| state) (concat (|rvecc_encode#78| state) (concat (|rvecc_encode#31| state) (concat (|rvecc_encode#56| state) (concat (|rvecc_encode#29| state) (concat (|rvecc_encode#27| state) (concat (|rvecc_encode#53| state) (concat (|rvecc_encode#25| state) (concat (|rvecc_encode#73| state) (concat (|rvecc_encode#23| state) (concat (|rvecc_encode#50| state) (concat (|rvecc_encode#21| state) (concat (|rvecc_encode#88| state) (concat (|rvecc_encode#19| state) (concat (|rvecc_encode#47| state) (concat (|rvecc_encode#17| state) (concat (|rvecc_encode#68| state) (concat (|rvecc_encode#15| state) (concat (|rvecc_encode#44| state) (concat (|rvecc_encode#13| state) (concat (|rvecc_encode#11| state) (concat (|rvecc_encode#41| state) (concat (|rvecc_encode#9| state) (concat (|rvecc_encode#63| state) (concat (|rvecc_encode#7| state) (concat (|rvecc_encode#38| state) (concat (|rvecc_encode#5| state) (concat (|rvecc_encode#3| state) (concat (|rvecc_encode#35| state) (concat (|rvecc_encode#1| state) (|rvecc_encode#0| state)))))))))))))))))))))))))))))))))
(define-fun |rvecc_encode_a| ((state |rvecc_encode_s|)) Bool true)
(define-fun |rvecc_encode_u| ((state |rvecc_encode_s|)) Bool true)
(define-fun |rvecc_encode_i| ((state |rvecc_encode_s|)) Bool true)
(define-fun |rvecc_encode_h| ((state |rvecc_encode_s|)) Bool true)
(define-fun |rvecc_encode_t| ((state |rvecc_encode_s|) (next_state |rvecc_encode_s|)) Bool true) ; end of module rvecc_encode
; yosys-smt2-module top
(declare-sort |top_s| 0)
(declare-fun |top_is| (|top_s|) Bool)
; yosys-smt2-cell rvecc_decode decoder
; yosys-smt2-witness {"path": ["\\decoder"], "smtname": "decoder", "type": "cell"}
(declare-fun |top#0| (|top_s|) Bool) ; \single_ecc_error
(declare-fun |top#1| (|top_s|) (_ BitVec 7)) ; \ecc_out_decoder
(declare-fun |top#2| (|top_s|) (_ BitVec 32)) ; \dout_decoder
(declare-fun |top#3| (|top_s|) Bool) ; \double_ecc_error
(declare-fun |top_h decoder| (|top_s|) |rvecc_decode_s|)
; yosys-smt2-wire single_ecc_error 1
(define-fun |top_n single_ecc_error| ((state |top_s|)) Bool (|top#0| state))
; yosys-smt2-anyseq top#4 1 $auto$setundef.cc:348:execute$404
; yosys-smt2-witness {"offset": 0, "path": ["\\sed_ded"], "smtname": 4, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#4| (|top_s|) (_ BitVec 1)) ; \sed_ded
; yosys-smt2-wire sed_ded 1
(define-fun |top_n sed_ded| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#4| state)) #b1))
; yosys-smt2-cell $paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111 channel
; yosys-smt2-witness {"path": ["\\channel"], "smtname": "channel", "type": "cell"}
(declare-fun |top#5| (|top_s|) (_ BitVec 39)) ; \received_data
(declare-fun |top_h channel| (|top_s|) |$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_s|)
; yosys-smt2-wire received_data 39
(define-fun |top_n received_data| ((state |top_s|)) (_ BitVec 39) (|top#5| state))
; yosys-smt2-anyseq top#6 1 $auto$setundef.cc:348:execute$416
; yosys-smt2-witness {"offset": 0, "path": ["\\error_pos2"], "smtname": 6, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#6| (|top_s|) (_ BitVec 1)) ; \error_pos2 [0]
; yosys-smt2-anyseq top#7 1 $auto$setundef.cc:348:execute$414
; yosys-smt2-witness {"offset": 1, "path": ["\\error_pos2"], "smtname": 7, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#7| (|top_s|) (_ BitVec 1)) ; \error_pos2 [1]
; yosys-smt2-anyseq top#8 1 $auto$setundef.cc:348:execute$412
; yosys-smt2-witness {"offset": 2, "path": ["\\error_pos2"], "smtname": 8, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#8| (|top_s|) (_ BitVec 1)) ; \error_pos2 [2]
; yosys-smt2-anyseq top#9 1 $auto$setundef.cc:348:execute$410
; yosys-smt2-witness {"offset": 3, "path": ["\\error_pos2"], "smtname": 9, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#9| (|top_s|) (_ BitVec 1)) ; \error_pos2 [3]
; yosys-smt2-anyseq top#10 1 $auto$setundef.cc:348:execute$408
; yosys-smt2-witness {"offset": 4, "path": ["\\error_pos2"], "smtname": 10, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#10| (|top_s|) (_ BitVec 1)) ; \error_pos2 [4]
; yosys-smt2-anyseq top#11 1 $auto$setundef.cc:348:execute$406
; yosys-smt2-witness {"offset": 5, "path": ["\\error_pos2"], "smtname": 11, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#11| (|top_s|) (_ BitVec 1)) ; \error_pos2 [5]
; yosys-smt2-wire error_pos2 6
(define-fun |top_n error_pos2| ((state |top_s|)) (_ BitVec 6) (concat (|top#11| state) (concat (|top#10| state) (concat (|top#9| state) (concat (|top#8| state) (concat (|top#7| state) (|top#6| state)))))))
; yosys-smt2-anyseq top#12 1 $auto$setundef.cc:348:execute$428
; yosys-smt2-witness {"offset": 0, "path": ["\\error_pos1"], "smtname": 12, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#12| (|top_s|) (_ BitVec 1)) ; \error_pos1 [0]
; yosys-smt2-anyseq top#13 1 $auto$setundef.cc:348:execute$426
; yosys-smt2-witness {"offset": 1, "path": ["\\error_pos1"], "smtname": 13, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#13| (|top_s|) (_ BitVec 1)) ; \error_pos1 [1]
; yosys-smt2-anyseq top#14 1 $auto$setundef.cc:348:execute$424
; yosys-smt2-witness {"offset": 2, "path": ["\\error_pos1"], "smtname": 14, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#14| (|top_s|) (_ BitVec 1)) ; \error_pos1 [2]
; yosys-smt2-anyseq top#15 1 $auto$setundef.cc:348:execute$422
; yosys-smt2-witness {"offset": 3, "path": ["\\error_pos1"], "smtname": 15, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#15| (|top_s|) (_ BitVec 1)) ; \error_pos1 [3]
; yosys-smt2-anyseq top#16 1 $auto$setundef.cc:348:execute$420
; yosys-smt2-witness {"offset": 4, "path": ["\\error_pos1"], "smtname": 16, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#16| (|top_s|) (_ BitVec 1)) ; \error_pos1 [4]
; yosys-smt2-anyseq top#17 1 $auto$setundef.cc:348:execute$418
; yosys-smt2-witness {"offset": 5, "path": ["\\error_pos1"], "smtname": 17, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#17| (|top_s|) (_ BitVec 1)) ; \error_pos1 [5]
; yosys-smt2-wire error_pos1 6
(define-fun |top_n error_pos1| ((state |top_s|)) (_ BitVec 6) (concat (|top#17| state) (concat (|top#16| state) (concat (|top#15| state) (concat (|top#14| state) (concat (|top#13| state) (|top#12| state)))))))
; yosys-smt2-anyseq top#18 1 $auto$setundef.cc:348:execute$444
; yosys-smt2-witness {"offset": 0, "path": ["\\din_encoder"], "smtname": 18, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#18| (|top_s|) (_ BitVec 1)) ; \din_encoder [0]
; yosys-smt2-anyseq top#19 1 $auto$setundef.cc:348:execute$442
; yosys-smt2-witness {"offset": 1, "path": ["\\din_encoder"], "smtname": 19, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#19| (|top_s|) (_ BitVec 1)) ; \din_encoder [1]
; yosys-smt2-anyseq top#20 1 $auto$setundef.cc:348:execute$440
; yosys-smt2-witness {"offset": 2, "path": ["\\din_encoder"], "smtname": 20, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#20| (|top_s|) (_ BitVec 1)) ; \din_encoder [2]
; yosys-smt2-anyseq top#21 1 $auto$setundef.cc:348:execute$438
; yosys-smt2-witness {"offset": 3, "path": ["\\din_encoder"], "smtname": 21, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#21| (|top_s|) (_ BitVec 1)) ; \din_encoder [3]
; yosys-smt2-anyseq top#22 1 $auto$setundef.cc:348:execute$436
; yosys-smt2-witness {"offset": 4, "path": ["\\din_encoder"], "smtname": 22, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#22| (|top_s|) (_ BitVec 1)) ; \din_encoder [4]
; yosys-smt2-anyseq top#23 1 $auto$setundef.cc:348:execute$434
; yosys-smt2-witness {"offset": 5, "path": ["\\din_encoder"], "smtname": 23, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#23| (|top_s|) (_ BitVec 1)) ; \din_encoder [5]
; yosys-smt2-anyseq top#24 1 $auto$setundef.cc:348:execute$432
; yosys-smt2-witness {"offset": 6, "path": ["\\din_encoder"], "smtname": 24, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#24| (|top_s|) (_ BitVec 1)) ; \din_encoder [6]
; yosys-smt2-anyseq top#25 1 $auto$setundef.cc:348:execute$430
; yosys-smt2-witness {"offset": 7, "path": ["\\din_encoder"], "smtname": 25, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#25| (|top_s|) (_ BitVec 1)) ; \din_encoder [7]
; yosys-smt2-anyseq top#26 24 $auto$setundef.cc:348:execute$446
; yosys-smt2-witness {"offset": 8, "path": ["\\din_encoder"], "smtname": 26, "smtoffset": 0, "type": "seq", "width": 24}
(declare-fun |top#26| (|top_s|) (_ BitVec 24)) ; \din_encoder [31:8]
; yosys-smt2-cell rvecc_encode encoder
; yosys-smt2-witness {"path": ["\\encoder"], "smtname": "encoder", "type": "cell"}
(declare-fun |top#27| (|top_s|) (_ BitVec 7)) ; \ecc_out_encoder
(declare-fun |top_h encoder| (|top_s|) |rvecc_encode_s|)
; yosys-smt2-wire encoded_data 39
(define-fun |top_n encoded_data| ((state |top_s|)) (_ BitVec 39) (concat (|top#27| state) (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state)))))))))))
; yosys-smt2-wire ecc_out_encoder 7
(define-fun |top_n ecc_out_encoder| ((state |top_s|)) (_ BitVec 7) (|top#27| state))
; yosys-smt2-wire ecc_out_decoder 7
(define-fun |top_n ecc_out_decoder| ((state |top_s|)) (_ BitVec 7) (|top#1| state))
; yosys-smt2-wire ecc_in_decoder 7
(define-fun |top_n ecc_in_decoder| ((state |top_s|)) (_ BitVec 7) ((_ extract 38 32) (|top#5| state)))
; yosys-smt2-wire dout_decoder 32
(define-fun |top_n dout_decoder| ((state |top_s|)) (_ BitVec 32) (|top#2| state))
; yosys-smt2-wire double_ecc_error 1
(define-fun |top_n double_ecc_error| ((state |top_s|)) Bool (|top#3| state))
; yosys-smt2-wire din_encoder 32
(define-fun |top_n din_encoder| ((state |top_s|)) (_ BitVec 32) (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state))))))))))
; yosys-smt2-wire din_decoder 32
(define-fun |top_n din_decoder| ((state |top_s|)) (_ BitVec 32) ((_ extract 31 0) (|top#5| state)))
; yosys-smt2-anyseq top#28 1 $auto$setundef.cc:348:execute$402
; yosys-smt2-witness {"offset": 0, "path": ["\\decoder_en"], "smtname": 28, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |top#28| (|top_s|) (_ BitVec 1)) ; \decoder_en
; yosys-smt2-wire decoder_en 1
(define-fun |top_n decoder_en| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#28| state)) #b1))
; yosys-smt2-wire corrected_data 39
(define-fun |top_n corrected_data| ((state |top_s|)) (_ BitVec 39) (concat (|top#1| state) (|top#2| state)))
; yosys-smt2-wire COVER_SED_DED_ZERO_EN 1
(define-fun |top_n COVER_SED_DED_ZERO_EN| ((state |top_s|)) Bool true)
; yosys-smt2-wire COVER_SED_DED_ONE_EN 1
(define-fun |top_n COVER_SED_DED_ONE_EN| ((state |top_s|)) Bool true)
; yosys-smt2-wire COVER_NON_0_EN 1
(define-fun |top_n COVER_NON_0_EN| ((state |top_s|)) Bool true)
; yosys-smt2-wire COVER_ERROR_9_POS_EN 1
(define-fun |top_n COVER_ERROR_9_POS_EN| ((state |top_s|)) Bool true)
; yosys-smt2-wire COVER_ERROR_38_POS_EN 1
(define-fun |top_n COVER_ERROR_38_POS_EN| ((state |top_s|)) Bool true)
; yosys-smt2-wire COVER_ERROR_24_POS_EN 1
(define-fun |top_n COVER_ERROR_24_POS_EN| ((state |top_s|)) Bool true)
; yosys-smt2-wire COVER_ERROR_0_POS_EN 1
(define-fun |top_n COVER_ERROR_0_POS_EN| ((state |top_s|)) Bool true)
; yosys-smt2-wire COVER_ALL_0_EN 1
(define-fun |top_n COVER_ALL_0_EN| ((state |top_s|)) Bool true)
; yosys-smt2-wire ASSUME_VALID_ERROR_POS2_EN 1
(define-fun |top_n ASSUME_VALID_ERROR_POS2_EN| ((state |top_s|)) Bool true)
; yosys-smt2-wire ASSUME_VALID_ERROR_POS1_EN 1
(define-fun |top_n ASSUME_VALID_ERROR_POS1_EN| ((state |top_s|)) Bool true)
; yosys-smt2-wire ASSUME_DECODER_ENABLE_EN 1
(define-fun |top_n ASSUME_DECODER_ENABLE_EN| ((state |top_s|)) Bool true)
(define-fun |top#29| ((state |top_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|top#4| state)) #b1) #b0 #b1)) ; \ASSERT_DATA_RECOVERED_EN
; yosys-smt2-wire ASSERT_SINGLE_ECC_EN 1
(define-fun |top_n ASSERT_SINGLE_ECC_EN| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#29| state)) #b1))
(define-fun |top#30| ((state |top_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|top#4| state)) #b1) #b1 #b0)) ; \ASSERT_DATA_NOT_RECOVERED_EN
; yosys-smt2-wire ASSERT_NO_SINGLE_ECC_EN 1
(define-fun |top_n ASSERT_NO_SINGLE_ECC_EN| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#30| state)) #b1))
; yosys-smt2-wire ASSERT_NO_DOUBLE_ED_EN 1
(define-fun |top_n ASSERT_NO_DOUBLE_ED_EN| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#29| state)) #b1))
; yosys-smt2-wire ASSERT_ERROR_PRESENT_EN 1
(define-fun |top_n ASSERT_ERROR_PRESENT_EN| ((state |top_s|)) Bool true)
; yosys-smt2-wire ASSERT_DOUBLE_ED_EN 1
(define-fun |top_n ASSERT_DOUBLE_ED_EN| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#30| state)) #b1))
; yosys-smt2-wire ASSERT_DATA_RECOVERED_EN 1
(define-fun |top_n ASSERT_DATA_RECOVERED_EN| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#29| state)) #b1))
; yosys-smt2-wire ASSERT_DATA_NOT_RECOVERED_EN 1
(define-fun |top_n ASSERT_DATA_NOT_RECOVERED_EN| ((state |top_s|)) Bool (= ((_ extract 0 0) (|top#30| state)) #b1))
(define-fun |top#31| ((state |top_s|)) (_ BitVec 1) (bvnot (|top#4| state))) ; $eq$top.sv:46$26_Y
; yosys-smt2-cover 0 COVER_SED_DED_ZERO
(define-fun |top_c 0| ((state |top_s|)) Bool (and (= ((_ extract 0 0) (|top#31| state)) #b1) true)) ; COVER_SED_DED_ZERO
; yosys-smt2-cover 1 COVER_SED_DED_ONE
(define-fun |top_c 1| ((state |top_s|)) Bool (and (= ((_ extract 0 0) (|top#4| state)) #b1) true)) ; COVER_SED_DED_ONE
(define-fun |top#32| ((state |top_s|)) Bool (distinct (concat (|top#27| state) (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state)))))))))) #b000000000000000000000000000000000000000)) ; $ne$top.sv:37$21_Y
; yosys-smt2-cover 2 COVER_NON_0
(define-fun |top_c 2| ((state |top_s|)) Bool (and (|top#32| state) true)) ; COVER_NON_0
(define-fun |top#33| ((state |top_s|)) Bool (= (concat (|top#17| state) (concat (|top#16| state) (concat (|top#15| state) (concat (|top#14| state) (concat (|top#13| state) (|top#12| state)))))) #b001001)) ; $eq$top.sv:42$24_Y
; yosys-smt2-cover 3 COVER_ERROR_9_POS
(define-fun |top_c 3| ((state |top_s|)) Bool (and (|top#33| state) true)) ; COVER_ERROR_9_POS
(define-fun |top#34| ((state |top_s|)) Bool (= (concat (|top#17| state) (concat (|top#16| state) (concat (|top#15| state) (concat (|top#14| state) (concat (|top#13| state) (|top#12| state)))))) #b100110)) ; $eq$top.sv:41$23_Y
; yosys-smt2-cover 4 COVER_ERROR_38_POS
(define-fun |top_c 4| ((state |top_s|)) Bool (and (|top#34| state) true)) ; COVER_ERROR_38_POS
(define-fun |top#35| ((state |top_s|)) Bool (= (concat (|top#17| state) (concat (|top#16| state) (concat (|top#15| state) (concat (|top#14| state) (concat (|top#13| state) (|top#12| state)))))) #b011000)) ; $eq$top.sv:43$25_Y
; yosys-smt2-cover 5 COVER_ERROR_24_POS
(define-fun |top_c 5| ((state |top_s|)) Bool (and (|top#35| state) true)) ; COVER_ERROR_24_POS
(define-fun |top#36| ((state |top_s|)) Bool (not (or  (= ((_ extract 0 0) (|top#12| state)) #b1) (= ((_ extract 0 0) (|top#13| state)) #b1) (= ((_ extract 0 0) (|top#14| state)) #b1) (= ((_ extract 0 0) (|top#15| state)) #b1) (= ((_ extract 0 0) (|top#16| state)) #b1) (= ((_ extract 0 0) (|top#17| state)) #b1)))) ; $eq$top.sv:40$22_Y
; yosys-smt2-cover 6 COVER_ERROR_0_POS
(define-fun |top_c 6| ((state |top_s|)) Bool (and (|top#36| state) true)) ; COVER_ERROR_0_POS
(define-fun |top#37| ((state |top_s|)) Bool (not (or  (= ((_ extract 0 0) (|top#18| state)) #b1) (= ((_ extract 0 0) (|top#19| state)) #b1) (= ((_ extract 0 0) (|top#20| state)) #b1) (= ((_ extract 0 0) (|top#21| state)) #b1) (= ((_ extract 0 0) (|top#22| state)) #b1) (= ((_ extract 0 0) (|top#23| state)) #b1) (= ((_ extract 0 0) (|top#24| state)) #b1) (= ((_ extract 0 0) (|top#25| state)) #b1) (= ((_ extract 0 0) (|top#26| state)) #b1) (= ((_ extract 1 1) (|top#26| state)) #b1) (= ((_ extract 2 2) (|top#26| state)) #b1) (= ((_ extract 3 3) (|top#26| state)) #b1) (= ((_ extract 4 4) (|top#26| state)) #b1) (= ((_ extract 5 5) (|top#26| state)) #b1) (= ((_ extract 6 6) (|top#26| state)) #b1) (= ((_ extract 7 7) (|top#26| state)) #b1) (= ((_ extract 8 8) (|top#26| state)) #b1) (= ((_ extract 9 9) (|top#26| state)) #b1) (= ((_ extract 10 10) (|top#26| state)) #b1) (= ((_ extract 11 11) (|top#26| state)) #b1) (= ((_ extract 12 12) (|top#26| state)) #b1) (= ((_ extract 13 13) (|top#26| state)) #b1) (= ((_ extract 14 14) (|top#26| state)) #b1) (= ((_ extract 15 15) (|top#26| state)) #b1) (= ((_ extract 16 16) (|top#26| state)) #b1) (= ((_ extract 17 17) (|top#26| state)) #b1) (= ((_ extract 18 18) (|top#26| state)) #b1) (= ((_ extract 19 19) (|top#26| state)) #b1) (= ((_ extract 20 20) (|top#26| state)) #b1) (= ((_ extract 21 21) (|top#26| state)) #b1) (= ((_ extract 22 22) (|top#26| state)) #b1) (= ((_ extract 23 23) (|top#26| state)) #b1) (= ((_ extract 0 0) (|top#27| state)) #b1) (= ((_ extract 1 1) (|top#27| state)) #b1) (= ((_ extract 2 2) (|top#27| state)) #b1) (= ((_ extract 3 3) (|top#27| state)) #b1) (= ((_ extract 4 4) (|top#27| state)) #b1) (= ((_ extract 5 5) (|top#27| state)) #b1) (= ((_ extract 6 6) (|top#27| state)) #b1)))) ; $eq$top.sv:34$20_Y
; yosys-smt2-cover 7 COVER_ALL_0
(define-fun |top_c 7| ((state |top_s|)) Bool (and (|top#37| state) true)) ; COVER_ALL_0
(define-fun |top#38| ((state |top_s|)) Bool (bvule (concat (|top#11| state) (concat (|top#10| state) (concat (|top#9| state) (concat (|top#8| state) (concat (|top#7| state) (|top#6| state)))))) #b100110)) ; $le$top.sv:19$6_Y
(define-fun |top#39| ((state |top_s|)) Bool (bvuge (concat (|top#11| state) (concat (|top#10| state) (concat (|top#9| state) (concat (|top#8| state) (concat (|top#7| state) (|top#6| state)))))) #b000000)) ; $ge$top.sv:19$7_Y
(define-fun |top#40| ((state |top_s|)) Bool (and (or  (|top#38| state) false) (or  (|top#39| state) false))) ; $logic_and$top.sv:19$8_Y
(define-fun |top#41| ((state |top_s|)) Bool (distinct (concat (|top#17| state) (concat (|top#16| state) (concat (|top#15| state) (concat (|top#14| state) (concat (|top#13| state) (|top#12| state)))))) (concat (|top#11| state) (concat (|top#10| state) (concat (|top#9| state) (concat (|top#8| state) (concat (|top#7| state) (|top#6| state)))))))) ; $ne$top.sv:19$9_Y
(define-fun |top#42| ((state |top_s|)) Bool (and (or  (|top#40| state) false) (or  (|top#41| state) false))) ; $logic_and$top.sv:19$10_Y
; yosys-smt2-assume 0 ASSUME_VALID_ERROR_POS2
(define-fun |top_u 0| ((state |top_s|)) Bool (or (|top#42| state) (not true))) ; ASSUME_VALID_ERROR_POS2
(define-fun |top#43| ((state |top_s|)) Bool (bvule (concat (|top#17| state) (concat (|top#16| state) (concat (|top#15| state) (concat (|top#14| state) (concat (|top#13| state) (|top#12| state)))))) #b100110)) ; $le$top.sv:18$3_Y
(define-fun |top#44| ((state |top_s|)) Bool (bvuge (concat (|top#17| state) (concat (|top#16| state) (concat (|top#15| state) (concat (|top#14| state) (concat (|top#13| state) (|top#12| state)))))) #b000000)) ; $ge$top.sv:18$4_Y
(define-fun |top#45| ((state |top_s|)) Bool (and (or  (|top#43| state) false) (or  (|top#44| state) false))) ; $logic_and$top.sv:18$5_Y
; yosys-smt2-assume 1 ASSUME_VALID_ERROR_POS1
(define-fun |top_u 1| ((state |top_s|)) Bool (or (|top#45| state) (not true))) ; ASSUME_VALID_ERROR_POS1
; yosys-smt2-assume 2 ASSUME_DECODER_ENABLE
(define-fun |top_u 2| ((state |top_s|)) Bool (or (= ((_ extract 0 0) (|top#28| state)) #b1) (not true))) ; ASSUME_DECODER_ENABLE
; yosys-smt2-assert 0 ASSERT_SINGLE_ECC
(define-fun |top_a 0| ((state |top_s|)) Bool (or (|top#0| state) (not (= ((_ extract 0 0) (|top#29| state)) #b1)))) ; ASSERT_SINGLE_ECC
(define-fun |top#46| ((state |top_s|)) (_ BitVec 1) (bvnot (ite (|top#0| state) #b1 #b0))) ; $eq$top.sv:29$18_Y
; yosys-smt2-assert 1 ASSERT_NO_SINGLE_ECC
(define-fun |top_a 1| ((state |top_s|)) Bool (or (= ((_ extract 0 0) (|top#46| state)) #b1) (not (= ((_ extract 0 0) (|top#30| state)) #b1)))) ; ASSERT_NO_SINGLE_ECC
(define-fun |top#47| ((state |top_s|)) (_ BitVec 1) (bvnot (ite (|top#3| state) #b1 #b0))) ; $eq$top.sv:26$16_Y
; yosys-smt2-assert 2 ASSERT_NO_DOUBLE_ED
(define-fun |top_a 2| ((state |top_s|)) Bool (or (= ((_ extract 0 0) (|top#47| state)) #b1) (not (= ((_ extract 0 0) (|top#29| state)) #b1)))) ; ASSERT_NO_DOUBLE_ED
(define-fun |top#48| ((state |top_s|)) Bool (distinct (concat (|top#27| state) (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state)))))))))) (|top#5| state))) ; $ne$top.sv:21$12_Y
; yosys-smt2-assert 3 ASSERT_ERROR_PRESENT
(define-fun |top_a 3| ((state |top_s|)) Bool (or (|top#48| state) (not true))) ; ASSERT_ERROR_PRESENT
; yosys-smt2-assert 4 ASSERT_DOUBLE_ED
(define-fun |top_a 4| ((state |top_s|)) Bool (or (|top#3| state) (not (= ((_ extract 0 0) (|top#30| state)) #b1)))) ; ASSERT_DOUBLE_ED
(define-fun |top#49| ((state |top_s|)) Bool (= (concat (|top#1| state) (|top#2| state)) (concat (|top#27| state) (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state)))))))))))) ; $eq$top.sv:24$14_Y
; yosys-smt2-assert 5 ASSERT_DATA_RECOVERED
(define-fun |top_a 5| ((state |top_s|)) Bool (or (|top#49| state) (not (= ((_ extract 0 0) (|top#29| state)) #b1)))) ; ASSERT_DATA_RECOVERED
(define-fun |top#50| ((state |top_s|)) Bool (distinct (concat (|top#1| state) (|top#2| state)) (concat (|top#27| state) (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state)))))))))))) ; $ne$top.sv:28$17_Y
; yosys-smt2-assert 6 ASSERT_DATA_NOT_RECOVERED
(define-fun |top_a 6| ((state |top_s|)) Bool (or (|top#50| state) (not (= ((_ extract 0 0) (|top#30| state)) #b1)))) ; ASSERT_DATA_NOT_RECOVERED
(define-fun |top_a| ((state |top_s|)) Bool (and
  (|top_a 0| state)
  (|top_a 1| state)
  (|top_a 2| state)
  (|top_a 3| state)
  (|top_a 4| state)
  (|top_a 5| state)
  (|top_a 6| state)
  (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_a| (|top_h channel| state))
  (|rvecc_decode_a| (|top_h decoder| state))
  (|rvecc_encode_a| (|top_h encoder| state))
))
(define-fun |top_u| ((state |top_s|)) Bool (and
  (|top_u 0| state)
  (|top_u 1| state)
  (|top_u 2| state)
  (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_u| (|top_h channel| state))
  (|rvecc_decode_u| (|top_h decoder| state))
  (|rvecc_encode_u| (|top_h encoder| state))
))
(define-fun |top_i| ((state |top_s|)) Bool (and
  (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_i| (|top_h channel| state))
  (|rvecc_decode_i| (|top_h decoder| state))
  (|rvecc_encode_i| (|top_h encoder| state))
))
(define-fun |top_h| ((state |top_s|)) Bool (and
  (= (|top_is| state) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_is| (|top_h channel| state)))
  (= (= ((_ extract 0 0) (|top#4| state)) #b1) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_n sed_ded| (|top_h channel| state))) ; $paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111.sed_ded
  (= (concat (|top#11| state) (concat (|top#10| state) (concat (|top#9| state) (concat (|top#8| state) (concat (|top#7| state) (|top#6| state)))))) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_n error_pos2| (|top_h channel| state))) ; $paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111.error_pos2
  (= (concat (|top#17| state) (concat (|top#16| state) (concat (|top#15| state) (concat (|top#14| state) (concat (|top#13| state) (|top#12| state)))))) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_n error_pos1| (|top_h channel| state))) ; $paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111.error_pos1
  (= (|top#5| state) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_n dout| (|top_h channel| state))) ; $paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111.dout
  (= (concat (|top#27| state) (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state)))))))))) (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_n din| (|top_h channel| state))) ; $paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111.din
  (= (|top_is| state) (|rvecc_decode_is| (|top_h decoder| state)))
  (= (|top#0| state) (|rvecc_decode_n single_ecc_error| (|top_h decoder| state))) ; rvecc_decode.single_ecc_error
  (= (= ((_ extract 0 0) (|top#4| state)) #b1) (|rvecc_decode_n sed_ded| (|top_h decoder| state))) ; rvecc_decode.sed_ded
  (= (= ((_ extract 0 0) (|top#28| state)) #b1) (|rvecc_decode_n en| (|top_h decoder| state))) ; rvecc_decode.en
  (= (|top#1| state) (|rvecc_decode_n ecc_out| (|top_h decoder| state))) ; rvecc_decode.ecc_out
  (= ((_ extract 38 32) (|top#5| state)) (|rvecc_decode_n ecc_in| (|top_h decoder| state))) ; rvecc_decode.ecc_in
  (= (|top#2| state) (|rvecc_decode_n dout| (|top_h decoder| state))) ; rvecc_decode.dout
  (= (|top#3| state) (|rvecc_decode_n double_ecc_error| (|top_h decoder| state))) ; rvecc_decode.double_ecc_error
  (= ((_ extract 31 0) (|top#5| state)) (|rvecc_decode_n din| (|top_h decoder| state))) ; rvecc_decode.din
  (= (|top_is| state) (|rvecc_encode_is| (|top_h encoder| state)))
  (= (|top#27| state) (|rvecc_encode_n ecc_out| (|top_h encoder| state))) ; rvecc_encode.ecc_out
  (= (concat (|top#26| state) (concat (|top#25| state) (concat (|top#24| state) (concat (|top#23| state) (concat (|top#22| state) (concat (|top#21| state) (concat (|top#20| state) (concat (|top#19| state) (|top#18| state))))))))) (|rvecc_encode_n din| (|top_h encoder| state))) ; rvecc_encode.din
  (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_h| (|top_h channel| state))
  (|rvecc_decode_h| (|top_h decoder| state))
  (|rvecc_encode_h| (|top_h encoder| state))
))
(define-fun |top_t| ((state |top_s|) (next_state |top_s|)) Bool (and
  (|$paramod/channel_model/DATA_WIDTH=s32'00000000000000000000000000100111_t| (|top_h channel| state) (|top_h channel| next_state))
  (|rvecc_decode_t| (|top_h decoder| state) (|top_h decoder| next_state))
  (|rvecc_encode_t| (|top_h encoder| state) (|top_h encoder| next_state))
)) ; end of module top
; yosys-smt2-topmod top
; end of yosys output
